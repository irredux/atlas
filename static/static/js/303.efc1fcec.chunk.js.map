{"version":3,"file":"static/js/303.efc1fcec.chunk.js","mappings":"iMAIA,SAAUA,IACNC,EAAAA,EAAAA,UAAoBA,EAAAA,EAAAA,UAAAA,MAAuB,SAACC,EAAEC,GAAH,OAAOD,EAAEE,KAAKD,EAAEC,QAC3DH,EAAAA,EAAAA,UAAoBA,EAAAA,EAAAA,UAAAA,QAAyB,SAAAC,GAAC,YAAeG,IAAZH,EAAEI,SAAqBJ,EAAEI,UAAUL,EAAAA,EAAAA,gBACpF,OAAoCM,EAAAA,EAAAA,YAASN,EAAAA,EAAAA,UAAAA,OAAyB,IAAtE,eAAOO,EAAP,KAAmBC,EAAnB,KAkBA,OAAO,UAAC,IAAD,WACFR,EAAAA,EAAAA,UAAAA,KAAsB,SAACS,EAAEC,GAAK,OAAGH,GAAYG,EAAE,GAAU,UAAC,IAAD,CAAeC,QAAa,IAAJD,EAAM,UAAU,YAAxC,WAAqD,SAAC,YAAD,UAAgBD,EAAEG,SAAsB,wBAlBxIC,EAkBuJJ,EAAEN,KAHlK,GAAN,OAAUU,EAAEC,UAAU,EAAE,IAAxB,aAdmB,CACf,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,MACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,YACN,GAAM,UACN,GAAM,WACN,GAAM,YAEiCD,EAAEC,UAAU,EAAE,IAAzD,YAAgED,EAAEC,UAAU,EAAE,OAGqGL,EAAEM,cAA/GL,GAAgJ,KAlBvM,IAAAG,KAmBdN,EAAW,MAAK,SAAC,IAAD,CAAOS,MAAO,CAACC,OAAQ,UAAWC,UAAW,QAASC,UAAW,UAAWR,QAAQ,YAAYS,QAAS,WAAKZ,GAAc,IAA5H,+C,yGCtBrBa,EACAC,EACAC,EACAC,ECKAC,E,4ODHEC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAO,IAAD,mBACd,cAAMA,IACDC,MAAQ,CAACC,KAAM,KAAMC,eAAgB,KAAMN,iBAAkB,CAAC,CAAC,KAAM,QAC1E,IAAMO,EAAW,mCAAG,oGAEwD,QAAO,YAAgBJ,EAAMK,aAA7B,QAFxD,gBAEbX,EAFa,EAEbA,SAAUC,EAFG,EAEHA,YAAaE,EAFV,EAEUA,iBAAkBD,EAF5B,EAE4BA,kBAC5C,EAAKU,SAAS,CAACT,iBAAkBA,MAHjB,2CAAH,qDAHH,OAQdO,IARc,EAuFlB,OA9EC,8BAED,WAAS,IAAD,OACJ,OAAO,iCACH,SAACG,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACI,SAACJ,EAAA,WAAD,CAAiBK,UAAU,wBAA3B,UACI,SAACL,EAAA,OAAD,WACI,SAAC,KAAD,CACAM,QAAQ,QACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CC,WAAYC,KAAKjB,MAAME,eACvBgB,cAAeD,KAAKjB,MAAMJ,iBAC1BuB,YAAa,CAAC,CAAC,SAAU,MAAO,CAAC,YAAa,SAC9CC,OAAQH,KAAKjB,MAAMqB,oBAI3B,UAACf,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,WACI,SAACL,EAAA,OAAD,UACCW,KAAKjB,MAAMsB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKjB,MAAMyB,YAAaC,QAAST,KAAKjB,MAAM0B,UAChH,QAED,SAACpB,EAAA,OAAD,UACKlC,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASuD,UAAW,CACvC,CAAC,cAAD,iBAAe,wFACRC,OAAOC,QAAQ,wCADP,gCAEazD,EAAAA,EAAAA,MAAAA,KAAmB,CAAC0D,cAAc,aAAcC,MAAM,cAFnE,OAEDC,EAFC,OAGP,EAAK3B,SAAS,CAACH,eAAgB,CAAC,CAAC+B,GAAI,EAAGpD,EAAG,KAAMqD,EAAG,IAAKC,EAAEH,MAHpD,0DAWvC,SAACvB,EAAA,EAAD,CAAWE,UAAU,WAArB,UACI,SAACyB,EAAD,CACIC,SAAU,SAACC,EAAGC,GAAO,EAAKxC,MAAMsC,SAASC,EAAGC,IAC5ChB,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCgB,gBAAiBvB,KAAKjB,MAAMwC,gBAC5BlB,MAAOL,KAAKjB,MAAMsB,MAClBG,YAAaR,KAAKjB,MAAMyB,YACxBC,QAAST,KAAKjB,MAAM0B,QACpBe,SAAWxB,KAAKjB,MAAMC,KAAM,UAAU,UACtCyC,WAAY,SAAAzC,GACR,EAAKI,SAAS,CAACJ,KAAMA,SAI/B7B,EAAAA,EAAAA,OAAe,WAAW6C,KAAKjB,MAAMC,MAAM,SAAC0C,EAAD,CAAY1C,KAAMgB,KAAKjB,MAAMC,KAAM2C,SAAU,SAAAX,GAAK,EAAKY,YAAYZ,IAAMa,SAAU,WAAK,EAAKvB,SAAS,EAAKvB,MAAMyB,cAAesB,QAAS,WAAK,EAAK1C,SAAS,CAACJ,KAAM,UAAY,QAEnO,4DACD,WAAkBgC,GAAlB,2FACwB7D,EAAAA,EAAAA,MAAAA,IAAkB,CAAC6D,GAAIA,IAD/C,OACqDe,GAA7CA,EADR,QACuE,GAC/DR,EAAkBvB,KAAKjB,MAAMwC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAKe,EAAQf,MACrEO,EAAgBS,GAAkBD,EAClC/B,KAAKZ,SAAS,CAACmC,gBAAiBA,EAAiBvC,KAAM+C,IAL3D,mGADC,IACD,4DAOA,WAAkBG,EAAUpC,GAA5B,gFACIE,KAAKZ,SAAS,CAACgB,cAAc,SAAC+B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SADlE,SAEwBlF,EAAAA,EAAAA,MAAAA,OAAqB+E,EAAU,CAAC7B,OAAM,EAAMP,MAAMA,IAF1E,cAEUO,EAFV,gBAGkClD,EAAAA,EAAAA,MAAAA,OAAqB+E,EAAU,CAACI,MAAM,GAAIxC,MAAMA,IAHlF,OAGUyB,EAHV,OAIOlB,EAAM,GAAN,MAAkB,EAAGL,KAAKZ,SAAS,CAACgB,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKZ,SAAS,CAACgB,aAAc,wBACvDJ,KAAKZ,SAAS,CAACgB,aAAc,gCAClCJ,KAAKZ,SAAS,CACVmD,MAAOL,EACPM,WAAY1C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASgC,KAAKC,MAAMrC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbe,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MAd9B,qGAPA,IAOA,yDAiBA,WAAerC,GAAf,uFACkCpD,EAAAA,EAAAA,MAAAA,OAAqB6C,KAAKjB,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAXtC,EAAQ,GAAQT,MAAME,KAAKjB,MAAMyD,aAD9H,OACUjB,EADV,OAEQvB,KAAKZ,SAAS,CACVoB,YAAaD,EACbgB,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MALlC,mGAjBA,MAiBA,EAxFE/D,CAAciE,EAAAA,WAiGd3B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrC,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAqBjB,OAlBA,8BACD,WAAS,IAAD,OACJ,GAAG5C,KAAKlB,MAAMuB,MAAM,EAAE,CAClB,IADkB,EACd4C,EAAO,GADO,UAEDjD,KAAKlB,MAAMyC,iBAFV,IAElB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC2B,EAAkC,QACxCD,EAAKE,MAAK,SAAC3E,EAAD,CAAuBsC,MAAOoC,EAAK9B,SAAU,SAAAC,GAAI,EAAKvC,MAAMsC,SAASC,EAAG,WAAaI,WAAY,SAAC2B,GAAO,EAAKtE,MAAM2C,WAAW,EAAK3C,MAAMyC,gBAAgB8B,MAAK,SAAAxF,GAAC,OAAGA,EAAEmD,KAAOoC,QAA7JF,EAAIlC,MAHf,8BAMlB,OACA,gBAAK7C,MAAO,CAACqD,SAAUxB,KAAKlB,MAAM0C,SAAU8B,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACI,kBAAOtF,MAAO,CAACG,UAAU,QAAzB,UAAkC,SAACG,EAAD,OAClC,2BAAQwE,SAIhB,OAAO,SAAC,KAAD,QAEd,EAtBC9B,CAAiB2B,EAAAA,WAyBjBpB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY5C,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACiC,GAAI,EAAKlC,MAAME,KAAKgC,IAFpB,EAgBjB,OAbA,8BACD,WAAS,IAAD,OACJ,OAAO,UAAC0C,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjF,MAAMgD,WAA9F,WACH,SAAC4B,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB1D,KAAKlB,MAAME,KAAKgC,SAEzC,SAAC0C,EAAA,OAAD,WAAgB,SAAChF,EAAD,CAAmBsC,GAAIhB,KAAKjB,MAAMiC,GAAIhC,KAAMgB,KAAKlB,MAAME,KAAM2C,SAAU,SAAAX,GAAK,EAAKlC,MAAM6C,SAASX,IAAOc,QAAS,WAAK,EAAKhD,MAAMgD,WAAYD,SAAU,WAAK,EAAK/C,MAAM+C,qBAE7L,gCACD,WACO7B,KAAKjB,MAAMiC,KAAKhB,KAAKlB,MAAME,KAAKgC,IAC/BhB,KAAKZ,SAAS,CAAC4B,GAAIhB,KAAKlB,MAAME,KAAKgC,SAE1C,EAjBCU,CAAmBoB,EAAAA,W,sEE5HnBmB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYnF,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,KACNC,eAAgB,MAJN,EAwFlB,OAlFC,8BAED,WAAS,IAAD,OACJ,OAAO,iCACH,SAACI,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACI,SAACJ,EAAA,WAAD,CAAiBK,UAAU,wBAA3B,UACI,SAACL,EAAA,OAAD,WACI,SAAC,KAAD,CACAU,WAAYC,KAAKjB,MAAME,eACvBU,QAAQ,SACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CG,cAAe,CACX,CAAC,KAAM,OAEXC,YAAa,CAAC,CAAC,SAAU,OACzBC,OAAQH,KAAKjB,MAAMqB,oBAI3B,UAACf,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,WACI,SAACL,EAAA,OAAD,UACCW,KAAKjB,MAAMsB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKjB,MAAMyB,YAAaC,QAAST,KAAKjB,MAAM0B,UAChH,QAED,SAACpB,EAAA,OAAD,UACKlC,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASuD,UAAW,CACvC,CAAC,iBAAD,iBAAkB,wFACXC,OAAOC,QAAQ,2CADJ,gCAEUzD,EAAAA,EAAAA,OAAAA,KAAoB,CAAC+G,MAAO,eAFtC,OAEJnD,EAFI,OAGV,EAAK3B,SAAS,CAACH,eAAgB,CAAC,CAAC+B,GAAI,EAAGpD,EAAG,KAAMqD,EAAG,IAAKC,EAAEH,MAHjD,0DAW1C,SAACvB,EAAA,EAAD,CAAWE,UAAU,WAArB,UACI,SAACyE,EAAD,CACI7D,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCgB,gBAAiBvB,KAAKjB,MAAMwC,gBAC5BlB,MAAOL,KAAKjB,MAAMsB,MAClBG,YAAaR,KAAKjB,MAAMyB,YACxBC,QAAST,KAAKjB,MAAM0B,QACpBe,SAAWxB,KAAKjB,MAAMC,KAAM,UAAU,UACtCyC,WAAY,SAAAzC,GACR,EAAKI,SAAS,CAACJ,KAAMA,SAI/B7B,EAAAA,EAAAA,OAAe,WAAW6C,KAAKjB,MAAMC,MAAM,SAACoF,EAAD,CAAapF,KAAMgB,KAAKjB,MAAMC,KAAM2C,SAAU,SAAAX,GAAK,EAAKY,YAAYZ,IAAMa,SAAU,WAAK,EAAKvB,SAAS,EAAKvB,MAAMyB,cAAesB,QAAS,WAAK,EAAK1C,SAAS,CAACJ,KAAM,UAAY,QAEpO,4DACD,WAAkBgC,GAAlB,gFACOA,EAAG,GADV,iCAE4B7D,EAAAA,EAAAA,OAAAA,IAAmB,CAAC6D,GAAIA,IAFpD,OAE0De,GAA9CA,EAFZ,QAE4E,GAChER,EAAkBvB,KAAKjB,MAAMwC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAKe,EAAQf,MACrEO,EAAgBS,GAAkBD,EAClC/B,KAAKZ,SAAS,CAACmC,gBAAiBA,EAAiBvC,KAAM+C,IAN/D,wBAQQ/B,KAAKZ,SAAS,CAACmC,gBAAiB,GAAIvC,KAAM,OARlD,oGADC,IACD,4DAWA,WAAkBkD,EAAUpC,GAA5B,yFACwB3C,EAAAA,EAAAA,OAAAA,OAAsB+E,EAAU,CAAC7B,OAAM,EAAMP,MAAMA,IAD3E,cACUO,EADV,gBAEkClD,EAAAA,EAAAA,OAAAA,OAAsB+E,EAAU,CAACI,MAAM,GAAIxC,MAAMA,IAFnF,OAEUyB,EAFV,OAGOlB,EAAM,GAAN,MAAkB,EAAGL,KAAKZ,SAAS,CAACgB,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKZ,SAAS,CAACgB,aAAc,wBACvDJ,KAAKZ,SAAS,CAACgB,aAAc,gCAClCJ,KAAKZ,SAAS,CACVmD,MAAOL,EACPM,WAAY1C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASgC,KAAKC,MAAMrC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbe,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MAb9B,qGAXA,IAWA,yDAgBA,WAAerC,GAAf,uFACkCpD,EAAAA,EAAAA,OAAAA,OAAsB6C,KAAKjB,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAXtC,EAAQ,GAAQT,MAAME,KAAKjB,MAAMyD,aAD/H,OACUjB,EADV,OAEQvB,KAAKZ,SAAS,CACVoB,YAAaD,EACbgB,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MALlC,mGAhBA,MAgBA,EAzFEqB,CAAenB,EAAAA,WAkGfqB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrF,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAwBjB,OArBA,8BACD,WAAS,IAAD,OACJ,GAAG5C,KAAKlB,MAAMuB,MAAM,EAAE,CAClB,IADkB,EACd4C,EAAO,GADO,UAEDjD,KAAKlB,MAAMyC,iBAFV,IAElB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC2B,EAAkC,QACxCD,EAAKE,MAAK,gBAAiBnC,GAAIkC,EAAIlC,GAAIqD,cAAe,SAAAhD,GAAI,EAAKvC,MAAM2C,WAAW,EAAK3C,MAAMyC,gBAAgB8B,MAAK,SAAAxF,GAAC,OAAGA,EAAEmD,KAAOsD,SAASjD,EAAEkD,OAAOC,QAAQ,MAAMxD,SAAnJ,WAA2J,eAAIjD,MAAO,OAAOmF,EAAIlC,GAAtB,SAA2BkC,EAAIuB,cAAgB,0BAAKvB,EAAIwB,SAAT,IAAoBxB,EAAIyB,cAAJ,WAAsBzB,EAAIyB,cAA1B,KAA2C,SAAU,0BACxRzB,EAAI0B,KADoR,KAC5Q1B,EAAI2B,QADwQ,MAC9P,uBAAI3B,EAAIgB,QADsP,KACzOhB,EAAI4B,MADqO,KAC5N5B,EAAI6B,IADwN,IAClN7B,EAAI8B,SAE3E,0BAAK9B,EAAI+B,gBAAiB/B,EAAIgC,OAAO,MAAMhC,EAAIgC,OAAO,UAHvChC,EAAIlC,MAHT,8BASlB,OACA,gBAAK7C,MAAO,CAACqD,SAAUxB,KAAKlB,MAAM0C,SAAU8B,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOE,MAAM,OAAOD,SAAO,EAA3B,WACI,kBAAOrF,MAAO,CAACG,UAAU,QAAzB,UAAkC,2BAAI,eAAImF,MAAM,MAAV,yBAA+B,eAAIA,MAAM,MAAV,uBAA6B,eAAIA,MAAM,MAAV,8BAAoC,kDACtI,2BAAQR,SAIhB,OAAO,SAAC,KAAD,QAEd,EAzBCkB,CAAkBrB,EAAAA,WA2BlBsB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYtF,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTiC,GAAI,EAAKlC,MAAME,KAAKgC,GACpByD,WAAY,EAAK3F,MAAME,KAAKyF,WAC5BC,SAAU,EAAK5F,MAAME,KAAK0F,SAC1BC,cAAe,EAAK7F,MAAME,KAAK2F,cAC/BC,KAAM,EAAK9F,MAAME,KAAK4F,KACtBC,QAAS,EAAK/F,MAAME,KAAK6F,QACzBX,MAAO,EAAKpF,MAAME,KAAKkF,MACvBY,MAAO,EAAKhG,MAAME,KAAK8F,MACvBG,gBAAiB,EAAKnG,MAAME,KAAKiG,gBACjCF,IAAK,EAAKjG,MAAME,KAAK+F,IACrBC,KAAM,EAAKlG,MAAME,KAAKgG,KACtBE,OAAQ,EAAKpG,MAAME,KAAKkG,QAdd,EAkHjB,OAlGA,8BACD,WAAS,IAAD,OACJ,OAAO,UAACxB,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjF,MAAMgD,WAA9F,WACX,SAAC4B,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB1D,KAAKjB,MAAMiC,SAEpC,UAAC0C,EAAA,OAAD,YACI,UAACyB,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,0BACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM0F,WAAWzE,KAAKjB,MAAM0F,WAAW,GAAIe,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACqF,WAAYpD,EAAEkD,OAAOgB,iBAErI,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,wBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM2F,SAAS1E,KAAKjB,MAAM2F,SAAS,GAAIc,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACsF,SAAUrD,EAAEkD,OAAOgB,iBAE/H,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,6BACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM4F,cAAc3E,KAAKjB,MAAM4F,cAAc,GAAIa,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACuF,cAAetD,EAAEkD,OAAOgB,iBAE9I,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM6F,KAAK5E,KAAKjB,MAAM6F,KAAK,GAAIY,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACwF,KAAMvD,EAAEkD,OAAOgB,iBAEnH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,uBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM8F,QAAQ7E,KAAKjB,MAAM8F,QAAQ,GAAIW,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACyF,QAASxD,EAAEkD,OAAOgB,iBAE5H,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,qBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAMmF,MAAMlE,KAAKjB,MAAMmF,MAAM,GAAIsB,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC8E,MAAO7C,EAAEkD,OAAOgB,iBAEtH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,qBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAM+F,MAAM9E,KAAKjB,MAAM+F,MAAM,GAAIU,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC0F,MAAOzD,EAAEkD,OAAOgB,iBAEtH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,mBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAMgG,IAAI/E,KAAKjB,MAAMgG,IAAI,GAAIS,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC2F,IAAK1D,EAAEkD,OAAOgB,iBAEhH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAMiG,KAAKhF,KAAKjB,MAAMiG,KAAK,GAAIQ,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC4F,KAAM3D,EAAEkD,OAAOgB,iBAEnH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,+BACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAMkG,gBAAgBjF,KAAKjB,MAAMkG,gBAAgB,GAAIO,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC6F,gBAAiB5D,EAAEkD,OAAOgB,iBAEpJ,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,sBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOC,MAAOvF,KAAKjB,MAAMmG,OAAOlF,KAAKjB,MAAMmG,OAAO,GAAIM,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC8F,OAAQ7D,EAAEkD,OAAOgB,iBAEzH,SAACJ,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcG,MAAM,YAAYhH,SAAO,iBAAE,8FACxCpB,EAAAA,EAAAA,OAAAA,KAAoB,CACtB6D,GAAI,EAAKjC,MAAMiC,GACfyD,WAAY,EAAK1F,MAAM0F,WACvBC,SAAU,EAAK3F,MAAM0G,UACrBd,cAAe,EAAK5F,MAAM4F,cAC1BC,KAAM,EAAK7F,MAAM6F,KACjBC,QAAS,EAAK9F,MAAM8F,QACpBX,MAAO,EAAKnF,MAAMmF,MAClBY,MAAO,EAAK/F,MAAM+F,MAClBG,gBAAiB,EAAKlG,MAAMkG,gBAC5BF,IAAK,EAAKhG,MAAMgG,IAChBC,KAAM,EAAKjG,MAAMiG,KACjBE,OAAQ,EAAKnG,MAAMmG,SAbuB,cAe9C,EAAKpG,MAAM6C,SAAS,EAAK5C,MAAMiC,IAfe,kBAgBvC,CAACb,QAAQ,IAhB8B,8CAkBlD,SAACuF,EAAA,EAAD,CAAQ5H,QAAQ,SAASK,MAAO,CAACwH,WAAY,QAASpH,SAAO,iBAAE,kFAChDoC,OAAOC,QAAQ,mGADiC,gCAEzCzD,EAAAA,EAAAA,OAAAA,OAAsB,EAAK4B,MAAMiC,IAFQ,OAG/C,EAAKlC,MAAMgD,UACX,EAAKhD,MAAM+C,WAJoC,2CAA/D,qCAUH,gCACD,WACO7B,KAAKjB,MAAMiC,KAAKhB,KAAKlB,MAAME,KAAKgC,IAC/BhB,KAAKZ,SAAS,CACV4B,GAAIhB,KAAKlB,MAAME,KAAKgC,GACpByD,WAAYzE,KAAKlB,MAAME,KAAKyF,WAC5BC,SAAU1E,KAAKlB,MAAME,KAAK0F,SAC1BC,cAAe3E,KAAKlB,MAAME,KAAK2F,cAC/BC,KAAM5E,KAAKlB,MAAME,KAAK4F,KACtBC,QAAS7E,KAAKlB,MAAME,KAAK6F,QACzBX,MAAOlE,KAAKlB,MAAME,KAAKkF,MACvBY,MAAO9E,KAAKlB,MAAME,KAAK8F,MACvBG,gBAAiBjF,KAAKlB,MAAME,KAAKiG,gBACjCF,IAAK/E,KAAKlB,MAAME,KAAK+F,IACrBC,KAAMhF,KAAKlB,MAAME,KAAKgG,KACtBE,OAAQlF,KAAKlB,MAAME,KAAKkG,aAGnC,EAnHCd,CAAoBtB,EAAAA,WAqHpB8C,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY9G,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,KACNC,eAAgB,KAChB4D,OAAQ,GALE,EA6FlB,OAtFC,8BACD,WAAS,IAAD,OACJ,OAAO,iCACH,SAACxD,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACI,SAACJ,EAAA,WAAD,CAAiBK,UAAU,wBAA3B,UACI,SAACL,EAAA,OAAD,WACI,SAAC,KAAD,CACAU,WAAYC,KAAKjB,MAAME,eACvBU,QAAQ,aACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CG,cAAe,CACX,CAAC,SAAU,QACX,CAAC,UAAW,WACZ,CAAC,YAAa,iBACd,CAAC,KAAM,MACP,CAAC,OAAQ,cAEbC,YAAa,CAAC,CAAC,SAAU,MAAO,CAAC,YAAa,aAAW,CAAC,WAAY,eACtEC,OAAQH,KAAKjB,MAAMqB,oBAI3B,UAACf,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,WACI,SAACL,EAAA,OAAD,UACCW,KAAKjB,MAAMsB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKjB,MAAMyB,YAAaC,QAAST,KAAKjB,MAAM0B,UAChH,QAED,SAACpB,EAAA,OAAD,UACKlC,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASuD,UAAW,CACvC,CAAC,kBAAD,iBAAmB,wFACZC,OAAOC,QAAQ,6CADH,gCAESzD,EAAAA,EAAAA,QAAAA,KAAqB,CAAC0I,UAAW,EAAGC,OAAQ,iBAAkBC,MAAM,IAAIC,MAAOC,gBAFxF,OAELlF,EAFK,OAGX,EAAK3B,SAAS,CAACH,eAAgB,CAAC,CAAC+B,GAAI,EAAGpD,EAAG,KAAMqD,EAAG,IAAKC,EAAEH,MAHhD,0DAW3C,SAACvB,EAAA,EAAD,CAAWE,UAAU,WAArB,UACI,SAACwG,EAAD,CACI5F,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCgB,gBAAiBvB,KAAKjB,MAAMwC,gBAC5BlB,MAAOL,KAAKjB,MAAMsB,MAClBG,YAAaR,KAAKjB,MAAMyB,YACxBC,QAAST,KAAKjB,MAAM0B,QACpBe,SAAWxB,KAAKjB,MAAMC,KAAM,UAAU,UACtCyC,WAAY,SAAAzC,GACR,EAAKI,SAAS,CAACJ,KAAMA,SAI/B7B,EAAAA,EAAAA,OAAe,WAAW6C,KAAKjB,MAAMC,MAAM,SAACmH,EAAD,CAAgBnH,KAAMgB,KAAKjB,MAAMC,KAAM2C,SAAU,SAAAX,GAAK,EAAKY,YAAYZ,IAAMa,SAAU,WAAK,EAAKvB,SAAS,EAAKvB,MAAMyB,cAAesB,QAAS,WAAK,EAAK1C,SAAS,CAACJ,KAAM,UAAY,QAEvO,4DACD,WAAkBgC,GAAlB,kFACOA,EAAG,GADV,iCAE4B7D,EAAAA,EAAAA,QAAAA,IAAoB,CAAC6D,GAAIA,IAFrD,OAE2De,GAA/CA,EAFZ,QAE6E,GACjER,EAAkBvB,KAAKjB,MAAMwC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAKe,EAAQf,MACrEO,EAAgBS,GAAkBD,EAClC/B,KAAKZ,SAAS,CAACmC,gBAAiBA,EAAiBvC,KAAM+C,IAN/D,yCAQsC5E,EAAAA,EAAAA,QAAAA,OAAuB6C,KAAKjB,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAO7C,KAAKjB,MAAM8D,OAAQ/C,MAAME,KAAKjB,MAAMyD,aARrI,QAQcjB,EARd,OASQvB,KAAKZ,SAAS,CAACmC,gBAAiBA,EAAiBvC,KAAM,OAT/D,oGADC,IACD,4DAYA,WAAkBkD,EAAUpC,GAA5B,yFACwB3C,EAAAA,EAAAA,QAAAA,OAAuB+E,EAAU,CAAC7B,OAAM,EAAMP,MAAMA,IAD5E,cACUO,EADV,gBAEkClD,EAAAA,EAAAA,QAAAA,OAAuB+E,EAAU,CAACI,MAAM,GAAIxC,MAAMA,IAFpF,OAEUyB,EAFV,OAGOlB,EAAM,GAAN,MAAkB,EAAGL,KAAKZ,SAAS,CAACgB,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKZ,SAAS,CAACgB,aAAc,wBACvDJ,KAAKZ,SAAS,CAACgB,aAAc,gCAClCJ,KAAKZ,SAAS,CACVmD,MAAOL,EACPM,WAAY1C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASgC,KAAKC,MAAMrC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbe,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MAb9B,qGAZA,IAYA,yDAgBA,WAAerC,GAAf,uFACkCpD,EAAAA,EAAAA,QAAAA,OAAuB6C,KAAKjB,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAXtC,EAAQ,GAAQT,MAAME,KAAKjB,MAAMyD,aADhI,OACUjB,EADV,OAEQvB,KAAKZ,SAAS,CACVyD,OAAqB,IAAXtC,EAAQ,GAClBC,YAAaD,EACbgB,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MANlC,mGAhBA,MAgBA,EA9FEgD,CAAkB9C,EAAAA,WAwGlBoD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYpH,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAkCjB,OA/BA,8BACD,WAAS,IAAD,OACJ,GAAG5C,KAAKlB,MAAMuB,MAAM,EAAE,CAClB,IADkB,EACZ+F,EAAW,CACb,EAAG,qBACH,EAAG,qBACH,EAAG,cACH,EAAG,yBACH,EAAG,yBACH,EAAG,aAGHnD,EAAO,GAVO,UAWDjD,KAAKlB,MAAMyC,iBAXV,IAWlB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC2B,EAAkC,QACpCmD,EAAMnD,EAAImD,IACL,KAANA,GAAgB,OAANA,IAAYA,EAAM,eAAenD,EAAIlC,IAClDiC,EAAKE,MAAK,gBAAiBnC,GAAIkC,EAAIlC,GAAIqD,cAAe,SAAAhD,GAAI,EAAKvC,MAAM2C,WAAW,EAAK3C,MAAMyC,gBAAgB8B,MAAK,SAAAxF,GAAC,OAAGA,EAAEmD,KAAOsD,SAASjD,EAAEkD,OAAOC,QAAQ,MAAMxD,SAAnJ,WAA2J,eAAIjD,MAAO,OAAOmF,EAAIlC,GAAtB,SAA2BkC,EAAIoD,SAAW,wBAAKF,EAASlD,EAAI2C,cAAgB,eAAIU,yBAAyBC,EAAAA,EAAAA,IAAUtD,EAAIuD,SAAY,2BAAI,cAAGC,KAAML,EAAK9B,OAAO,SAArB,uBACxSrB,EAAImD,KAAI,SAAC,IAAD,CAAiBlI,MAAO,CAACwI,SAAS,OAAQhB,WAAY,QAASiB,KAAMC,EAAAA,MAAsB,UADpF3D,EAAIlC,MAdT,8BAmBlB,OACA,gBAAK7C,MAAO,CAACqD,SAAUxB,KAAKlB,MAAM0C,SAAU8B,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOE,MAAM,OAAMD,SAAO,EAA1B,WACI,kBAAOrF,MAAO,CAACG,UAAU,QAAzB,UAAkC,2BAAI,eAAImF,MAAM,MAAV,wBAA2B,eAAIA,MAAM,MAAV,kBAAwB,wCAAmB,eAAIA,MAAM,MAAV,wBAC5G,2BAAQR,SAIhB,OAAO,SAAC,KAAD,QAEd,EAnCCiD,CAAqBpD,EAAAA,WAqCrBqD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrH,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTiC,GAAI,EAAKlC,MAAME,KAAKgC,GACpB6E,UAAW,EAAK/G,MAAME,KAAK6G,UAC3BiB,QAAS,EAAKhI,MAAME,KAAK8H,QACzBC,OAAQ,EAAKjI,MAAME,KAAK+H,OACxBjB,OAAQ,EAAKhH,MAAME,KAAK8G,OACxBC,KAAM,EAAKjH,MAAME,KAAK+G,KACtBiB,OAAQ,EAAKlI,MAAME,KAAKgI,OACxBC,SAAU,EAAKnI,MAAME,KAAKiI,SAC1BC,MAAO,EAAKpI,MAAME,KAAKkI,MACvBC,SAAU,EAAKrI,MAAME,KAAKmI,SAC1BC,QAAS,EAAKtI,MAAME,KAAKoI,QACzB3B,UAAW,EAAK3G,MAAME,KAAKyG,UAC3B4B,QAAS,EAAKvI,MAAME,KAAKqI,QACzBC,KAAM,EAAKxI,MAAME,KAAKsI,KACtBjB,IAAK,EAAKvH,MAAME,KAAKqH,IACrBkB,aAAc,EAAKzI,MAAME,KAAKuI,aAC9BC,qBAAsB,MAnBZ,EA6KlB,OAxJC,8BACD,WAAS,IAAD,OACJ,OAAO,UAAC9D,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjF,MAAMgD,WAA9F,WACP,SAAC4B,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB1D,KAAKjB,MAAMiC,SAEpC,UAAC0C,EAAA,OAAD,YACI,UAACyB,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAeG,MAAOvF,KAAKjB,MAAMgI,OAAO/G,KAAKjB,MAAMgI,OAAO,GAAIU,IAAI,OAAOC,UAAU,SAASC,UAAU,SAASnC,SAAU,SAACD,EAAOvE,GAAM,EAAK5B,SAAS,CAAC2H,OAAQxB,EAAOuB,QAAS9F,IAAK,EAAK4G,mBAAmB5G,YAEpN,UAACmE,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,+BACA,SAACD,EAAA,EAAD,UAAMpF,KAAKlB,MAAME,KAAK6I,cAEzB7H,KAAKjB,MAAMyI,uBAAsB,UAACrC,EAAA,EAAD,CAAKzF,UAAU,OAAf,WAC9B,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yCACA,SAACD,EAAA,EAAD,CAAKjH,MAAO,CAACwI,SAAU,MAAOmB,gBAAiB,qBAA/C,SAAsE9H,KAAKjB,MAAMyI,2BAErF,UAACrC,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yBACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAY2C,QAAS,CAAC,CAAC,EAAG,sBAAuB,CAAC,EAAG,sBAAuB,CAAC,EAAG,eAAgB,CAAC,EAAG,0BAA2B,CAAC,EAAG,0BAA2B,CAAC,EAAG,cAAexC,MAAOvF,KAAKjB,MAAM8G,UAAU7F,KAAKjB,MAAM8G,UAAU,GAAIL,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACyG,UAAWvB,SAASjD,EAAEkD,OAAOgB,iBAEjR,IAAvBvF,KAAKjB,MAAM8G,WAAsC,IAAvB7F,KAAKjB,MAAM8G,WAAsC,IAAvB7F,KAAKjB,MAAM8G,UAAc,EAC1E,UAACV,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,sBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAM+G,OAAO9F,KAAKjB,MAAM+G,OAAO,GAAIN,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC0G,OAAQzE,EAAEkD,OAAOgB,eAFxI,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMgH,KAAK/F,KAAKjB,MAAMgH,KAAK,GAAIP,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC2G,KAAM1E,EAAEkD,OAAOgB,eAFlI,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMiI,OAAOhH,KAAKjB,MAAMiI,OAAO,GAAIxB,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC4H,OAAQ3F,EAAEkD,OAAOgB,eAFxI,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,0BACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMkI,SAASjH,KAAKjB,MAAMkI,SAAS,GAAIzB,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC6H,SAAU5F,EAAEkD,OAAOgB,eAF9I,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,qBACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAY2C,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,cAAe,CAAC,EAAG,2BAA4B,CAAC,EAAG,4BAA6BxC,MAAOvF,KAAKjB,MAAMmI,MAAMlH,KAAKjB,MAAMmI,MAAM,GAAI1B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC8H,MAAO5C,SAASjD,EAAEkD,OAAOgB,gBAFxR,MAIX,KACsB,IAAvBvF,KAAKjB,MAAM8G,UAAc,EACtB,UAACV,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,qBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMoI,SAASnH,KAAKjB,MAAMoI,SAAS,GAAI3B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC+H,SAAU9F,EAAEkD,OAAOgB,eAF9I,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,0BACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMqI,QAAQpH,KAAKjB,MAAMqI,QAAQ,GAAI5B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACgI,QAAS/F,EAAEkD,OAAOgB,eAF3I,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,wBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAM0G,UAAUzF,KAAKjB,MAAM0G,UAAU,GAAID,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACqG,UAAWpE,EAAEkD,OAAOgB,eAFjJ,MAIX,KACsB,IAAvBvF,KAAKjB,MAAM8G,WAAsC,IAAvB7F,KAAKjB,MAAM8G,UAAc,EAChD,UAACV,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,uBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAM+G,OAAO9F,KAAKjB,MAAM+G,OAAO,GAAIN,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC0G,OAAQzE,EAAEkD,OAAOgB,eAFxI,MAIT,UAACJ,EAAA,EAAD,CAAazF,UAAU,OAAvB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,mBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMoI,SAASnH,KAAKjB,MAAMoI,SAAS,GAAI3B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC+H,SAAU9F,EAAEkD,OAAOgB,eAF9I,MAIT,UAACJ,EAAA,EAAD,CAAczF,UAAU,OAAxB,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMgH,KAAK/F,KAAKjB,MAAMgH,KAAK,GAAIP,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC2G,KAAM1E,EAAEkD,OAAOgB,eAFlI,OAIX,MACF,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yBACA,SAACD,EAAA,EAAD,WAAK,qBAAUjH,MAAO,CAACsF,MAAO,QAASuE,OAAQ,SAAUzC,MAAOvF,KAAKjB,MAAMsI,QAAQrH,KAAKjB,MAAMsI,QAAQ,GAAI7B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACiI,QAAShG,EAAEkD,OAAOgB,iBAE7J,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yBACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMuI,KAAKtH,KAAKjB,MAAMuI,KAAK,GAAI9B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACkI,KAAMjG,EAAEkD,OAAOgB,iBAE3I,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,UAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,mBAAiB,mBAAM,qDACvB,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMsH,IAAIrG,KAAKjB,MAAMsH,IAAI,GAAIb,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACiH,IAAKhF,EAAEkD,OAAOgB,iBAExI,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACA,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,oCACA,SAACD,EAAA,EAAD,WAAK,kBAAOE,KAAK,OAAOnH,MAAO,CAACsF,MAAO,QAAS8B,MAAOvF,KAAKjB,MAAMwI,aAAavH,KAAKjB,MAAMwI,aAAa,GAAI/B,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACmI,aAAclG,EAAEkD,OAAOgB,MAAMtH,UAAU,EAAE,cAEjL,SAACkH,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACI,UAAC0F,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcG,MAAM,YAAYhH,SAAO,iBAAE,iFACvB,IAAvB,EAAKQ,MAAM8G,WAAsC,IAAvB,EAAK9G,MAAM8G,WAAsC,IAAvB,EAAK9G,MAAM8G,WAAiB,EAAK9G,MAAMmI,OAAS,EAAKnI,MAAM+G,QAAS,EAAK/G,MAAMgH,KADrF,yCAEvC,CAAC5F,QAAQ,EAAO8H,MAAO,2CAFgB,uBAIxC9K,EAAAA,EAAAA,QAAAA,KAAqB,CACvB6D,GAAI,EAAKjC,MAAMiC,GACf8F,QAAS,EAAK/H,MAAM+H,QACpBjB,UAAW,EAAK9G,MAAM8G,UACtBC,OAAQ,EAAK/G,MAAM+G,OACnBC,KAAM,EAAKhH,MAAMgH,KACjBiB,OAAQ,EAAKjI,MAAMiI,OACnBC,SAAU,EAAKlI,MAAMkI,SACrBC,MAAO,EAAKnI,MAAMmI,MAClBG,QAAS,EAAKtI,MAAMsI,QACpBF,SAAU,EAAKpI,MAAMoI,SACrBC,QAAS,EAAKrI,MAAMqI,QACpB3B,UAAW,EAAK1G,MAAM0G,UACtB6B,KAAM,EAAKvI,MAAMuI,KACjBjB,IAAK,EAAKtH,MAAMsH,IAChBkB,aAAc,EAAKxI,MAAMwI,eAnBiB,cAqB9C,EAAKzI,MAAM6C,SAAS,EAAK5C,MAAMiC,IArBe,kBAsBvC,CAACb,QAAQ,IAtB8B,8CAyBtD,SAACuF,EAAA,EAAD,CAAQ5H,QAAQ,SAASK,MAAO,CAACwH,WAAY,QAASpH,SAAO,iBAAE,kFACxDoC,OAAOC,QAAQ,8GADyC,gCAEjDzD,EAAAA,EAAAA,QAAAA,OAAuB,EAAK4B,MAAMiC,IAFe,OAGvD,EAAKlC,MAAM6C,SAAS,MACpB,EAAK7C,MAAM+C,WAJ4C,2CAA/D,qCAUH,+BACD,WACI7B,KAAK4H,mBAAmB5H,KAAKlB,MAAME,KAAK8H,WAC3C,gCACD,WACO9G,KAAKjB,MAAMiC,KAAKhB,KAAKlB,MAAME,KAAKgC,KAC/BhB,KAAK4H,mBAAmB5H,KAAKlB,MAAME,KAAK8H,SACxC9G,KAAKZ,SAAS,CACV4B,GAAIhB,KAAKlB,MAAME,KAAKgC,GACpB6E,UAAW7F,KAAKlB,MAAME,KAAK6G,UAC3BiB,QAAS9G,KAAKlB,MAAME,KAAK8H,QACzBC,OAAQ/G,KAAKlB,MAAME,KAAK+H,OACxBjB,OAAQ9F,KAAKlB,MAAME,KAAK8G,OACxBC,KAAM/F,KAAKlB,MAAME,KAAK+G,KACtBiB,OAAQhH,KAAKlB,MAAME,KAAKgI,OACxBC,SAAUjH,KAAKlB,MAAME,KAAKiI,SAC1BC,MAAOlH,KAAKlB,MAAME,KAAKkI,MACvBC,SAAUnH,KAAKlB,MAAME,KAAKmI,SAC1BC,QAASpH,KAAKlB,MAAME,KAAKoI,QACzB3B,UAAWzF,KAAKlB,MAAME,KAAKyG,UAC3B4B,QAASrH,KAAKlB,MAAME,KAAKqI,QACzBC,KAAMtH,KAAKlB,MAAME,KAAKsI,KACtBjB,IAAKrG,KAAKlB,MAAME,KAAKqH,IACrBkB,aAAcvH,KAAKlB,MAAME,KAAKuI,kBAGzC,mEACD,WAAyBT,GAAzB,4EACOA,EAAQ,GADf,gCAEiC3J,EAAAA,EAAAA,KAAAA,IAAiB,CAAC6D,GAAI8F,GAAU,CAACoB,OAAQ,CAAC,kBAF3E,QAEYC,EAFZ,QAGwBC,OAAS,EACrBpI,KAAKZ,SAAS,CAACoI,qBAAsBW,EAAa,GAAGA,eAErDnI,KAAKZ,SAAS,CAACoI,qBAAsB,OANjD,mGADC,MACD,EA9KErB,CAAuBrD,EAAAA,W,gDDvX7B,SAASuF,EAAWvJ,GAAO,IAAD,OACtB,GAAgCrB,EAAAA,EAAAA,UAAS,IAAzC,eACA,GADA,WACsCA,EAAAA,EAAAA,UAAS,OAA/C,eAAO6K,EAAP,KAAoBC,EAApB,KACA,GAAkC9K,EAAAA,EAAAA,UAAS,IAA3C,eAAO+K,EAAP,KAAkBC,EAAlB,KACA,GAAgChL,EAAAA,EAAAA,UAAS,IAAzC,eAAOiL,EAAP,KAAiBC,EAAjB,KACA,GAAwClL,EAAAA,EAAAA,UAAS,IAAjD,eAAOmL,EAAP,KAAqBC,EAArB,KA2BA,OA1BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAC,4GACiB,uCADjB,uBACTnK,EADS,EACTA,gBADS,SAESzB,EAAAA,EAAAA,WAAAA,SAFT,OAEN6L,EAFM,OAGRC,EAAe,GACfC,EAAc,GACdC,EAAkB,GACtBH,EAAOI,SAAQ,SAAApL,GACX,GAAY,iBAATA,EAAE4G,KACD2D,EAAec,KAAKC,MAAMtL,EAAEuL,YAC1B,GAA2B,WAAxBvL,EAAE4G,KAAK3G,UAAU,EAAE,GACxBgL,EAAa9F,MAAK,SAACvE,EAAD,CAA4BgG,KAAM5G,EAAE4G,KAAM2E,KAAMF,KAAKC,MAAMtL,EAAEuL,OAAvCvL,EAAEgD,UACxC,GAA2B,UAAxBhD,EAAE4G,KAAK3G,UAAU,EAAE,GACxBiL,EAAY/F,MAAK,SAACvE,EAAD,CAA4BgG,KAAM5G,EAAE4G,KAAM2E,KAAMF,KAAKC,MAAMtL,EAAEuL,OAAvCvL,EAAEgD,SACvC,IAA2B,cAAxBhD,EAAE4G,KAAK3G,UAAU,EAAE,GAGxB,MAAM,IAAIuL,MAAM,wBAFhBL,EAAgBhG,MAAK,SAACvE,EAAD,CAA4BgG,KAAM5G,EAAE4G,KAAM2E,KAAMF,KAAKC,MAAMtL,EAAEuL,OAAvCvL,EAAEgD,SAKrDyH,EAAaQ,GACbN,EAAYO,GACZL,EAAgBM,GArBJ,4CAAD,qDAuBfJ,MACD,KACI,iCACH,SAAC1J,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,SAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,SAACJ,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,UACI,SAACL,EAAA,OAAD,UACKlC,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASuD,UAAW,CACvC,CAAC,2BAAD,iBAA4B,kFACrBC,OAAOC,QAAQ,oFADM,iCAEGzD,EAAAA,EAAAA,KAAa,qBAFhB,UAGN,MAHM,8BAIhB,EAAKsM,aAJW,kBAKT,CAACtJ,QAAQ,IALA,gCAOT,CAACA,QAAQ,EAAO8H,MAAO,8CAPd,yDAgBpD,UAACzI,EAAA,EAAD,CAAWE,UAAU,WAArB,WACI,UAACgK,EAAA,EAAD,CAAMC,iBAAiB,QAAQjK,UAAU,OAAzC,WACI,SAACkK,EAAA,EAAD,CAAKC,SAAS,QAAQ9L,MAAM,QAA5B,SAAqC2K,KACrC,SAACkB,EAAA,EAAD,CAAKC,SAAS,SAAS9L,MAAM,SAA7B,SAAuCyK,KACvC,SAACoB,EAAA,EAAD,CAAKC,SAAS,YAAY9L,MAAM,uBAAhC,SAAwD6K,QAE5D,gBAAKzK,MAAO,CAAC2L,MAAO,QAASC,MAAO,qBAApC,SAA2DzB,UAGtE,IACK0B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYlL,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTkL,QAAS,GACTC,aAAc,GACdC,MAAO,GACPC,eAAe,GANL,EA6HlB,OArHC,8BACD,WAAS,IAAD,OACAC,EAAgB,GAIpB,OAHGlN,EAAAA,EAAAA,OAAe,YAAakN,EAAgB,IACvClN,EAAAA,EAAAA,OAAe,YAAakN,EAAgB,IAC5ClN,EAAAA,EAAAA,OAAe,WAAUkN,EAAgB,MAC1C,iCAAE,SAAC7K,EAAA,EAAD,CAAWE,UAAU,WAArB,UACT,UAACgK,EAAA,EAAD,CAAMC,iBAAkBU,EAAe3K,UAAU,OAAjD,UACKvC,EAAAA,EAAAA,OAAe,cAAa,UAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,kBAAeI,MAAO,CAACmF,QAAS,SAAxD,WACzB,SAAC6B,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACI,SAAC0F,EAAA,EAAD,+FAEJ,SAACD,EAAA,EAAD,WAAK,UAACC,EAAA,EAAD,YACD,SAAC,KAAD,CAAcG,MAAM,gCAAgChH,SAAO,iBAAE,oGACxCpB,EAAAA,EAAAA,KAAa,WAD2B,UAEjD,OADFmN,EADmD,0CAG/CC,EAAAA,EAAAA,IAAM,KAHyC,cAIrD,EAAKC,cAJgD,kBAK9C,CAACrK,QAAQ,IALqC,WAMzC,MAALmK,EAN8C,0CAO9C,CAACnK,QAAQ,EAAO8H,MAAO,gFAPuB,iCAQ3C,CAAC9H,QAAQ,EAAO8H,MAAO,mCARoB,+CAU7D,SAAC,KAAD,CAAc9J,MAAO,CAAC2L,MAAO,SAAUvE,MAAM,8BAA8BhH,SAAO,iBAAE,oGAC/DpB,EAAAA,EAAAA,KAAa,iBADkD,UAExE,OADFmN,EAD0E,0CAGtEC,EAAAA,EAAAA,IAAM,KAHgE,cAI5E,EAAKC,cAJuE,kBAKrE,CAACrK,QAAQ,IAL4D,WAMhE,MAALmK,EANqE,0CAOrE,CAACnK,QAAQ,EAAO8H,MAAO,gFAP8C,iCAQlE,CAAC9H,QAAQ,EAAO8H,MAAO,mCAR2C,oDAWxF,SAAC9C,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WACD,UAAC7B,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACI,4BACI,2BACI,mCACA,qCACA,oCACA,2CACA,6CAGR,2BACKzD,KAAKjB,MAAMkL,QAAQQ,KAAI,SAACC,EAAI7M,GACzB,GAAG,EAAKkB,MAAMqL,eAAevM,EAAE,GAAG,CAC9B,IAAIsC,GAAO,eAAIT,UAAU,eAAd,mBAGX,OAFkB,IAAfgL,EAAIC,SAAcxK,GAAO,eAAIT,UAAU,iBAAd,qBACpB,IAAIsG,MAAO4E,EAAAA,EAAAA,IAAQF,EAAIG,QAAQ,OAAS1K,GAAO,eAAIT,UAAU,eAAd,uBAChD,2BAAiB,wBAAKgL,EAAII,OAAO7M,UAAU,EAAG,OAAS,wBAAKyM,EAAIK,SAAa5K,GAAO,wBAAKuK,EAAIM,SAAW,0BAAKvI,KAAKwI,MAAM,IAAKP,EAAIM,MAAMN,EAAIrK,OAAO,GAA1C,SAA/FqK,EAAI1J,IAEpB,OAAO,iBAO1BhB,KAAKjB,MAAMqL,cAAc,MAAK,SAACc,EAAA,EAAD,CAAO/M,MAAO,CAACC,OAAQ,UAAWC,UAAW,OAAQC,UAAW,UAAWR,QAAQ,YAAYS,QAAS,WAAK,EAAKa,SAAS,CAACgL,eAAe,KAA3I,2CAElCjN,EAAAA,EAAAA,OAAe,cAAa,UAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,eAAeI,MAAO,CAACmF,QAAS,SAAxD,WACzB,SAAC6B,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACI,SAAC0F,EAAA,EAAD,8HAEJ,SAACD,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WACL,SAAC7B,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,UACQ,2BAAQzD,KAAKjB,MAAMmL,aAAaO,KAAI,SAAAU,GAChC,GAAGA,EAASC,IAAI,CACZ,IAAIC,EAAYF,EAAS7N,KAAKgO,MAAM,IACpCD,EAAU,IAAM,IAChBA,EAAU,IAAM,IAChBA,EAAU,IAAM,IAChB,IAAIE,EAAcF,EAAUG,KAAK,IAAIvN,UAAU,EAAG,IAClD,OAAO,gBAAIE,MAAO,CAACsN,cAAe,OAA3B,WAAmC,gBAAItN,MAAO,CAACmF,QAAS,YAArB,WAAkC,uBAAI6H,EAASvG,KAAKuG,EAASvG,KAAK3G,UAAU,EAAGkN,EAASvG,KAAKwD,OAAO,IAAG,sCAAmB,mBAAM,cAAG1I,UAAU,WAAb,SAAyB6L,QAAqB,wBAAKJ,EAASvG,MAAK,cAAGL,OAAO,SAASmC,KAAI,yBAAoByE,EAAS7N,KAA7B,YAAqC6N,EAASvG,MAArE,iBAAqF,QAAU,yBAAI,cAAGL,OAAO,SAASmC,KAAI,yBAAoByE,EAAS7N,KAA7B,QAAvB,wBAAgF,yBAAI,cAAGiH,OAAO,SAASmC,KAAI,yBAAoByE,EAAS7N,KAA7B,QAAvB,4BAEla,OAAO,gBAAIa,MAAO,CAACsN,cAAe,OAA3B,WAAmC,eAAItN,MAAO,CAACmF,QAAS,YAArB,UAAkC,2DAAwC,mBAAS,mCAMhJnG,EAAAA,EAAAA,OAAe,WAAU,SAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,mBAAmBI,MAAO,CAACmF,QAAS,SAA5D,UACtB,UAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACQ,kBAAOtF,MAAO,CAACG,UAAU,QAAzB,UAAkC,2BAAI,eAAImF,MAAM,MAAV,mBAAyB,eAAIA,MAAM,MAAV,qBAA2B,eAAIA,MAAM,MAAV,sBAA4B,eAAIA,MAAM,MAAV,yBACtH,2BACKzD,KAAKjB,MAAMoL,MAAMM,KAAI,SAAAiB,GAAI,OAAO,2BACjC,yBAAI,eAAGhM,UAAU,YAAYnB,QAAS,WAAK,EAAKa,SAAS,CAACJ,KAAM0M,KAA5D,UAAmEA,EAAEC,WAArE,IAAkFD,EAAEE,gBACxF,wBAAKvC,KAAKC,MAAMoC,EAAEG,QAAQL,KAAK,SAC/B,wBAAKE,EAAEI,SACP,wBAAKJ,EAAEK,qBAAqB,IAAI/F,MAAO4E,EAAAA,EAAAA,IAAQc,EAAEK,qBAAqB,MAAQ,SAAC,IAAD,CAAiBnF,KAAMoF,EAAAA,IAAOjC,MAAM,OAAO5L,MAAO,CAACwI,SAAU,OAAQhB,WAAY,WAAY,SAAC,IAAD,CAAiBiB,KAAMqF,EAAAA,IAAQlC,MAAM,SAAS5L,MAAO,CAACwI,SAAU,OAAQhB,WAAY,cAJrN+F,EAAE1K,mBAU/DhB,KAAKjB,MAAMC,OAAM,SAACkN,GAAD,CAAarK,SAAU,WAAK,EAAKsK,aAAcrK,QAAS,WAAK,EAAK1C,SAAS,CAACJ,KAAM,QAASA,KAAMgB,KAAKjB,MAAMC,KAAM2C,SAAU,SAAAiB,YAEjJ,+BACD,WACOzF,EAAAA,EAAAA,OAAe,UAAU6C,KAAKmM,YAC9BhP,EAAAA,EAAAA,OAAe,aAAa6C,KAAKwK,cACjCrN,EAAAA,EAAAA,OAAe,aAAa6C,KAAKoM,qBACvC,iEACD,2FACIpM,KAAKZ,SAAS,CAAC8K,aAAc,KADjC,SAEkC/M,EAAAA,EAAAA,KAAa,qBAAqB,GAFpE,OAEUkP,EAFV,OAIIrM,KAAKZ,SAAS,CAAC8K,aAAcmC,IAJjC,kGADC,IACD,4DAMA,2FACIrM,KAAKZ,SAAS,CAAC6K,QAAS,KAD5B,SAE6B9M,EAAAA,EAAAA,SAAAA,SAF7B,QAEUmP,EAFV,QAGeC,MAAK,SAACnP,EAAEC,GAAH,OAAOD,EAAE0N,OAAOzN,EAAEyN,UAClC9K,KAAKZ,SAAS,CAAC6K,QAASqC,IAJ5B,kGANA,IAMA,0DAMA,2FACItM,KAAKZ,SAAS,CAAC+K,MAAO,KAD1B,SAE2BhN,EAAAA,EAAAA,KAAAA,OAAoB,CAAC2C,MAAO,CAAC,eAFxD,OAEU0M,EAFV,OAGIxM,KAAKZ,SAAS,CAAC+K,MAAOqC,IAH1B,kGANA,MAMA,EA9HExC,CAAelH,EAAAA,WAoIfoJ,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYpN,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAAC8M,OAAQxC,KAAKC,MAAM,EAAKxK,MAAME,KAAK6M,SAFnC,EA2EjB,OAxEA,8BACD,WAqBI,IArBK,IAAD,OAoBAY,EAAY,GApBZ,aAqBA,sBAAOC,EAAP,KAAcxO,EAAd,KACIyO,EAAS,GACV,EAAK5N,MAAM8M,OAAOe,SAASF,KAAQC,EAAS,gBAC/CF,EAAUtJ,MAAK,gBAAiBhF,MAAO,CAACC,OAAQ,WAAYsB,UAAWiN,EAAQpO,QAAS,WACpF,IAAIsO,EAAU,EAAK9N,MAAM8M,OACtBgB,EAAQD,SAASF,GAChBG,EAAUA,EAAQpC,KAAI,SAAA5M,GAAM,GAAGA,GAAG6O,EAAO,OAAO7O,KAEhDgP,EAAQ1J,KAAKuJ,GAEjB,EAAKtN,SAAS,CAACyM,OAAQgB,KAPZ,SAQX3O,GARqBwO,KAH7B,MAAkCI,OAAOC,QApB1B,CACX,KAAQ,mBACR,MAAS,cACT,OAAU,iCACV,OAAU,0BACV,MAAS,qBACT,OAAU,oBACV,OAAU,yBACV,QAAW,yBACX,OAAU,wBACV,MAAS,6BACT,OAAU,+BACV,OAAU,mCACV,QAAW,gCACX,kBAAqB,wBACrB,SAAY,wBACZ,SAAY,2BACZ,kBAAqB,iDAGzB,eAA0D,IAc1D,OAAO,UAACrJ,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjF,MAAMgD,WAA9F,WACP,SAAC4B,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,WAAkB1D,KAAKlB,MAAME,KAAK2M,WAAlC,IAA+C3L,KAAKlB,MAAME,KAAK4M,UAA/D,QAA+E5L,KAAKlB,MAAME,KAAKgC,GAA/F,UAEJ,SAAC0C,EAAA,OAAD,WACI,UAAClE,EAAA,EAAD,YACI,SAAC2F,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACI,UAAC0F,EAAA,EAAD,iBAASpF,KAAKlB,MAAME,KAAK+M,oBAAzB,yBAEJ,SAAC5G,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACI,SAAC0F,EAAA,EAAD,CAAKjH,MAAO,CAAC6O,OAAQ,gCAAiCC,aAAc,MAAOlD,MAAO,sBAAuBmD,OAAQ,SAAU5J,QAAS,QAApI,SAA8ItD,KAAKlB,MAAME,KAAK8M,WAElK,SAAC3G,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WAAK,wCACV,SAACD,EAAA,EAAD,CAAKzF,UAAU,OAAf,UAAsB,SAAC0F,EAAA,EAAD,CAAKjH,MAAO,CAAC6O,OAAQ,gCAAiCC,aAAc,MAAOlD,MAAO,sBAAuBmD,OAAQ,SAAU5J,QAAS,QAApI,SAA8ImJ,OACpK,UAACtH,EAAA,EAAD,YAAK,SAACC,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcG,MAAM,YAAYhH,QAAS,WAM/C,OALApB,EAAAA,EAAAA,KAAAA,KAAkB,CACd6D,GAAI,EAAKlC,MAAME,KAAKgC,GACpB6K,OAAQxC,KAAK8D,UAAU,EAAKpO,MAAM8M,UAEtC,EAAK/M,MAAM+C,WACJ,CAAC1B,QAAQ,SAEd,SAACiF,EAAA,EAAD,WAAK,SAACM,EAAA,EAAD,CAAQ5H,QAAQ,SAASS,SAAO,iBAAE,kFACtCoC,OAAOC,QAAQ,iHADuB,gCAE/BzD,EAAAA,EAAAA,KAAAA,OAAoB,EAAK2B,MAAME,KAAKgC,IAFL,OAGrC,EAAKlC,MAAMgD,UACX,EAAKhD,MAAM+C,WAJ0B,2CAAlC,+CAStB,gCACD,SAAmBuL,GACZA,EAAUpO,KAAKgC,IAAIhB,KAAKlB,MAAME,KAAKgC,IAClChB,KAAKZ,SAAS,CAACyM,OAAQxC,KAAKC,MAAMtJ,KAAKlB,MAAME,KAAK6M,cAEzD,EA5ECK,CAAoBpJ,EAAAA,WA8E1B,SAASuK,GAAUvO,GACf,OAAwCrB,EAAAA,EAAAA,YAAxC,eAAO6P,EAAP,KAAqBC,EAArB,KACA,GAA4C9P,EAAAA,EAAAA,YAA5C,eAAO+P,EAAP,KAAuBC,EAAvB,KACA,GAA8BhQ,EAAAA,EAAAA,YAA9B,eAAOiQ,EAAP,KAAgBC,EAAhB,KACA,OAAO,iCACH,UAACxI,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yBACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAejH,MAAO,CAACsF,MAAO,QAAS8B,MAAO+H,GAA0B,GAAI7F,IAAI,aAAamG,YAAY,SAASlG,UAAU,OAAOC,UAAU,OAAOnC,SAAQ,mCAAE,WAAOD,EAAOvE,GAAd,iEAAoBuM,EAAgBhI,GAAOkI,EAAkBzM,GAA7D,2CAAF,gEAErK,UAACmE,EAAA,EAAD,CAAKzF,UAAU,OAAf,WAAsB,SAAC0F,EAAA,EAAD,CAAKC,GAAI,KAAS,SAACD,EAAA,EAAD,WAAK,kBAAO1F,UAAU,cAAjB,kFAC7C,UAACyF,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,4BACA,SAACD,EAAA,EAAD,WAAK,SAACyI,EAAA,QAAD,WACD,SAACA,EAAA,UAAD,CAAcvI,KAAK,OAAOwI,UAAQ,EAACC,OAAO,aAAavI,SAAU,SAAAnE,GAAIsM,EAAWtM,EAAEkD,OAAOyJ,kBAGjG,UAAC7I,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKC,GAAI,KACT,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcE,KAAK,SAASC,MAAM,YAAYhH,SAAO,iBAAE,iGAChD,MAATmP,EADyD,yCAEjD,CAACvN,QAAQ,EAAO8H,MAAO,wCAF0B,UAGnC,MAAhBuF,EAHmD,yCAIjD,CAACrN,QAAQ,EAAO8H,MAAO,oCAJ0B,wBAMlC9K,EAAAA,EAAAA,KAAAA,IAAiB,CAACmK,KAAMgG,GAAe,CAACpF,OAAQ,CAAC,KAAM,cANrB,QAMlD+F,EANkD,OAQpDC,EAAU,GACVC,EAAU,GAT0C,UAUtCT,GAVsC,mHAU9CU,EAV8C,QAW9CC,EAAQD,EAAKxJ,KAAK3G,UAAU,EAAEmQ,EAAKxJ,KAAKwD,OAAO,KAC/CkG,EAAQL,EAAQ5K,MAAK,SAAAxF,GAAC,OAAIA,EAAE0Q,UAAYF,MAZM,iCAe1BD,EAAKI,OAfqB,OAe1CC,EAf0C,OAgBhDN,EAAQhL,KAAK,CAACnC,GAAIsN,EAAMtN,GAAI0N,UAAWD,IAhBS,wBAkBhDP,EAAQ/K,KAAKiL,EAAKxJ,MAlB8B,sRAqBrDuJ,EAAQ/F,OAAO,GArBsC,kCAqB7BjL,EAAAA,EAAAA,KAAAA,KAAkBgR,GArBW,aAsBrDD,EAAQ9F,OAAO,GAtBsC,wBAsBnCuG,QAAQvD,IAAR,oCAAsC8C,EAAQ1C,KAAK,QAtBhB,kBAsBgC,CAACrL,QAAQ,EAAMyO,QAAQ,+BAAD,OAAiCV,EAAQ9F,OAAzC,4DAtBtD,WAuBhC,GAAhB8F,EAAQ9F,OAvBwC,wBAuB7BuG,QAAQvD,IAAR,oCAAsC8C,EAAQ1C,KAAK,QAvBtB,kBAuBsC,CAACrL,QAAQ,EAAMyO,QAAS,qFAvB9D,iCAwB5C,CAACzO,QAAQ,IAxBmC,2EA8BxE,SAAS0O,GAAO/P,GAAO,IAAD,OACZgQ,EAAe,mCAAE,WAAMC,EAAYrB,GAAlB,qFAEgB,KAAhCqB,EAAWzH,KAAKrJ,UAAU,EAAE,KAAS8Q,EAAWzH,KAAO,IAAIyH,EAAWzH,MACjB,KAArDyH,EAAWzH,KAAKrJ,UAAU8Q,EAAWzH,KAAKc,OAAO,KAAS2G,EAAWzH,KAAOyH,EAAWzH,KAAK,KAH5E,SAIQnK,EAAAA,EAAAA,QAAAA,KAAqB4R,GAJ7B,aAIbC,EAJa,QAMH,GANG,iBAWf,KAJIC,EAAa,IAAIC,UACVC,OAAO,aAAcH,GAChCC,EAAWE,OAAO,OAAQJ,EAAWzH,MAC/B8H,EAAU1B,EAAQtF,OAChBvK,EAAE,EAAGA,EAAEuR,EAASvR,IAAKoR,EAAWE,OAAO,QAASzB,EAAQ7P,IAXjD,iBAYEV,EAAAA,EAAAA,YAAoB8R,GAZtB,WAaA,OADT3E,EAZS,QAaTnK,OAbS,0CAaY,CAACA,QAAQ,EAAO8H,MAAM,iEAAD,OAAmE+G,EAAnE,mCAbjC,WAcS,GAAhB1E,EAAG+E,KAAKjH,OAdD,wBAcYuG,QAAQvD,IAAR,8DAAgEd,EAAG+E,KAAK7D,KAAK,QAdzF,kBAcyG,CAACrL,QAAQ,EAAMyO,QAAQ,4GAAD,OAA2GI,EAA3G,sBAd/H,aAeP1E,EAAG+E,KAAKjH,OAAO,GAfR,wBAeWuG,QAAQvD,IAAR,8DAAgEd,EAAG+E,KAAK7D,KAAK,QAfxF,kBAewG,CAACrL,QAAQ,EAAMyO,QAAQ,kCAAD,OAAoCtE,EAAG+E,KAAKjH,OAA5C,oFAA2H4G,EAA3H,sBAf9H,iCAgBH,CAAC7O,QAAQ,EAAMyO,QAAQ,8BAAD,OAAgCI,EAAhC,sBAhBnB,yDAkBR,CAAC7O,QAAQ,EAAO8H,MAAO,2EAlBf,4CAAF,wDAsBjBqH,EAA2B,KAQ/B,MAP0B,QAAvBnS,EAAAA,EAAAA,aACCmS,GAA2B,SAAC,EAAAC,qBAAD,CAAsBT,gBAAiBA,IACtC,QAAvB3R,EAAAA,EAAAA,aACLmS,GAA2B,SAAC,EAAAE,qBAAD,CAAsBV,gBAAiBA,IACtC,QAAvB3R,EAAAA,EAAAA,eACLmS,GAA2B,SAAC,EAAAG,qBAAD,CAAsBX,gBAAiBA,MAE/D,SAACtP,EAAA,EAAD,CAAWE,UAAU,WAArB,UACH,UAACgK,EAAA,EAAD,CAAMC,iBAAiB,IAAIjK,UAAU,OAArC,UACKvC,EAAAA,EAAAA,OAAe,YAAW,SAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,YAAYI,MAAO,CAACmF,QAAS,SAArD,SACVgM,IAEhBnS,EAAAA,EAAAA,OAAe,YAAW,SAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,cAAcI,MAAO,CAACmF,QAAS,SAAvD,UACvB,SAAC+J,GAAD,MAEHlQ,EAAAA,EAAAA,OAAe,WAAU,UAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,SAASI,MAAO,CAACmF,QAAS,SAAlD,WACtB,UAAC6B,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,yBACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAY2C,QAAS,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOvC,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACsQ,aAAcrO,EAAEkD,OAAOgB,iBAExX,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,4BACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAY2C,QAAS/H,KAAKjB,MAAM4Q,cAAenK,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACwQ,qBAAsBvO,EAAEkD,OAAOgB,iBAEpH,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,0BACA,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAY2C,QAAS,CAAC,CAAC,EAAG,yBAA0B,CAAC,EAAG,yBAA0B,CAAC,EAAG,cAAevC,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAACyQ,WAAYxO,EAAEkD,OAAOgB,iBAEhK,UAACJ,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,EAAT,sBACA,SAACD,EAAA,EAAD,WAAK,SAACyI,EAAA,QAAD,WACD,SAACA,EAAA,UAAD,CAAcvI,KAAK,OAAOwI,UAAQ,EAACC,OAAO,aAAavI,SAAU,SAAAnE,GAAI,EAAKjC,SAAS,CAAC0Q,YAAazO,EAAEkD,OAAOyJ,mBAGlH,UAAC7I,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,CAAKC,GAAI,KACT,SAACD,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcG,MAAM,mBAAmBhH,QAAO,mCAAE,WAAOwR,GAAP,kGACtB,MAAxB,EAAKhR,MAAM+Q,YADmC,yCAEtC,CAAC3P,QAAQ,EAAO8H,MAAO,4CAFe,UAGvC,EAAKlJ,MAAM+Q,YAAY1H,OAAO,GAAK,EAHI,yCAItC,CAACjI,QAAQ,EAAO8H,MAAO,sFAJe,OAkB7C,IAZe,IACX+H,EADW,IAEXC,GAAgB,EAChBC,EAAc,GACdJ,EAAc,EAAK/Q,MAAM+Q,aAG7BA,EAAcK,MAAMC,KAAKN,IACbvD,MAAK,SAACnP,EAAGC,GAAO,OAAGA,EAAEuH,KAAOxH,EAAEwH,KAAa,GAAgB,KAI/D/G,EAAE,EAAGA,EAAEiS,EAAY1H,OAAQvK,IAC5BmS,GAbQ,MAcPA,EAAa,EACbC,IACAC,EAAY/M,KAAK,IAAI+L,UACrBgB,EAAYD,GAAcd,OAAO,SAAU,EAAKpQ,MAAM2Q,cACtDQ,EAAYD,GAAcd,OAAO,OAAQ,EAAKpQ,MAAM8Q,YACpDK,EAAYD,GAAcd,OAAO,aAAc,EAAKpQ,MAAM6Q,uBAE9DI,IACAE,EAAYD,GAAcd,OAAO,QAASW,EAAYjS,IAGtDwS,EAAU,EACVC,EAAS,EACPC,EAAWL,EAAY9H,OACzBoI,EAAc,EAlC2B,MAmC1BN,EAnC0B,iDAmCnCO,EAnCmC,eAoCzBtT,EAAAA,EAAAA,aAAqBsT,GApCI,QAoCnCC,EApCmC,OAqC1B,IAAZL,IAAeA,EAAQK,EAAE,IAC5BJ,EAASI,EAAE,GACXF,IACAT,EAAS,IAAIQ,EAASC,GAxCmB,2CA0C7C,EAAKpR,SAAS,CAACuR,cAAe,CAACN,EAASC,KA1CK,kBA2CtC,CAACnQ,QAAQ,IA3C6B,4CAAF,6DA+CtDH,KAAKjB,MAAM4R,gBAAe,SAACxL,EAAA,EAAD,WACvB,SAACC,EAAA,EAAD,WAAK,UAAC8F,EAAA,EAAD,CAAOpN,QAAQ,UAAUgE,QAAS,WAAK,EAAK1C,SAAS,CAACuR,cAAe,QAASC,aAAW,EAAzF,WACD,SAAC1F,EAAA,UAAD,sCAAqD,iEAAuC,uBAAIlL,KAAKjB,MAAM4R,cAAc,KAApE,SAAgF,uBAAI3Q,KAAKjB,MAAM4R,cAAc,KAA7G,0DAAuK,SAACzF,EAAA,OAAD,CAAYxE,KAAK,IAAInI,QAAS,SAAA8C,GAClQwP,aAAaC,QAAb,UAAwB3T,EAAAA,EAAAA,aAAxB,+DAAoG,EAAK4B,MAAM4R,cAAc,GAA7H,2CAAkK,EAAK5R,MAAM4R,cAAc,GAA3L,iBACA,EAAK7R,MAAMsC,SAASC,EAAG,WAF6M,uBAAvK,eAKjE,SAAC8D,EAAA,EAAD,CAAKzF,UAAU,OAAf,UAAsB,UAAC0F,EAAA,EAAD,kEAAwD,cAAGsB,KAAK,wFAAR,kBAAxD,YAEE,QAAvBvJ,EAAAA,EAAAA,cAA8BA,EAAAA,EAAAA,OAAe,uBAAsB,SAACyM,EAAA,EAAD,CAAKC,SAAS,IAAI9L,MAAM,0BAA0BI,MAAO,CAACmF,QAAS,SAAnE,UACpE,SAAC,EAAAyN,wBAAD,W,IEjcRC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,G,WAEEC,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY5S,GAAO,IAAD,mBACd,cAAMA,IACDC,MAAQ,CAACiS,kBAAmB,CAAC,CAAC,KAAM,OAAO5Q,aAAc,GAAIL,WAAY,KAAM4R,YAAY,EAAOlQ,YAAY,EAAMpB,MAAM,EAAGsC,gBAAgB,CAACC,IAAI,GAAII,UAAU,KAAM9C,YAAa,KAAM0R,cAAe,OAE7M,IAAM1S,EAAW,mCAAG,oGACwL,QAAO,YAAgBJ,EAAMK,aAA7B,QADxL,gBACb6R,GADa,EACbA,kBAAmBE,GADN,EACMA,WAAYD,GADlB,EACkBA,mBAAoBE,GADtC,EACsCA,eAAgBC,GADtD,EACsDA,sBAAuBC,GAD7E,EAC6EA,oBAAqBC,GADlG,EACkGA,gBAAiBC,GADnH,EACmHA,mBAAoBC,GADvI,EACuIA,oBAAqBC,GAD5J,EAC4JA,kBAC5K,EAAKrS,SAAS,CAAC4R,kBAAmBA,KAAqB9Q,YAAauR,KAAqBG,cAAeJ,OAFxF,4CAAH,qDAJH,OAQdtS,IARc,EA+GlB,OAtGC,8BACD,WAAS,IAAD,OACEwB,EAAY,CACd,CAAC,8BAAD,iBAA+B,oGACHvD,EAAAA,EAAAA,OAAAA,OAAsB,EAAK4B,MAAMwD,MAAO,CAAC2F,OAAQqJ,KAAsBM,QAAO,EAAM/R,MAAM,EAAKf,MAAMyD,aADlG,OACrBsP,EADqB,OAE3BnR,OAAOoR,KAAKD,EAAW,UAFI,6CAanC,OARG3U,EAAAA,EAAAA,OAAe,WACduD,EAAUyC,KAAK,CAAC,0BAAD,iBAA2B,wFACnCxC,OAAOC,QAAQ,0CADoB,gCAEdzD,EAAAA,EAAAA,OAAAA,KAAoBmU,MAFN,OAE5BvQ,EAF4B,OAGlC,EAAK3B,SAAS,CAACW,WAAY,CAAC,CAACiB,GAAI,EAAGpD,EAAG,KAAMqD,EAAG,IAAKC,EAAEH,MAHrB,8CAOvC,iCACH,SAAC1B,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACI,SAACJ,EAAA,WAAD,CAAiBK,UAAU,wBAA3B,UACI,SAACL,EAAA,OAAD,UACKW,KAAKjB,MAAMmB,aAAY,SAAC,KAAD,CACpBP,QAAQ,SACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CC,WAAYC,KAAKjB,MAAMgB,WACvBE,cAAeD,KAAKjB,MAAMiS,kBAC1B9Q,YAAaF,KAAKjB,MAAMmB,YACxBC,OAAQH,KAAKjB,MAAMqB,aACnBwR,cAAe5R,KAAKjB,MAAM6S,gBAC3B,UAGX,UAACvS,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,WACI,SAACL,EAAA,OAAD,UACCW,KAAKjB,MAAMsB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKjB,MAAMyB,YAAaC,QAAST,KAAKjB,MAAM0B,UAChH,QAED,SAACpB,EAAA,OAAD,WACI,SAAC,KAAD,CAASqB,UAAWA,eAKpC,UAAClB,EAAA,EAAD,CAAWE,UAAU,WAArB,WACI,SAACsS,GAAD,CACI1R,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCgB,gBAAiBvB,KAAKjB,MAAMwC,gBAC5BlB,MAAOL,KAAKjB,MAAMsB,MAClBG,YAAaR,KAAKjB,MAAMyB,YACxBC,QAAST,KAAKjB,MAAM0B,QACpBwR,gBAAiBjS,KAAKjB,MAAMkT,gBAC5BzQ,SAAWxB,KAAKjB,MAAM4D,gBAAgBC,IAAIwF,OAAO,EAAG,UAAU,UAC9D8J,iBAAkB,SAAAlT,GACd,EAAKI,SAAS,CAACuD,gBAAiB3D,EAAK+D,UAAWoP,WAAYnT,EAAKA,QAErEyC,WAAYzB,KAAKjB,MAAM0C,aAER,GAAlBzB,KAAKjB,MAAMsB,OAAS,SAAC,KAAD,IAAe,QAEtClD,EAAAA,EAAAA,OAAe,WAAW6C,KAAKjB,MAAM4D,gBAAgBC,IAAIwF,OAAO,GAAG,SAACgK,GAAD,CAAavQ,SAAU,WAAK,EAAKvB,SAAS,EAAKvB,MAAMyB,cAAesB,QAAS,WAAK,EAAK1C,SAAS,CAACuD,gBAAiB,CAACC,IAAK,OAAQG,UAAW/C,KAAKjB,MAAM4D,gBAAiB3D,KAAMgB,KAAKjB,MAAMoT,WAAYxQ,SAAU,SAAAiB,GAAM,EAAKyP,aAAazP,IAAOnB,WAAYzB,KAAKjB,MAAM0C,WAAY6Q,aAAc,WAAK,EAAKA,gBAAiBJ,iBAAkB,WAAK,EAAK9S,SAAS,CAACqC,YAAa,EAAK1C,MAAM0C,gBAAkB,QAErd,6DACD,iHACwBtE,EAAAA,EAAAA,OAAAA,IAAmB,CAAC6D,GAAIhB,KAAKjB,MAAMoT,WAAWnR,KADtE,OAC4Ee,GAApEA,EADR,QAC8F,GACtFR,EAAkBvB,KAAKjB,MAAMwC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAKe,EAAQf,MACrEO,EAAgBS,GAAkBD,EAG5BwQ,EAAYvS,KAAKjB,MAAMwC,gBAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAO,EAAKjC,MAAMoT,WAAWnR,MACxFhB,KAAKjB,MAAMwC,gBAAgB6G,OAAOmK,EAAU,GAC3CvS,KAAKZ,SAAS,CAACmC,gBAAiBA,EAAiB4Q,WAAYnS,KAAKjB,MAAMwC,gBAAgBgR,EAAU,GAAIN,gBAAiB,CAACjS,KAAKjB,MAAMwC,gBAAgBgR,EAAU,GAAGvR,MATxK,kGADC,IACD,6DAYA,WAAmB4B,GAAnB,4FAEoBA,GAFpB,sHAEc5B,EAFd,iBAG4B7D,EAAAA,EAAAA,OAAAA,IAAmB,CAAC6D,GAAIA,IAHpD,OAG0De,GAA9CA,EAHZ,QAG4E,GAChER,EAAkB,EAAKxC,MAAMwC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAApE,GAAC,OAAIA,EAAEmD,KAAKe,EAAQf,MACrEO,EAAgBS,GAAkBD,EAClC,EAAK3C,SAAS,CAACmC,gBAAiBA,EAAiBoB,gBAAiB,CAACC,IAAIA,GAAMuP,WAAYpQ,IAPjG,oXAZA,IAYA,4DAUA,WAAkBG,EAAUpC,GAA5B,gFACIE,KAAKZ,SAAS,CAACgB,cAAc,SAAC+B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SADlE,SAEwBlF,EAAAA,EAAAA,OAAAA,OAAsB+E,EAAU,CAAC7B,OAAM,EAAMP,MAAMA,IAF3E,cAEUO,EAFV,gBAGkClD,EAAAA,EAAAA,OAAAA,OAAsB+E,EAAU,CAACI,MAAM,GAAIxC,MAAMA,IAHnF,OAGUyB,EAHV,OAIOlB,EAAM,GAAN,MAAkB,EAAGL,KAAKZ,SAAS,CAACgB,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKZ,SAAS,CAACgB,aAAc,wBACvDJ,KAAKZ,SAAS,CAACgB,aAAc,gCAClCJ,KAAKZ,SAAS,CACVmD,MAAOL,EACPM,WAAY1C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASgC,KAAKC,MAAMrC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbe,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MAd9B,qGAVA,IAUA,yDAiBA,WAAerC,GAAf,uFACkCpD,EAAAA,EAAAA,OAAAA,OAAsB6C,KAAKjB,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAXtC,EAAQ,GAAQT,MAAME,KAAKjB,MAAMyD,aAD/H,OACUjB,EADV,OAEQvB,KAAKZ,SAAS,CACVoB,YAAaD,EACbgB,gBAAiBA,EACjBoB,gBAAiB,CAACC,IAAI,MALlC,mGAjBA,MAiBA,EAhHE8O,CAAe5O,EAAAA,WAyHfkP,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYlT,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAwBjB,OArBA,8BACD,WAAS,IAAD,OACJ,GAAG5C,KAAKlB,MAAMuB,MAAM,EAAE,CAClB,IADkB,EACd4C,EAAO,GADO,UAEDjD,KAAKlB,MAAMyC,iBAFV,IAElB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC2B,EAAkC,QACxCD,EAAKE,MAAK,SAAC+N,GAAD,CAAYzP,WAAYzB,KAAKlB,MAAM2C,WAAY+Q,SAAUtP,EAAIlC,GAAG,QAASA,GAAIkC,EAAIlC,GAAIhC,KAAMkE,GAAUA,EAAIlC,MAHrG,8BAMlB,OACA,gBAAK7C,MAAO,CAACqD,SAAUxB,KAAKlB,MAAM0C,SAAU8B,QAAQ,UAApD,UACI,SAAC,KAAD,CAAUmP,aAAa,EAAM/S,UAAU,aAAagT,eAChD,SAAC1T,EAAM+D,GAAa,EAAK2P,eAAe1T,EAAM+D,IAChD4P,OAAQ3S,KAAKlB,MAAMmT,gBAFrB,SAEwChP,MAG5C,OAAO,OAEd,4BACD,SAAe2P,EAAS7P,GACjB6P,EAAS5S,KAAKlB,MAAMoT,iBAAiB,CAACnP,UAAWA,EAAW/D,KAAM4T,EAAQ9T,MAAME,OAC9EgB,KAAKlB,MAAMoT,iBAAiB,CAACnP,UAAWA,EAAW/D,KAAM,WACjE,EAzBCgT,CAAkBlP,EAAAA,WA2BxB,SAASsP,GAAYtT,GACjB,OAAwBrB,EAAAA,EAAAA,UAAsC,IAA7BqB,EAAMiE,UAAUH,IAAIwF,OAAW,SAAS,SAAzE,eAAOyK,EAAP,KAAaC,EAAb,KACA,GAA8BrV,EAAAA,EAAAA,UAAS,SAAvC,eAAOsV,EAAP,KAAiBC,EAAjB,KACA,GAAgDvV,EAAAA,EAAAA,WAAS,GAAzD,eAAOwV,EAAP,KAA0BC,EAA1B,KACA,GAA8BzV,EAAAA,EAAAA,UAAS,MAAvC,eAAO0V,EAAP,KAAgBC,EAAhB,KACA,GAAgC3V,EAAAA,EAAAA,UAAS,MAAzC,eAAO4V,EAAP,KAAiBC,EAAjB,KACA,GAA8C7V,EAAAA,EAAAA,UAAS,MAAvD,eAAwB8V,GAAxB,YACAzK,EAAAA,EAAAA,YAAU,WAAKgK,EAAqC,IAA7BhU,EAAMiE,UAAUH,IAAIwF,OAAW,SAAS,WAAU,CAACtJ,EAAMiE,UAAUH,OAC1FkG,EAAAA,EAAAA,YAAU,WACN,OAAO+J,GACH,IAAK,QACDO,GAAW,SAACI,GAAD,CAAmBC,aAAc,SAACC,EAAEC,GAAH,OAAQF,EAAaC,EAAEC,IAAKC,UAAS,mCAAE,WAAOC,EAAE3S,EAAErD,GAAX,iFAA6B+V,EAAUC,EAAE3S,EAAErD,GAA3C,mFAAF,0DAAkD8D,SAAU7C,EAAM6C,SAAUoB,UAAWjE,EAAMiE,aAC9K,MACJ,IAAK,SACDqQ,GAAW,SAACU,GAAD,CAAmBL,aAAc,SAACC,EAAGC,EAAII,GAAR,OAAYN,EAAaC,EAAGC,EAAII,IAAIjS,QAAShD,EAAMgD,QAASD,SAAU/C,EAAM+C,SAAUJ,WAAY3C,EAAM2C,WAAYyQ,iBAAkB,WAAKpT,EAAMoT,oBAAqBlT,KAAMF,EAAME,KAAMsT,aAAcxT,EAAMwT,aAAc3Q,SAAU,SAAAX,GAAKlC,EAAM6C,SAASX,OACpS,MACJ,IAAK,QACDoS,GAAW,SAACY,GAAD,CAAgBC,kBAAiB,mCAAE,WAAMP,EAAEQ,GAAR,iFAA6BD,EAAkBP,EAAEQ,GAAjD,mFAAF,wDAA2Db,SAAUA,EAAUc,gBAAiBd,EAAUe,cAAe,WAAKtB,EAAQC,OAClL,MACJ,QACIK,EAAW,SAErB,CAACP,EAAK/T,EAAME,KAAKgC,GAAGlC,EAAM2C,aAC5B,IAAMmS,EAAS,mCAAG,WAAMS,EAAUC,EAAWC,GAA3B,sFACVC,EAAO,KACPC,EAAS,KACE,IAAZJ,GAA2B,IAAZC,GAA+B,OAAfC,EAHpB,uBAIVd,EAAaa,EAAYA,GAJf,kBAKH,CAACnU,QAAQ,IALN,WAMmC,IAAvC8Q,KAAqBoD,EAAU,GAAG,IAAyB,MAAdE,EANzC,iBAOVC,EAAOvD,KAAqBoD,EAAU,GAAG,GACzCI,EAASF,EARC,4BASmC,IAAvCtD,KAAqBoD,EAAU,GAAG,IAAwB,MAAZC,GAA8B,IAAZA,EAT5D,iBAUVE,EAAOvD,KAAqBoD,EAAU,GAAG,GACzCI,EAASH,EAXC,iDAaH,CAACnU,QAAQ,EAAO8H,MAAO,iDAbpB,QAgBVyM,EAAc,GAhBJ,UAiBG5V,EAAMiE,UAAUH,KAjBnB,IAiBd,IAAI,EAAJ,qBAAUQ,EAA2B,SAC7BuR,EAAc,CAAC3T,GAAIoC,EAAKwR,QAASzX,EAAAA,EAAAA,GAAAA,KACzBqX,GAAUC,EACtBC,EAAYvR,KAAKwR,GApBP,+CAsBRxX,EAAAA,EAAAA,OAAAA,KAAoBuX,GAtBZ,eAuBd5V,EAAM6C,SAAS7C,EAAMiE,UAAUH,KAvBjB,kBAwBP,CAACzC,QAAQ,IAxBF,4CAAH,0DA0BTsT,EAAa,SAACC,EAAGC,GAAiB,IAAdkB,EAAa,wDAAC7B,EAAYH,GAAMS,EAAYI,GAAGH,EAAmBI,GAAIb,EAAQ,SAASI,EAAqB2B,IAChIZ,EAAiB,mCAAC,WAAMnT,EAAMgU,GAAZ,0EAEY,IAA7BhW,EAAMiE,UAAUH,IAAIwF,OAFH,gCAGVjL,EAAAA,EAAAA,OAAAA,KAAoB,CAAC6D,GAAIlC,EAAME,KAAKgC,GAAI8T,SAAUA,IAHxC,OAIb7B,GAAmBnU,EAAMwT,eAJZ,sCAMPsB,EAAU,EAAE9S,EAAOgU,GANZ,OAMhBxK,EANgB,qBAQpBwI,EAAQC,GARY,kBASbzI,GATa,4CAAD,wDAWvB,OAAO,SAAC5G,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAc,SAAN8O,EAAe/T,EAAMgD,UAAegR,EAAQC,IAAlI,SAAgJI,IAE3J,SAASW,GAAkBhV,GACvB,OAAsCrB,EAAAA,EAAAA,UAAS,GAA/C,eAAOsX,EAAP,KAAqBC,EAArB,KACA,GAAsCvX,EAAAA,EAAAA,UAAS,IAA/C,eAAOwX,EAAP,KAAqBC,EAArB,KACA,GAAwBzX,EAAAA,EAAAA,UAAS,IAAjC,eAAOqD,EAAP,KAAcqU,EAAd,KACA,GAAsC1X,EAAAA,EAAAA,UAAS,IAA/C,eAAO2X,EAAP,KAAqBC,EAArB,KACA,GAA4C5X,EAAAA,EAAAA,UAAS,MAArD,eAAO6X,EAAP,KAAwBC,EAAxB,MACAzM,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAC,0FACZmM,EADY,SACU/X,EAAAA,EAAAA,QAAAA,IAAoB,CAAC2J,QAASsO,EAAatO,UADrD,6EAAD,qDAGZsO,EAAatO,QAAQ,GAAGiC,MAC7B,CAACqM,EAAatO,UAChB,IAAM0O,EAAU,mCAAC,qGAAMX,EAAN,iCACVS,GAA0C,IAAzBA,EAAgBnV,OADvB,yCAEF,CAACA,QAAS,EAAG8H,MAAOqN,EAAgBG,MAFlC,YAGc,OAAlBH,GAAkD,IAAzBA,EAAgBnV,QAAYQ,OAAOC,QAAQ0U,EAAgBG,MAHhF,wBAKLC,EAAUN,GACNR,QAAUzX,EAAAA,EAAAA,GAAAA,GANT,UAOHA,EAAAA,EAAAA,OAAAA,KAAoBuY,GAPjB,eAQa,OAAnBA,EAAQZ,UAAyB,KAARhU,GAAoB,OAARA,QAAsBvD,IAARuD,GAClD6N,QAAQvD,IAAI,eAAgBsK,EAAQZ,SAAUhU,GAC9C6U,SAASC,cAAc,mBAAmBC,QAC1C/W,EAAM2U,aAAa3S,EAAOA,EAAO+T,IAC5BA,GACLc,SAASC,cAAc,mBAAmBC,QAC1C/W,EAAMwT,gBAENxT,EAAM6C,SAAS,CAAC7C,EAAME,KAAKgC,KAhBtB,kBAkBF,CAACb,OAAQ,IAlBP,iCAoBF,CAACA,OAAQ,IApBP,oDAAD,qDAuBhB,OAAO,iCACH,SAACuD,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,UAACN,EAAA,QAAD,iBAAqB5E,EAAME,KAAKgC,SAC9D,SAAC0C,EAAA,OAAD,WACI,UAACoS,GAAA,EAAD,CAAWnM,iBAAkB,EAA7B,WACI,UAACmM,GAAA,OAAD,CAAgBjM,SAAU,EAA1B,WACI,SAACiM,GAAA,SAAD,4BACA,UAACA,GAAA,OAAD,YACI,SAACzE,GAAD,CAAqB8D,SAAU,SAAAjU,GAAIiU,EAASjU,IAAKqU,mBAAoB,SAAAQ,GAAMR,EAAmBQ,IAAOV,gBAAiB,SAAApU,GAAIoU,EAAgBpU,IAAKjC,KAAMF,EAAME,QAC3J,SAACmG,EAAA,EAAD,CAAKzF,UAAU,YAAf,UACI,UAAC0F,EAAA,EAAD,YACI,SAAC,KAAD,CAAcjH,MAAO,CAAC6X,YAAa,QAASzX,QAAS,WAAK,OAAOiX,GAAW,IAAQjQ,MAAM,sBAC1F,SAAC,KAAD,CAAchH,QAAS,WAAK,OAAOiX,KAAejQ,MAAM,oBAGhE,SAACJ,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WAAK,SAACyI,EAAA,EAAD,WACD,SAACA,EAAA,QAAD,CAAYxL,KAAK,KAAKiD,KAAK,SAASgB,MAAOxH,EAAM2C,WAAW,qBAAqB,qBAAsBwU,QAASnX,EAAM2C,WAAY+D,SAAU1G,EAAMoT,gCAKlK,UAAC4D,GAAA,OAAD,CAAgBjM,SAAU,EAA1B,WACI,SAACiM,GAAA,SAAD,0BACA,UAACA,GAAA,OAAD,YACI,uBAAIhX,EAAME,KAAKkX,iBACf,uBAAIpX,EAAME,KAAKmX,gBAGtBlB,EAAa7M,OAAO,IAAG,UAAC0N,GAAA,OAAD,CAAgBjM,SAAU,EAA1B,WACpB,SAACiM,GAAA,SAAD,0BACA,SAACA,GAAA,OAAD,UACKb,EAAaxK,KAAI,SAAAiG,GAAC,OAAE,0BAAgB,cAAGhK,KAAc,OAARgK,EAAErK,KAAoB,KAARqK,EAAErK,IAAhB,sBAAwCqK,EAAE1P,IAAK0P,EAAErK,IAAK9B,OAAO,SAAS6R,IAAI,aAAnF,SAAiG1F,EAAEpK,SAAzGoK,EAAE1P,YAGxC7D,EAAAA,EAAAA,OAAe,YAAW,UAAC2Y,GAAA,OAAD,CAAgBjM,SAAU,EAA1B,WACvB,UAACiM,GAAA,SAAD,wBAA6Bf,EAAa,GAAE,mBAAO5W,MAAO,CAACwH,WAAY,OAA3B,cAAqCoP,EAArC,OAA4D,SACxG,SAACe,GAAA,OAAD,WACI,SAAC,KAAD,CAAYrO,IAAI,SAASzG,GAAIlC,EAAME,KAAKgC,GAAIgU,gBAAiBA,SAEnD,KACjB7X,EAAAA,EAAAA,OAAe,WAAU,UAAC2Y,GAAA,OAAD,CAAgBjM,SAAU,EAA1B,WACtB,SAACiM,GAAA,SAAD,iCACA,SAACA,GAAA,OAAD,WACA,SAACpQ,EAAA,EAAD,CAAQ5H,QAAQ,SAASS,SAAO,iBAAE,kFAC3BoC,OAAOC,QAAQ,gHADY,gCAEpBzD,EAAAA,EAAAA,OAAAA,OAAsB2B,EAAME,KAAKgC,IAFb,OAG1BlC,EAAMgD,UACNhD,EAAM+C,WAJoB,2CAAlC,4CAapB,SAAS2R,GAAiB1U,GACtB,OAAkCrB,EAAAA,EAAAA,UAAS,GAA3C,eAAO4W,EAAP,KAAkBgC,EAAlB,KACA,GAAoC5Y,EAAAA,EAAAA,UAAS,IAA7C,eAAO6W,EAAP,KAAmBgC,EAAnB,KACA,GAAwC7Y,EAAAA,EAAAA,UAAS,MAAjD,eAAO8W,EAAP,KAAqBgC,EAArB,KACIC,EAAgBvF,KACpB,OAAO,iCACH,SAACvN,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,UAACN,EAAA,QAAD,WAAkB5E,EAAMiE,UAAUH,IAAIwF,OAAtC,gBAC9B,UAAC1E,EAAA,OAAD,YACI,UAACyB,EAAA,EAAD,CAAKzF,UAAU,OAAf,WACI,SAAC0F,EAAA,EAAD,WACI,SAAC,KAAD,CAAYjH,MAAO,CAACsF,MAAO,SAAUsE,QAASyO,EAAehR,SAAU,SAAAiR,GAAQH,EAAc,IAAID,EAAa/R,SAASmS,EAAMlS,OAAOgB,cAExI,SAACH,EAAA,EAAD,WAAK,SAAC+L,GAAD,CAAgBkD,UAAWA,EAAWC,WAAYA,EAAYC,aAAcA,EAAc+B,cAAe,SAAApV,GAAIoV,EAAcpV,IAAKqV,gBAAiB,SAAArV,GAAIqV,EAAgBrV,YAE9K,SAACiE,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcG,MAAM,4BAAsBhH,SAAO,iBAAE,oGACrCO,EAAM8U,UAAUS,EAAUC,EAAWC,GADA,cAC9CjK,EAD8C,OAEpDgM,EAAc,IAFsC,kBAG7ChM,GAH6C,uDASxE,SAAS0J,GAAelV,GACpB,OAAoCrB,EAAAA,EAAAA,UAAS,IAA7C,eAAOiZ,EAAP,KAAoBC,EAApB,KACA,GAAkClZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOmZ,EAAP,KAAmBC,EAAnB,KAEA,OAAO,iCACH,SAACnT,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,SAACN,EAAA,QAAD,sDAC9B,UAACA,EAAA,OAAD,YACI,SAAC0N,GAAD,CAAuByF,cAAeA,EAAexD,SAAUvU,EAAMuU,SAAUc,gBAAiBrV,EAAMqV,gBAAiBwC,eAAgB,SAAA1V,GAAI0V,EAAe1V,OAC1J,SAACkE,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcE,KAAK,SAASC,MAAM,uBAAuBhH,SAAO,iBAAE,wFAChEqY,EADgE,gCAE3CzZ,EAAAA,EAAAA,MAAAA,KAAmBuZ,GAFwB,cAEzD3V,EAFyD,gBAGlDjC,EAAMmV,kBAAkByC,EAAY5V,MAAMC,GAHQ,wEAKxD,CAACZ,QAAQ,EAAO8H,MAAO,kDALiC,+CAOlE,SAACvC,EAAA,EAAD,CAAQ5H,QAAQ,YAAYK,MAAO,CAACwH,WAAY,QAASpH,QAAS,WAAKO,EAAMsV,iBAA7E,kC,IC7VjB0C,GACAC,GCMAC,G,WDJJ,SAASC,GAASnY,GACd,IAAMoY,EAAa,IAEnB,GAAwBzZ,EAAAA,EAAAA,UAAS,MAAjC,eAAO8E,EAAP,KAAc4U,EAAd,KACA,GAA0B1Z,EAAAA,EAAAA,UAAS,IAAnC,eAAO2Z,EAAP,KAAcC,EAAd,KACA,GAAgC5Z,EAAAA,EAAAA,UAAS,MAAzC,eAAO6Z,EAAP,KAAiBC,EAAjB,KACA,GAAgC9Z,EAAAA,EAAAA,UAAS,IAAzC,eAAO+Z,EAAP,KAAkBC,EAAlB,KACA,GAA8Cha,EAAAA,EAAAA,UAAS,GAAvD,eAAOia,EAAP,KAAwBC,EAAxB,KAEA,GAA8Bla,EAAAA,EAAAA,UAAS,IAAvC,eAAOma,EAAP,KAAgBC,EAAhB,MACA/O,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAC,oGACmC,QAAO,YAAgBjK,EAAMK,aAA7B,QADnC,uBACT2X,GADS,EACTA,kBAAmBC,GADV,EACUA,eADV,KAEZc,EAFY,SAEKf,KAFL,kCAGZK,EAAS,IAHG,4CAAD,qDAKfpO,MACF,KAEFD,EAAAA,EAAAA,YAAU,WACN,GAAW,OAARvG,GAAsB,KAARA,EAAW,CACxB,IAAMuV,EAAWvV,EAAMwV,cACjBC,EAAczV,EAAM6F,OACpB6P,EAAQL,EAAQM,QAAO,SAAAC,GAAC,OAAEA,EAAErX,MAAM7C,UAAU,EAAE+Z,KAAeF,KACnEL,EAAaQ,GACVA,EAAQ7P,OAAO,GAAGuP,EAAmBM,EAAQ,GAAGjX,QACtC,KAARuB,IACLkV,EAAa,IACbE,EAAmB,MAExB,CAACpV,KAEJuG,EAAAA,EAAAA,YAAU,WACN,GAAG0O,EAAUpP,OAAO,EAAE,CAClB,IAAMgQ,EAASR,EAAQ3V,WAAU,SAAAkW,GAAC,OAAEA,EAAEnX,KAAK0W,KAErCW,EAAcT,EAAQU,MAAMF,EAAOlB,GAAY,EAAEkB,EAAOlB,EAAW,EAAEkB,GACrEG,EAAaX,EAAQU,MAAMF,EAAQA,EAAOlB,GAChDG,EAASgB,EAAYG,OAAOD,IAE5B,IAAME,EAAW,mCAAG,qGACVlO,EAAAA,EAAAA,IAAM,KADI,QAEVmO,EAAM/C,SAASC,cAAc,0BAC3B8C,EAAIC,eAAe,CAACC,MAAO,SAAUC,SAAU,SAHvC,2CAAH,qDAKjBJ,SAEApB,EAASO,EAAQU,MAAM,EAAEpB,MAE9B,CAACM,EAAUE,IAEd,IASMoB,EAAiB,WACnB,IAAMzI,EAAUuH,EAAQ3V,WAAU,SAAAkW,GAAC,OAAEA,EAAEnX,KAAKoW,EAAM,GAAGpW,MACrD,OAAO4W,EAAQU,MAAMjI,EAAQ6G,GAAY,EAAE7G,EAAQ6G,EAAW,EAAG7G,IAE/D0I,EAAc,WAChB,IAAMzI,EAASsH,EAAQ3V,WAAU,SAAAkW,GAAC,OAAEA,EAAEnX,KAAKoW,EAAMA,EAAMhP,OAAO,GAAGpH,MACjE,OAAO4W,EAAQU,MAAMhI,EAAO,EAAGA,EAAO,EAAE4G,IAE5C,OAAGU,EAAQxP,OAAO,GACP,UAAC5I,EAAA,EAAD,CAAWE,UAAU,WAArB,WACH,iBAAKA,UAAU,cAAf,WACI,kBAAO4F,KAAK,OAAOnH,MAAO,CAACsF,MAAO,OAAQyJ,OAAQ,mBAAoB3H,MAAOhD,EAAOiD,SAAU,SAAAnE,GAAI8V,EAAS9V,EAAEkD,OAAOgB,QAASyT,UAAW,SAAA3X,GACpI,GAAe,KAAZA,EAAE4X,QAAa5X,EAAE6X,SAAS,CACzB,IAAM3G,EAAYiF,EAAUvV,WAAU,SAAAyO,GAAC,OAAEA,EAAE1P,KAAK0W,KAC9BC,EAAH,IAAZpF,EAAkCiF,EAAUA,EAAUpP,OAAO,GAAGpH,GAC3CwW,EAAUjF,EAAU,GAAGvR,SAC7C,GAAe,IAAZK,EAAE4X,QACP5X,EAAE8X,iBACF5B,EAAYG,QACV,GAAe,KAAZrW,EAAE4X,QAAa,CACpB,IAAM1G,EAAYiF,EAAUvV,WAAU,SAAAyO,GAAC,OAAEA,EAAE1P,KAAK0W,KAC7CnF,EAAU,EAAEiF,EAAUpP,OAAQuP,EAAmBH,EAAUjF,EAAU,GAAGvR,IACtE2W,EAAmBH,EAAU,GAAGxW,SACpB,KAAZK,EAAE4X,SACP9B,EAAS,QAGjB,yBAAMK,EAAUpP,OAAO,GAAE,mBAAOjK,MAAO,CAAC2L,MAAO,SAAtB,WAAgC,kBAAM3L,MAAO,CAAC6X,YAAa,QAA3B,UAAqCwB,EAAUvV,WAAU,SAAAyO,GAAC,OAAEA,EAAE1P,KAAK0W,KAAiB,GAAE,iBAAMvZ,MAAO,CAAC+O,OAAQ,eAAtB,eAA+CsK,EAAUpP,OAA/I,QAA8J,SAAC,IAAD,CAAiBjK,MAAO,CAAC6X,YAAa,OAAQpP,KAAMwS,EAAAA,IAAa7a,QAAS,WACzR,IAAMgU,EAAYiF,EAAUvV,WAAU,SAAAyO,GAAC,OAAEA,EAAE1P,KAAK0W,KAC9BC,EAAH,IAAZpF,EAAkCiF,EAAUA,EAAUpP,OAAO,GAAGpH,GAC3CwW,EAAUjF,EAAU,GAAGvR,QAClD,SAAC,IAAD,CAAiB7C,MAAO,CAAC6X,YAAa,OAAQpP,KAAMyS,EAAAA,IAAc9a,QAAS,WACxE,IAAMgU,EAAYiF,EAAUvV,WAAU,SAAAyO,GAAC,OAAEA,EAAE1P,KAAK0W,KAC7CnF,EAAU,EAAEiF,EAAUpP,OAAQuP,EAAmBH,EAAUjF,EAAU,GAAGvR,IACtE2W,EAAmBH,EAAU,GAAGxW,UAChC,QACb,SAACsY,GAAA,EAAD,CAAWxb,QAAQ,QAAQ4B,UAAU,uBAAuB6Z,SAAU,SAAAlY,IA7C9D,SAACA,GACjB,GAAGA,EAAEkD,OAAOiV,aAAanY,EAAEkD,OAAOkV,UAAUpY,EAAEkD,OAAOmV,aAlDpC,IAkD8D,CAC3E,IAAMC,EAAQZ,IACd1B,EAASD,EAAMoB,OAAOmB,SACpB,GAAGtY,EAAEkD,OAAOkV,UArDD,IAqDwB,CACrC,IAAMG,EAASd,IACfzB,EAASuC,EAAOpB,OAAOpB,KAuCuDyC,CAAcxY,IAAxF,SACK+V,EAAM3M,KAAI,SAAA0N,GAAC,OAAE,SAACmB,GAAA,OAAD,CAAgB5Z,UAAWgY,IAAkBS,EAAEnX,GAAG,sBAAsBwW,EAAU/M,KAAI,SAAAiG,GAAC,OAAEA,EAAE1P,MAAI4L,SAASuL,EAAEnX,IAAI,kBAAkB,KAAM8Y,QAAM,EAACvb,QAAS,WAAKgZ,EAAYY,EAAEnX,KAAiBuF,yBAAyBC,EAAAA,EAAAA,IAAU2R,EAAEtX,gBAA3CsX,EAAEnX,aAG5M,gBAAKtB,UAAU,iBAAf,SAAiC4X,GAAS,SAACP,GAAD,CAAgBjC,SAAUwC,IAAa,WAG9E,qDCjGf,SAASyC,GAASjb,GACd3B,EAAAA,EAAAA,UAAoB6c,GACpB,IAAIC,EAAO,CACPC,MAAM,SAAC,IAAD,IACN,YAAc,SAACtU,EAAD,IACd,OAAS,SAACyC,EAAD,CAAYlJ,aAAcL,EAAMK,eACzC,QAAU,SAAC6K,EAAD,IACV,OAAS,SAACnL,EAAD,CAAOM,aAAcL,EAAMK,aAAciC,SAAU,SAACC,EAAEC,GAAOxC,EAAMsC,SAASC,EAAGC,MACxF,QAAU,SAACuN,GAAD,CAAQzN,SAAU,SAACC,EAAEC,GAAOxC,EAAMsC,SAASC,EAAGC,MACxD,QAAU,SAACoQ,GAAD,CAAQvS,aAAcL,EAAMK,eACtC,UAAY,SAAC8X,GAAD,CAAU9X,aAAcL,EAAMK,eAC1C,SAAW,SAAC,IAAD,IACX,QAAU,SAAC8E,EAAD,IACV,QAAU,SAAC,EAAAkW,MAAD,CAAOC,SAAS,iBAC1B,QAAU,SAAC,EAAAD,MAAD,CAAOC,SAAS,iBAC1B,mBAAqB,SAAC,EAAAC,2BAAD,IACrB,YAAc,SAAC,EAAAC,WAAD,IACd,oBAAsB,SAAC,EAAAC,SAAD,IACtB,SAAW,SAAC,EAAAC,QAAD,IACX,cAAgB,SAAC,EAAAC,aAAD,IAChB,OAAS,SAAC,EAAAN,MAAD,CAAOC,SAAS,cACzB,cAAgB,SAAC,EAAAM,aAAD,KAEpB,OAAW,OAAR5b,GAA0B,OAAZA,EAAMwC,KAAYwL,OAAO6N,KAAKV,GAAMrN,SAAS9N,EAAMA,EAAMwC,IAAI,MAAc2Y,EAAKnb,EAAMA,EAAMwC,IAAI,OACrG,iBAAK5B,UAAU,cAAcvB,MAAO,CAACG,UAAW,SAAUD,UAAW,SAArE,wCAAwGS,EAAMwC,IAA9G,QAGhB,SAASsZ,GAAW9b,GAChB,OAA0DrB,EAAAA,EAAAA,WAAS,GAAnE,eAAOod,EAAP,KAA8BC,EAA9B,MACAhS,EAAAA,EAAAA,YAAU,WACN,IAAM5J,EAAW,mCAAG,oGACa,QAAO,YAAgBJ,EAAMK,aAA7B,QADb,gBACb6X,GADa,EACbA,gBACH8D,GAAyB,GAFT,2CAAH,qDAIjB5b,MACD,IACH,IAAI6b,EAAS,YACb,OAAOjc,EAAMK,cACT,IAAK,MACD4b,EAAS,OACT,MACJ,IAAK,MACDA,EAAS,OACT,MACJ,QACIA,EAAS,YAEjB,OAAO,SAAC1b,EAAA,EAAD,CAAQE,GAAG,OAAOzB,QAAQ,OAAOwB,MAAM,MAAvC,UACH,UAACE,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACI,SAACJ,EAAA,QAAD,CAAclB,MAAO,CAACC,OAAQ,WAAYG,QAAS,SAAA8C,GAAIvC,EAAMsC,SAASC,EAAG,OAAzE,SAAkF0Z,KAClF,SAAC1b,EAAA,SAAD,KACA,SAACA,EAAA,WAAD,CAAiBK,UAAU,sBAA3B,UACI,UAACsb,EAAA,EAAD,YACI,UAACC,EAAA,EAAD,CAAald,MAAM,2BAAnB,WACI,SAACkd,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,WAAnD,+BACA,SAAC4Z,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,UAAnD,2BAEJ,SAAC4Z,EAAA,EAAD,CAAald,MAAM,gBAAnB,SACK8c,GAAsB,SAAC7D,GAAD,CAAiB5V,SAAU,WAActC,EAAMsC,SAAN,MAAAtC,EAAK,cAA0B,QAEnG,UAACmc,EAAA,EAAD,CAAald,MAAM,gBAAnB,WACI,SAACkd,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,YAAnD,oBACA,SAAC4Z,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,WAAnD,qBACA,SAAC4Z,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,WAAnD,qBACA,SAAC4Z,EAAA,OAAD,CAAkB1c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,UAAnD,2BAEJ,SAAC2Z,EAAA,OAAD,WACA,SAAC,IAAD,CAAiBpU,KAAMsU,EAAAA,IAAc3c,QAAS,SAAA8C,GAAMvC,EAAMsC,SAASC,EAAG,WAAYtD,MAAM,yBAQ5G,IAAMic,GAAc,CAChB,CACIxc,QAAS,MACTO,MAAO,wBACPT,KAAM,aACNY,aAAa,+BAAE,uPAEnB,CACIV,QAAS,MACTO,MAAO,oBACPT,KAAM,aACNY,aAAa,+BAAE,mLAA0I,SAAC,IAAD,CAAiB0I,KAAMuU,EAAAA,MAAjK,YAAwL,iCAAxL,sGAEnB,CACI3d,QAAS,MACTO,MAAO,cACPT,KAAM,aACNY,aAAa,+BAAE,6FAAmE,cAAGqG,OAAO,SAASmC,KAAK,8CAAxB,wCAAnE,kCAAkM,cAAGnC,OAAO,SAASmC,KAAK,yDAAxB,mCAAlM,UAEnB,CACI3I,MAAO,aACPT,KAAM,aACNY,aAAa,+BAAE,+CAAqB,SAAC,IAAD,CAAiB0I,KAAMwU,EAAAA,MAA5C,oHAA4J,cAAG1U,KAAK,0DAA0DnC,OAAO,SAAzE,kBAA5J,UAEnB,CACI/G,QAAS,MACTO,MAAO,cACPT,KAAM,aACNY,aAAa,+BAAE,2DAEnB,CACIH,MAAO,aACPT,KAAM,aACNY,aAAa,+BAAE,sIAAsG,SAAC,IAAD,CAAiB0I,KAAMyU,EAAAA,MAA7H,oGAEnB,CACI7d,QAAS,MACTO,MAAO,YACPT,KAAM,aACNY,aAAa,+BAAE,wEAA8C,iCAA9C,iBAEnB,CACIV,QAAS,MACTO,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,kGACA,oEACA,qGAEJ,oGAA0E,kIAA1E,QACA,2BACI,yCACA,6DAGR,CACIV,QAAS,MACTO,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,8GACA,qFACA,6EAGR,CACIV,QAAS,MACTO,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,wEACA,uEACA,6DAIR,CACIH,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,6FACA,uHACA,iFACA,4LACA,uFAGR,CACAH,MAAO,YACHT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,iHACA,sFACA,6FACA,+FAGR,CACIH,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,oJACA,gHAGR,CACIH,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,yBAAI,SAACgN,EAAA,OAAD,CAAYxE,KAAK,oDAAjB,2BACJ,4GACA,iHACA,iGACA,6IACA,2FACA,8GACA,oFAGR,CACI3I,MAAO,YACPT,KAAM,aACNY,aAAa,iCAAE,gFACf,2BACI,gLACA,0KACA,8EACA,qGACA,6CAAgB,SAAC,IAAD,CAAiB0I,KAAMyU,EAAAA,MAAvC,6EACA,kHACA,4FAAyD,SAAC,IAAD,CAAiBzU,KAAMyU,EAAAA,MAAhF,+DACA,4HACA,gGAGR,CACItd,MAAO,YACPT,KAAM,aACNY,aAAa,+BAAE,iEAAuC,SAACgN,EAAA,OAAD,CAAY3G,OAAO,SAASmC,KAAK,oCAAjC,uBAAvC,gEAA8L,SAAC,IAAD,CAAiBE,KAAMwU,EAAAA,MAArN,a,8KC1OvB,SAASE,IACL,OAAkC7d,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,GAAAA,YAA3C,eAAOoe,EAAP,KAAkBC,EAAlB,KACA,GAAgC/d,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,GAAAA,WAAzC,eAAOse,EAAP,KAAiBC,EAAjB,KACA,GAA0Bje,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,GAAAA,OAAnC,eAAOwe,EAAP,KAAcC,EAAd,KACA,GAAsCne,EAAAA,EAAAA,UAAS,IAA/C,eAAOoe,EAAP,KAAoBC,EAApB,KACA,GAAsCre,EAAAA,EAAAA,UAAS,IAA/C,eAAOse,EAAP,KAAoBC,EAApB,KACA,GAA4Bve,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,QAAAA,SAArC,eAAO8e,EAAP,KAAeC,EAAf,KACA,GAAkCze,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,QAAAA,YAA3C,eAAOgf,EAAP,KAAkBC,EAAlB,KACA,GAA0C3e,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,QAAAA,gBAAnD,eAAOkf,EAAP,KAAuBC,EAAvB,KACMC,EAAkB,EACpB,UAAC,IAAD,CAAa7c,UAAU,OAAvB,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,iCACA,SAAC,IAAD,WAAK,SAAC,UAAD,CAAYmX,IAAI,MAAMC,IAAI,MAAMpa,KAAK,KAAKkD,MAAO0W,EAAQzW,SAAU,SAAAnE,GACpElE,EAAAA,EAAAA,WAAmB,UAAWkE,EAAEkD,OAAOgB,OACvCpI,EAAAA,EAAAA,WAAmB,WAAY,GAAQmH,SAASjD,EAAEkD,OAAOgB,QACzD2W,EAAU7a,EAAEkD,OAAOgB,cALjB,IAQV,UAAC,IAAD,CAAa7F,UAAU,OAAvB,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,2DACA,SAAC,IAAD,WAAK,UAAC,WAAD,CAAahD,KAAK,KAAKkD,MAAO8W,EAAgB7W,SAAU,SAAAnE,GAAIlE,EAAAA,EAAAA,WAAmB,iBAAkBmH,SAASjD,EAAEkD,OAAOgB,QAAQ+W,EAAkBjb,EAAEkD,OAAOgB,QAAtJ,WACG,mBAAQA,MAAM,IAAd,kCACA,mBAAQA,MAAM,IAAd,qCACA,mBAAQA,MAAM,IAAd,4BALF,IASd,OAAO,UAAC,IAAD,CAAWpH,MAAO,CAACmF,QAAS,eAA5B,WACH,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,sDACV,UAAC,IAAD,CAAK5D,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,uBACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcC,KAAK,OAAOjD,KAAK,KAAKkD,MAAOgW,EAAW/V,SAAU,SAAAnE,GAAIma,EAAana,EAAEkD,OAAOgB,gBAEnG,UAAC,IAAD,CAAK7F,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,wBACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcC,KAAK,OAAOjD,KAAK,KAAKkD,MAAOkW,EAAUjW,SAAU,SAAAnE,GAAIqa,EAAYra,EAAEkD,OAAOgB,gBAEjG,UAAC,IAAD,CAAK7F,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,6BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcC,KAAK,OAAOjD,KAAK,KAAKkD,MAAOoW,EAAOnW,SAAU,SAAAnE,GAAIua,EAASva,EAAEkD,OAAOgB,gBAE3F,UAAC,IAAD,CAAK7F,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,KACT,SAAC,IAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,YAAYhH,SAAO,iBAAE,oGAChCpB,EAAAA,EAAAA,KAAAA,KAAkB,CACpB6D,GAAI7D,EAAAA,EAAAA,GAAAA,GACJwO,WAAY4P,EACZ3P,UAAW6P,EACXE,MAAOA,IAL2B,uBAOjBxe,EAAAA,EAAAA,UAPiB,cAOhCuf,EAPgC,OAQtCvf,EAAAA,EAAAA,GAAauf,EARyB,kBAS/B,CAACvc,OAAQ,IATsB,mDAclD,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,0CACV,UAAC,IAAD,CAAKT,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,8BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcC,KAAK,WAAWjD,KAAK,KAAKkD,MAAOsW,EAAarW,SAAU,SAAAnE,GAAIya,EAAeza,EAAEkD,OAAOgB,gBAE3G,UAAC,IAAD,CAAK7F,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,8BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcC,KAAK,WAAWjD,KAAK,KAAKkD,MAAOwW,EAAavW,SAAU,SAAAnE,GAAI2a,EAAe3a,EAAEkD,OAAOgB,gBAE3G,UAAC,IAAD,CAAK7F,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,KACT,SAAC,IAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,YAAYhH,SAAO,iBAAE,8FAChCpB,EAAAA,EAAAA,KAAAA,KAAkB,CACpB6D,GAAI7D,EAAAA,EAAAA,GAAAA,GACJwf,aAAcd,EACde,aAAcb,IAJoB,gCAM/B,CAAC5b,OAAQ,IANsB,mDAWlD,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,2DACV,UAAC,IAAD,CAAKT,UAAU,OAAf,WACI,SAAC,IAAD,CAAK2F,GAAI,EAAT,oDACA,UAAC,IAAD,YACI,UAAC,WAAD,CAAahD,KAAK,KAAKkD,MAAO4W,EAAW3W,SAAU,SAAAnE,GAAIlE,EAAAA,EAAAA,WAAmB,aAAckE,EAAEkD,OAAOgB,OAAO6W,EAAa/a,EAAEkD,OAAOgB,QAA9H,WACI,mBAAQA,MAAM,MAAd,kBACA,mBAAQA,MAAM,OAAd,mBACA,mBAAQA,MAAM,MAAd,8BAEJ,4EAA+C,cAAG7F,UAAU,eAAe0W,IAAI,aAAa1P,KAAK,wEAAqEnC,OAAO,SAA9H,kBAA/C,aAGPgY","sources":["changelog.js","db/lemma.js","db/server.js","db/ressources.js","db/zettel.js","db/indexbox.js","db/mainContent.js","settings.js"],"sourcesContent":["import { Alert, Container } from \"react-bootstrap\";\nimport { arachne } from \"./arachne.js\";\nimport { useState } from \"react\";\n\nfunction  ChangeLog(){\n    arachne.changeLog = arachne.changeLog.sort((a,b)=>a.date<b.date);\n    arachne.changeLog = arachne.changeLog.filter(a=>(a.project===undefined||a.project===arachne.project_name));\n    const [displayAll, setDisplayAll] = useState(arachne.changeLog.length>5?false:true);\n    const formatDate = d=>{\n        const numToMonth = {\n            \"01\": \"Januar\",\n            \"02\": \"Februar\",\n            \"03\": \"März\",\n            \"04\": \"April\",\n            \"05\": \"Mai\",\n            \"06\": \"Juni\",\n            \"07\": \"Juli\",\n            \"08\": \"August\",\n            \"09\": \"September\",\n            \"10\": \"Oktober\",\n            \"11\": \"November\",\n            \"12\": \"Dezember\",\n        };\n        return `${d.substring(8,10)}. ${numToMonth[d.substring(5,7)]} ${d.substring(0,4)}`;\n    };\n    return <Container>\n        {arachne.changeLog.map((c,i)=>{if(displayAll||i<5){return <Alert key={i} variant={i===0?\"primary\":\"secondary\"}><Alert.Heading>{c.title}</Alert.Heading><i>{formatDate(c.date)}</i>{c.description}</Alert>}else{return null}})}\n        {displayAll?null:<Alert style={{cursor: \"pointer\", marginTop: \"100px\", textAlign: \"center\"}} variant=\"secondary\" onClick={()=>{setDisplayAll(true)}}>Alle Änderungen anzeigen.</Alert>}\n    </Container>;\n    \n}\n\nexport { ChangeLog };","import { Col, Table, Offcanvas, Navbar, Row, Container, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nlet LemmaRow;\nlet LemmaHeader;\nlet LemmaAsideContent;\nlet lemmaSearchItems;\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null, newItemCreated: null, lemmaSearchItems: [[\"id\", \"ID\"]]};\n        const loadModules = async () =>{\n            \n            ({ LemmaRow, LemmaHeader, lemmaSearchItems, LemmaAsideContent } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            this.setState({lemmaSearchItems: lemmaSearchItems()})\n        };\n        loadModules();\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            boxName=\"lemma\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            setupItems={this.state.newItemCreated}\n                            searchOptions={this.state.lemmaSearchItems}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Wort\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neues Wort\", async ()=>{\n                                        if(window.confirm(\"Soll ein neues Wort erstellt werden?\")){\n                                            const newId = await arachne.lemma.save({lemma_display:\"Neues Wort\", lemma:\"NeuesWort\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <LemmaBox\n                    loadMain={(e, res)=>{this.props.loadMain(e, res)}}\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(arachne.access(\"l_edit\")&&this.state.item)?<LemmaAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<LemmaRow key={cEl.id} lemma={cEl} loadMain={e=>{this.props.loadMain(e, \"zettel\");}} showDetail={(cId)=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === cId))}} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table striped width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><LemmaHeader /></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\n\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.item.id};\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>ID {this.props.item.id}</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body><LemmaAsideContent id={this.state.id} item={this.props.item} onUpdate={id=>{this.props.onUpdate(id);}} onClose={()=>{this.props.onClose()}} onReload={()=>{this.props.onReload()}} />\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({id: this.props.item.id});\n        }\n    }\n}\n\nexport { Lemma };","import { Alert, Button, Row, Col, Offcanvas, Table, Form, Navbar, Container, Tabs, Tab } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport 'chart.js/auto';\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, SelectMenu, ToolKit, StatusButton, sleep, sqlDate } from \"./../elements.js\";\n\nimport { MLW_Import_Ressource, GeschichtsquellenImport } from \"./../content/mlw.js\"; // cannot lazy load these components!\nimport { TLL_Import_Ressource } from \"./../content/tll.js\"; // cannot lazy load these components!\nimport { DOM_Import_Ressource } from \"./../content/dom.js\"; // cannot lazy load these components!\nlet StatisticsChart;\n\n\nfunction Statistics(props){\n    const [statData, setStatData] = useState([]);\n    const [lastUpdated, setLastUpdated] = useState(null);\n    const [zettelBox, setZettelBox] = useState([]);\n    const [lemmaBox, setLemmaBox] = useState([]);\n    const [ressourceBox, setRessourceBox] = useState([]);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            ({ StatisticsChart } = await import(`./../content/mlw.js`));\n            const dataIn = await arachne.statistics.getAll();\n            let newZettelBox = [];\n            let newLemmaBox = [];\n            let newRessourceBox = [];\n            dataIn.forEach(d=>{\n                if(d.name===\"last_updated\"){\n                    setLastUpdated(JSON.parse(d.data));\n                }else if(d.name.substring(0,6)===\"zettel\"){\n                    newZettelBox.push(<StatisticsChart key={d.id} name={d.name} data={JSON.parse(d.data)} />);\n                }else if(d.name.substring(0,5)===\"lemma\"){\n                    newLemmaBox.push(<StatisticsChart key={d.id} name={d.name} data={JSON.parse(d.data)} />);\n                }else if(d.name.substring(0,9)===\"ressource\"){\n                    newRessourceBox.push(<StatisticsChart key={d.id} name={d.name} data={JSON.parse(d.data)} />);\n                }else{\n                    throw new Error(\"data type not found!\");\n                }\n            });\n            setZettelBox(newZettelBox);\n            setLemmaBox(newLemmaBox);\n            setRessourceBox(newRessourceBox);\n        };\n        fetchData();\n    }, []);\n    return <>\n        <Navbar fixed=\"bottom\" bg=\"light\">\n            <Container fluid>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                [\"Statistik aktualisieren\", async ()=>{\n                                    if(window.confirm(\"Sollen die Statistik aktualisiert werden? Dieser Prozess dauert ca. 30 Sekunden.\")){\n                                        const reStatus = await arachne.exec(\"statistics_update\");\n                                        if(reStatus===200){\n                                            this.getNumbers();\n                                            return {status: true};\n                                        }else{\n                                            return {status: false, error: \"Die Aktualisierung war nicht erfolgreich.\"};\n                                        }\n                                    }\n                                }]\n                            ]} />}\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        <Container className=\"mainBody\">\n            <Tabs defaultActiveKey=\"lemma\" className=\"mb-3\">\n                <Tab eventKey=\"lemma\" title=\"Lemma\">{lemmaBox}</Tab>\n                <Tab eventKey=\"zettel\" title=\"Zettel\">{zettelBox}</Tab>\n                <Tab eventKey=\"ressource\" title=\"Werke und Ressourcen\">{ressourceBox}</Tab>\n            </Tabs>\n            <div style={{float: \"right\", color: \"var(--bs-gray-400\"}}>{lastUpdated}</div>\n        </Container>\n    </>;\n}\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            ocrJobs: [],\n            faszikelJobs: [],\n            users: [],\n            ocrDisplayAll: false,\n        };\n    }\n    render(){\n        let defaultActive = \"\";\n        if(arachne.access(\"ocr_jobs\")){defaultActive = \"o\"}\n        else if(arachne.access(\"faszikel\")){defaultActive = \"d\"}\n        else if(arachne.access(\"admin\")){defaultActive = \"a\"}\n        return <><Container className=\"mainBody\">\n        <Tabs defaultActiveKey={defaultActive} className=\"mb-5\">\n            {arachne.access(\"ocr_jobs\")&&<Tab eventKey=\"o\" title=\"ocr-Aufträge\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge.</Col>\n                </Row>\n                <Row><Col>\n                    <StatusButton value=\"neuen Zettel-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job\");\n                        if(re===200){\n                            await sleep(1000);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                    <StatusButton style={{float: \"right\"}} value=\"neuen Scan-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job_scans\");\n                        if(re===200){\n                            await sleep(1000);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                </Col></Row>\n                <Row><Col>\n                    <Table striped width=\"100%\">\n                        <thead>\n                            <tr>\n                                <th>Datum</th>\n                                <th>Objekte</th>\n                                <th>Status</th>\n                                <th>Gesamtauftrag</th>\n                                <th>bearbeitet</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.ocrJobs.map((row,i)=>{\n                                if(this.state.ocrDisplayAll||i<12){\n                                    let status=<td className=\"text-primary\">aktiv</td>;\n                                    if(row.finished===1){status=<td className=\"text-secondary\">beendet</td>}\n                                    else if(new Date()-sqlDate(row.u_date)>1800000){status=<td className=\"text-warning\">inaktiv</td>}\n                                    return <tr key={row.id}><td>{row.c_date.substring(0, 10)}</td><td>{row.source}</td>{status}<td>{row.total}</td><td>{Math.round(1000/row.total*row.count)/10}%</td></tr>;\n                                }else{\n                                    return null;\n                                }\n                                \n                            })}\n                        </tbody>\n                    </Table>\n                </Col></Row>\n                {this.state.ocrDisplayAll?null:<Alert style={{cursor: \"pointer\", marginTop: \"50px\", textAlign: \"center\"}} variant=\"secondary\" onClick={()=>{this.setState({ocrDisplayAll: true})}}>Alle Einträge anzeigen.</Alert>}\n            </Tab>}\n            {arachne.access(\"faszikel\")&&<Tab eventKey=\"d\" title=\"Druckausgabe\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zum Erstellen der Druckausgabe.</Col>\n                </Row>\n                <Row><Col>\n                <Table striped width=\"100%\">\n                        <tbody>{this.state.faszikelJobs.map(faszikel => {\n                            if(faszikel.log){\n                                let dateArray = faszikel.date.split(\"\")\n                                dateArray[10] = \" \";\n                                dateArray[13] = \":\";\n                                dateArray[16] = \":\";\n                                let createdDate = dateArray.join(\"\").substring(0, 19);\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>{faszikel.name?faszikel.name.substring(0, faszikel.name.length-4):<i>Eintrag</i>}</b><br /><i className=\"minorTxt\">{createdDate}</i></td><td>{faszikel.name?<a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/${faszikel.name}`}>pdf</a>:null}</td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/zip`}>Artikel</a></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/log`}>log-Datei</a></td></tr>;\n                            } else {\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>Neuer Auftrag in Bearbeitung</b></td><td></td><td></td></tr>;\n                            }\n                        })}</tbody>\n                </Table>\n                </Col></Row>\n            </Tab>}\n            {arachne.access(\"admin\")&&<Tab eventKey=\"a\" title=\"Kontenverwaltung\" style={{padding: \"0 20%\"}}>\n                <Table striped width=\"100%\">\n                        <thead style={{textAlign:\"left\"}}><tr><th width=\"25%\">Name</th><th width=\"30%\">Rechte</th><th width=\"35%\">Browser</th><th width=\"10%\">Aktiv</th></tr></thead>\n                        <tbody>\n                            {this.state.users.map(u=>{return <tr key={u.id}>\n                            <td><a className=\"text-dark\" onClick={()=>{this.setState({item: u})}}>{u.first_name} {u.last_name}</a></td>\n                            <td>{JSON.parse(u.access).join(\", \")}</td>\n                            <td>{u.agent}</td>\n                            <td>{u.session_last_active&&new Date()-sqlDate(u.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td>\n                        </tr>})}\n                        </tbody>\n                </Table>\n            </Tab>}\n        </Tabs></Container>\n        {this.state.item&&<ServerAside onReload={()=>{this.loadUsers()}} onClose={()=>{this.setState({item: null})}} item={this.state.item} onUpdate={ids=>{}} />}\n        </>;\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){this.loadUsers()}\n        if(arachne.access(\"ocr_jobs\")){this.loadOcrJobs()}\n        if(arachne.access(\"faszikel\")){this.loadFaszikelJobs()}\n    }\n    async loadFaszikelJobs(){\n        this.setState({faszikelJobs: []});\n        const allFaszikelJobs = await arachne.exec(\"get_faszikel_jobs\", true);\n        //allFaszikelJobs.sort((a,b)=>a.date<b.date);\n        this.setState({faszikelJobs: allFaszikelJobs/*.splice(0,100)*/});\n    }\n    async loadOcrJobs(){\n        this.setState({ocrJobs: []});\n        const newOcrJobs = await arachne.ocr_jobs.getAll();\n        newOcrJobs.sort((a,b)=>a.c_date<b.c_date);\n        this.setState({ocrJobs: newOcrJobs});\n    }\n    async loadUsers(){\n        this.setState({users: []});\n        const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n        this.setState({users: newUsers});\n    }\n}\nclass ServerAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {access: JSON.parse(this.props.item.access)};\n    }\n    render(){\n        const rights = {\n            \"auth\": \"Profil aktiviert\",\n            \"admin\": \"Adminrechte\",\n            \"o_view\": \"Kommentarspalte (opera-Listen)\",\n            \"o_edit\": \"opera-Listen bearbeiten\",\n            \"z_add\": \"Zettel importieren\",\n            \"z_edit\": \"Zettel bearbeiten\",\n            \"l_edit\": \"Lemma-Liste bearbeiten\",\n            \"library\": \"Zugriff auf Bibliothek\",\n            \"e_edit\": \"Bibliothek bearbeiten\",\n            \"setup\": \"Zugriff auf Datenbanksetup\",\n            \"module\": \"Zugriff über Python-Modul\",\n            \"editor\": \"Zugriff auf Lemmastrecken-Editor\",\n            \"comment\": \"Zugriff auf Kommentarfunktion\",\n            \"comment_moderator\": \"Kommentare moderieren\",\n            \"faszikel\": \"Faszikel konvertieren\",\n            \"ocr_jobs\": \"OCR-Aufträge aufgeben\",\n            \"geschichtsquellen\": \"Zugriff auf Geschichtsquellen-Verknüpfung\",\n        };\n        let rightList = [];\n        for(const [right, description] of Object.entries(rights)){\n            let marked = \"\";\n            if(this.state.access.includes(right)){marked = \"accessMarked\"}\n            rightList.push(<div key={right} style={{cursor: \"pointer\"}} className={marked} onClick={()=>{\n                let nAccess = this.state.access;\n                if(nAccess.includes(right)){\n                    nAccess = nAccess.map(i => {if(i!=right){return i}});\n                } else {\n                    nAccess.push(right);\n                }\n                this.setState({access: nAccess});\n            }}>{description}</div>);\n        }\n\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>{this.props.item.first_name} {this.props.item.last_name} (ID {this.props.item.id})</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Container>\n                <Row className=\"mb-1\">\n                    <Col>Am {this.props.item.session_last_active} zuletzt online.</Col>\n                </Row>\n                <Row className=\"mb-3\">\n                    <Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{this.props.item.agent}</Col>\n                </Row>\n                <Row><Col><h4>Rechte</h4></Col></Row>\n                <Row className=\"mb-3\"><Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{rightList}</Col></Row>\n                <Row><Col><StatusButton value=\"speichern\" onClick={()=>{\n                    arachne.user.save({\n                        id: this.props.item.id,\n                        access: JSON.stringify(this.state.access)\n                    })\n                    this.props.onReload();\n                    return {status: true};\n                }} />\n                </Col><Col><Button variant=\"danger\" onClick={async ()=>{\n                    if(window.confirm(\"Soll der Account wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                        await arachne.user.delete(this.props.item.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>Account löschen</Button></Col></Row>\n            </Container>\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.id!=this.props.item.id){\n            this.setState({access: JSON.parse(this.props.item.access)});\n        }\n    }\n}\nfunction ImportOCR(props){\n    const [ocrRessource, setOCRRessource] = useState();\n    const [ocrRessourceId, setOCRRessourceId] = useState();\n    const [fileLst, setFileLst] = useState();\n    return <>\n        <Row className=\"mb-1\">\n            <Col xs={3}>Ressource:</Col>\n            <Col><AutoComplete  style={{width: \"100%\"}} value={ocrRessource?ocrRessource:\"\"} tbl=\"scan_paths\" placeholder=\"/A/...\" searchCol=\"path\" returnCol=\"path\" onChange={async (value, id)=>{setOCRRessource(value);setOCRRessourceId(id)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\"><Col xs={3}></Col><Col><small className=\"text-danger\">Achtung: Die Vorschlagsliste muss manuell aktualisiert werden.</small></Col></Row>\n        <Row className=\"mb-4\">\n            <Col xs={3}>.txt-Dateien:</Col>\n            <Col><Form.Group>\n                <Form.Control type=\"file\" multiple accept=\"text/plain\" onChange={e=>{setFileLst(e.target.files)}} />\n            </Form.Group></Col>\n        </Row>\n        <Row>\n            <Col xs={3}></Col>\n            <Col><StatusButton type=\"button\" value=\"hochladen\" onClick={async ()=>{\n            if(fileLst==null){\n                return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n            }else if(ocrRessourceId==null){\n                return {status: false, error: \"Wählen Sie einen Ordner aus.\"};\n            }else{\n                const scanLst = await arachne.scan.get({path: ocrRessource}, {select: [\"id\", \"filename\"]});\n                //console.log(scanLst);\n                let missLst = [];\n                let saveLst = [];\n                for(const file of fileLst){\n                    const fName = file.name.substring(0,file.name.length-4);\n                    const cScan = scanLst.find(i => i.filename == fName);\n                    if(cScan){\n                        //console.log(cScan);\n                        const fileTxt = await file.text();\n                        saveLst.push({id: cScan.id, full_text: fileTxt});\n                    } else {\n                        missLst.push(file.name);\n                    }\n                }\n                if(saveLst.length>0){await arachne.scan.save(saveLst)}\n                if(missLst.length>1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`};}\n                else if(missLst.length==1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\"};}\n                else{return {status: true};}\n            }\n        }} /></Col>\n        </Row>\n    </>;\n}\nfunction Import(props){\n    const importRessource =async(editionObj, fileLst)=>{\n        // create new edition\n        if(editionObj.path.substring(0,1)!=\"/\"){editionObj.path = \"/\"+editionObj.path}\n        if(editionObj.path.substring(editionObj.path.length-1)!=\"/\"){editionObj.path = editionObj.path+\"/\"}\n        const newEditionId = await arachne.edition.save(editionObj);\n        // upload files\n        if(newEditionId>0){\n            let uploadForm = new FormData();\n            uploadForm.append(\"edition_id\", newEditionId);\n            uploadForm.append(\"path\", editionObj.path);\n            const fLength = fileLst.length;\n            for(let i=0; i<fLength; i++){uploadForm.append(\"files\", fileLst[i])}\n            const re = await arachne.importScans(uploadForm);\n            if(re.status===400){return {status: false, error: `Fehler beim Hochladen der Dateien. Eine neue Ressource mit ID ${newEditionId} wurde aber bereits erstellt.`};}\n            else if(re.body.length==1){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n            else if(re.body.length>0){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n            else{return {status: true, success: `Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n        } else {\n            return {status: false, error: \"Edition konnte nicht erstellt werden. Keine Bilder wurden hochgeladen.\"};\n        }\n    };\n\n    let importRessourceComponent = null;\n    if(arachne.project_name===\"mlw\"){\n        importRessourceComponent = <MLW_Import_Ressource importRessource={importRessource} />;\n    }else if(arachne.project_name===\"tll\"){\n        importRessourceComponent = <TLL_Import_Ressource importRessource={importRessource} />;\n    }else if(arachne.project_name===\"dom\"){\n        importRessourceComponent = <DOM_Import_Ressource importRessource={importRessource} />;\n    }\n    return <Container className=\"mainBody\">\n        <Tabs defaultActiveKey=\"r\" className=\"mb-5\">\n            {arachne.access(\"e_edit\")&&<Tab eventKey=\"r\" title=\"Ressource\" style={{padding: \"0 25%\"}}>\n                            {importRessourceComponent}\n                        </Tab>}\n            {arachne.access(\"e_edit\")&&<Tab eventKey=\"o\" title=\"ocr-Dateien\" style={{padding: \"0 25%\"}}>\n                <ImportOCR />\n            </Tab>}\n            {arachne.access(\"z_add\")&&<Tab eventKey=\"z\" title=\"Zettel\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col xs={3}>Buchstabe:</Col>\n                    <Col><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I/J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U/V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    <Col xs={3}>erstellt von:</Col>\n                    <Col><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    <Col xs={3}>Zettel-Typ:</Col>\n                    <Col><SelectMenu options={[[0, \"Index-/Exzerpt-Zettel\"], [1, \"verzetteltes Material\"], [4, \"Literatur\"]]} onChange={e=>{this.setState({zettelType: e.target.value})}} /></Col>\n                </Row>\n                <Row className=\"mb-4\">\n                    <Col xs={3}>Bilder:</Col>\n                    <Col><Form.Group>\n                        <Form.Control type=\"file\" multiple accept=\"image/jpeg\" onChange={e=>{this.setState({zettelFiles: e.target.files})}} />\n                    </Form.Group></Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    <Col xs={3}></Col>\n                    <Col><StatusButton value=\"Zettel hochladen\" onClick={async (progress)=>{\n                        if(this.state.zettelFiles==null){\n                            return {status: false, error: \"Wählen Sie Bilder zum Hochladen aus.\"};\n                        } else if(this.state.zettelFiles.length%2 != 0){\n                            return {status: false, error: \"Wählen Sie eine gerade Anzahl Bilder aus (jeweils Vorder- und Rückseiten!).\"}\n                        }else{\n                            const maxItem= 100;\n                            let cItemCount = maxItem;\n                            let cUploadIndex = -1;\n                            let uploadGroup = [];\n                            let zettelFiles = this.state.zettelFiles;\n                            //console.log(zettelFiles);\n                            // sort imgs\n                            zettelFiles = Array.from(zettelFiles);\n                            zettelFiles.sort((a, b) => {if(b.name < a.name){return 1;}else{return -1;}});\n                            //console.log(zettelFiles);\n\n                            // prepare upload groups\n                            for(let i=0; i<zettelFiles.length; i++){\n                                if(cItemCount >= maxItem){\n                                    cItemCount = 0;\n                                    cUploadIndex ++;\n                                    uploadGroup.push(new FormData());\n                                    uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                    uploadGroup[cUploadIndex].append(\"type\", this.state.zettelType);\n                                    uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                }\n                                cItemCount ++;\n                                uploadGroup[cUploadIndex].append(\"files\", zettelFiles[i]);\n                            }\n                            // loop through groups and upload!\n                            let firstId = 0;\n                            let lastId = 0;\n                            const maxLoops = uploadGroup.length;\n                            let currentLoop = 0;\n                            for(const uItem of uploadGroup){\n                                const r = await arachne.importZettel(uItem);\n                                if(firstId === 0){firstId=r[0]}\n                                lastId = r[1];\n                                currentLoop ++;\n                                progress(100/maxLoops*currentLoop);\n                            }\n                            this.setState({zettelSuccess: [firstId, lastId]});\n                            return {status: true};\n                        }\n                    }} /></Col>\n                </Row>\n                {this.state.zettelSuccess&&<Row>\n                    <Col><Alert variant=\"success\" onClose={()=>{this.setState({zettelSuccess: null})}} dismissible>\n                        <Alert.Heading>Hochladen erfolgreich!</Alert.Heading><p>Die neuen Zettel haben IDs zwischen <b>{this.state.zettelSuccess[0]}</b> und <b>{this.state.zettelSuccess[1]}</b>. Möchten Sie die neuen Zettel in Zettel-Datenbank <Alert.Link href=\"#\" onClick={e=>{\n                localStorage.setItem(`${arachne.project_name}_searchBox_zettel`, `[[{\"id\":0,\"c\":\"id\",\"o\":\">=\",\"v\":${this.state.zettelSuccess[0]}},{\"id\":1,\"c\":\"id\",\"o\":\"<=\",\"v\":${this.state.zettelSuccess[1]}}],1,[\"id\"]]`);\n                this.props.loadMain(e, \"zettel\");\n            }}>öffnen</Alert.Link>?</p></Alert></Col>\n                </Row>}\n            <Row className=\"mt-4\"><Col>Eine Anleitung zum Hochladen der Zettel finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/09-HiwiHow:-Zettel-scannen-und-hochladen\">hier</a>.</Col></Row>\n            </Tab>}\n            {arachne.project_name===\"mlw\"&&arachne.access(\"geschichtsquellen\")&&<Tab eventKey=\"g\" title=\"Geschichtsquellen-Daten\" style={{padding: \"0 25%\"}}>\n            <GeschichtsquellenImport />\n        </Tab>}\n        </Tabs>\n    </Container>;\n}\n\nexport { Import, Server, Statistics };","import { Row, Col, Button, Table, Navbar, Offcanvas, Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, Navigator, parseHTML, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nclass SekLit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"seklit\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"id\", \"ID\"]\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"e_edit\")&&<ToolKit menuItems={[\n                                    [\"neuer Eintrag\", async ()=>{\n                                        if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                                            const newId = await arachne.seklit.save({titel: \"neues Werk\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <SekLitBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(arachne.access(\"e_edit\")&&this.state.item)?<SekLitAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.seklit.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            this.setState({currentElements: [], item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.seklit.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.seklit.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.seklit.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass SekLitBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.kennziffer}</td><td>{cEl.signatur} {cEl.alte_signatur?`(${cEl.alte_signatur})`:null}</td><td>\n                    {cEl.name}, {cEl.vorname}, <b>{cEl.titel}</b>, {cEl.reihe}, {cEl.ort} {cEl.jahr}\n                    </td>\n                    <td>{cEl.weitere_angaben}{cEl.zusatz?\" - \"+cEl.zusatz:null}</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\" striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"10%\">Kennziffer</th><th width=\"10%\">Signatur</th><th width=\"60%\">Werkbezeichnung</th><th>weitere Angaben</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass SekLitAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            kennziffer: this.props.item.kennziffer,\n            signatur: this.props.item.signatur,\n            alte_signatur: this.props.item.alte_signatur,\n            name: this.props.item.name,\n            vorname: this.props.item.vorname,\n            titel: this.props.item.titel,\n            reihe: this.props.item.reihe,\n            weitere_angaben: this.props.item.weitere_angaben,\n            ort: this.props.item.ort,\n            jahr: this.props.item.jahr,\n            zusatz: this.props.item.zusatz,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n    <Offcanvas.Header closeButton>\n        <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n    </Offcanvas.Header>\n    <Offcanvas.Body>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Kennziffer:</Col>\n            <Col><input type=\"text\" value={this.state.kennziffer?this.state.kennziffer:\"\"} onChange={e=>{this.setState({kennziffer: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.signatur?this.state.signatur:\"\"} onChange={e=>{this.setState({signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>alte Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.alte_signatur?this.state.alte_signatur:\"\"} onChange={e=>{this.setState({alte_signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Name:</Col>\n            <Col><input type=\"text\" value={this.state.name?this.state.name:\"\"} onChange={e=>{this.setState({name: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Vorname:</Col>\n            <Col><input type=\"text\" value={this.state.vorname?this.state.vorname:\"\"} onChange={e=>{this.setState({vorname: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Titel:</Col>\n            <Col><input type=\"text\" value={this.state.titel?this.state.titel:\"\"} onChange={e=>{this.setState({titel: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Reihe:</Col>\n            <Col><input type=\"text\" value={this.state.reihe?this.state.reihe:\"\"} onChange={e=>{this.setState({reihe: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Ort:</Col>\n            <Col><input type=\"text\" value={this.state.ort?this.state.ort:\"\"} onChange={e=>{this.setState({ort: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Jahr:</Col>\n            <Col><input type=\"text\" value={this.state.jahr?this.state.jahr:\"\"} onChange={e=>{this.setState({jahr: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>weitere Angaben:</Col>\n            <Col><input type=\"text\" value={this.state.weitere_angaben?this.state.weitere_angaben:\"\"} onChange={e=>{this.setState({weitere_angaben: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Zusatz:</Col>\n            <Col><input type=\"text\" value={this.state.zusatz?this.state.zusatz:\"\"} onChange={e=>{this.setState({zusatz: e.target.value})}} /></Col>\n        </Row>\n        <Row>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            await arachne.seklit.save({\n                id: this.state.id,\n                kennziffer: this.state.kennziffer,\n                signatur: this.state.signature,\n                alte_signatur: this.state.alte_signatur,\n                name: this.state.name,\n                vorname: this.state.vorname,\n                titel: this.state.titel,\n                reihe: this.state.reihe,\n                weitere_angaben: this.state.weitere_angaben,\n                ort: this.state.ort,\n                jahr: this.state.jahr,\n                zusatz: this.state.zusatz,\n            });\n            this.props.onUpdate(this.state.id);\n            return {status: true};\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    if(window.confirm(\"Soll der Eintrag gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                        await arachne.seklit.delete(this.state.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>löschen</Button></Col>\n        </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                kennziffer: this.props.item.kennziffer,\n                signatur: this.props.item.signatur,\n                alte_signatur: this.props.item.alte_signatur,\n                name: this.props.item.name,\n                vorname: this.props.item.vorname,\n                titel: this.props.item.titel,\n                reihe: this.props.item.reihe,\n                weitere_angaben: this.props.item.weitere_angaben,\n                ort: this.props.item.ort,\n                jahr: this.props.item.jahr,\n                zusatz: this.props.item.zusatz,\n            });\n        }\n    }\n}\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null,\n            offset: 0,\n        };\n    }\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"ressources\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"ac_web\", \"Werk\"],\n                                [\"work_id\", \"Werk-ID\"],\n                                [\"ressource\", \"Ressource-Typ\"],\n                                [\"id\", \"ID\"],\n                                [\"path\", \"Dateipfad\"],\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neue Ressource\", async ()=>{\n                                        if(window.confirm(\"Soll eine neue Ressource erstellt werden?\")){\n                                            const newId = await arachne.edition.save({ressource: 0, editor: \"Neue Ressource\", year: new Date().getFullYear()});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <RessourceBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(arachne.access(\"e_edit\")&&this.state.item)?<RessourceAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:this.state.offset, order:this.state.queryOrder});\n            this.setState({currentElements: currentElements, item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                offset: ((newPage-1)*50),\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                let url = cEl.url;\n                if(url===\"\"||url===null){url = \"/site/argos/\"+cEl.id}\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a href={url} target=\"_blank\">öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\"striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"20%\">Kürzel</th><th width=\"20%\">Typ</th><th>vrkn. Werk</th><th width=\"10%\">Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            vol_cont: this.props.item.vol_cont,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature,\n            comment: this.props.item.comment,\n            path: this.props.item.path,\n            url: this.props.item.url,\n            aspect_ratio: this.props.item.aspect_ratio,\n            bibliography_preview: null,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Werk:</Col>\n                <Col><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id});this.updateBibliography(id)}} /></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Alter Dateiname:</Col>\n                <Col>{this.props.item.dir_name}</Col>\n            </Row>\n            {this.state.bibliography_preview&&<Row className=\"mb-4\">\n                <Col xs={3}>Biblio-graphische Angaben:</Col>\n                <Col style={{fontSize: \"90%\", backgroundColor: \"var(--bs-gray-100\"}}>{this.state.bibliography_preview}</Col>\n            </Row>}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Ressource:</Col>\n                <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource?this.state.ressource:\"\"} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></Col>\n            </Row>\n            {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n                <Row key=\"0\" className=\"mb-2\">\n                    <Col xs={3}>Editor:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"1\" className=\"mb-2\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"2\" className=\"mb-2\">\n                    <Col xs={3}>Band:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.volume?this.state.volume:\"\"} onChange={e=>{this.setState({volume: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"3\" className=\"mb-2\">\n                    <Col xs={3}>Bandinhalt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.vol_cont?this.state.vol_cont:\"\"} onChange={e=>{this.setState({vol_cont: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"4\" className=\"mb-4\">\n                    <Col xs={3}>Reihe:</Col>\n                    <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie?this.state.serie:\"\"} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===2?[\n                <Row key=\"5\" className=\"mb-2\">\n                    <Col xs={3}>Stadt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"6\" className=\"mb-2\">\n                    <Col xs={3}>Bibliothek:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.library?this.state.library:\"\"} onChange={e=>{this.setState({library: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"7\" className=\"mb-4\">\n                    <Col xs={3}>Signatur:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.signature?this.state.signature:\"\"} onChange={e=>{this.setState({signature: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===3||this.state.ressource===4?[\n                <Row key=\"8\" className=\"mb-2\">\n                    <Col xs={3}>Drucker:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"9\" className=\"mb-2\">\n                    <Col xs={3}>Ort:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"10\" className=\"mb-4\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Kommentar:</Col>\n                <Col><textarea style={{width: \"267px\", height: \"100px\"}} value={this.state.comment?this.state.comment:\"\"} onChange={e=>{this.setState({comment: e.target.value})}}></textarea></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Dateipfad:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.path?this.state.path:\"\"} onChange={e=>{this.setState({path: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n                <Col xs={3}>Link:<br /><small>(externe Quellen)</small></Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.url?this.state.url:\"\"} onChange={e=>{this.setState({url: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n            <Col xs={3}>Seiten-verhältnis:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.aspect_ratio?this.state.aspect_ratio:\"\"} onChange={e=>{this.setState({aspect_ratio: e.target.value.substring(0,5)})}} /></Col>\n        </Row>\n            <Row className=\"mb-2\">\n                <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            if((this.state.ressource===0||this.state.ressource===1||this.state.ressource===5)&&!this.state.serie&&(!this.state.editor||!this.state.year)){\n                return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n            } else {\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work_id,\n                    ressource: this.state.ressource,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.vol_cont,\n                    serie: this.state.serie,\n                    comment: this.state.comment,\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature,\n                    path: this.state.path,\n                    url: this.state.url,\n                    aspect_ratio: this.state.aspect_ratio,\n                });\n                this.props.onUpdate(this.state.id);\n                return {status: true};\n            }\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"20px\"}} onClick={async ()=>{\n            if(window.confirm(\"Soll die Ressource wirklich gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                await arachne.edition.delete(this.state.id);\n                this.props.onUpdate(null);\n                this.props.onReload();\n            }\n        }}>löschen</Button></Col>\n            </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidMount(){\n        this.updateBibliography(this.props.item.work_id);\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.updateBibliography(this.props.item.work_id);\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                vol_cont: this.props.item.vol_cont,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature,\n                comment: this.props.item.comment,\n                path: this.props.item.path,\n                url: this.props.item.url,\n                aspect_ratio: this.props.item.aspect_ratio,\n            });\n        }\n    }\n    async updateBibliography(work_id){\n        if(work_id>0){\n            let bibliography = await arachne.work.get({id: work_id}, {select: [\"bibliography\"]});\n            if(bibliography.length > 0){\n                this.setState({bibliography_preview: bibliography[0].bibliography});\n            } else {\n                this.setState({bibliography_preview: null});\n            }\n        }\n    }\n}\n\nexport { Ressource, SekLit };","import { Form, Row, Col, Button, Navbar, Modal, Offcanvas, Container, Spinner, Accordion } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete, ToolKit, SearchHint, StatusButton, CommentBox } from \"./../elements.js\";\n\nlet zettelSearchItems;\nlet zettelBatchOptions;\nlet ZettelCard;\nlet BatchInputType;\nlet ZettelAddLemmaContent;\nlet ZettelSingleContent;\nlet newZettelObject;\nlet exportZettelObject;\nlet zettelPresetOptions;\nlet zettelSortOptions;\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {zettelSearchItems: [[\"id\", \"ID\"]],searchStatus: \"\", setupItems: null, showPreset: false, showDetail: true, count:0, selectionDetail:{ids:[], currentId:null, sortOptions: null, presetOptions: null}};\n\n        const loadModules = async () =>{    \n            ({ zettelSearchItems, ZettelCard, zettelBatchOptions, BatchInputType, ZettelAddLemmaContent, ZettelSingleContent, newZettelObject, exportZettelObject, zettelPresetOptions, zettelSortOptions } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            this.setState({zettelSearchItems: zettelSearchItems(), sortOptions: zettelSortOptions(), presetOptions: zettelPresetOptions()})\n        };\n        loadModules();\n    }\n    render(){\n        const menuItems = [\n            [\"Suchergebnisse exportieren\", async ()=>{\n                const exportPdf = await arachne.zettel.search(this.state.query, {select: exportZettelObject(), export:true, order:this.state.queryOrder});\n                window.open(exportPdf, \"_blank\");\n            }]\n        ];\n        if(arachne.access(\"z_edit\")){\n            menuItems.push([\"neuer Zettel erstellen\", async ()=>{\n                if(window.confirm(\"Soll ein neuer Zettel erstellt werden?\")){\n                    const newId = await arachne.zettel.save(newZettelObject());\n                    this.setState({setupItems: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                }\n            }]);\n        }\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            {this.state.sortOptions?<SearchBox\n                                boxName=\"zettel\"\n                                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                                setupItems={this.state.setupItems}\n                                searchOptions={this.state.zettelSearchItems}\n                                sortOptions={this.state.sortOptions}\n                                status={this.state.searchStatus}\n                                presetOptions={this.state.presetOptions}\n                            />:null}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            <ToolKit menuItems={menuItems} />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <ZettelBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    presetSelection={this.state.presetSelection}\n                    gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                    toggleShowDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}\n                    showDetail={this.state.showDetail}\n                />\n                {this.state.count==0?<SearchHint />:null}\n            </Container>\n            {(arachne.access(\"z_edit\")&&this.state.selectionDetail.ids.length>0)?<ZettelAside onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({selectionDetail: {ids: []}})}} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} showDetail={this.state.showDetail} openNextItem={()=>{this.openNextItem()}} toggleShowDetail={()=>{this.setState({showDetail: !this.state.showDetail})}} />:\"\"}\n        </>;\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard showDetail={this.props.showDetail} testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.toggleShowDetail({selection: selection, item: element.props.item});}\n        else{this.props.toggleShowDetail({selection: selection, item: null});};\n    }\n}\nfunction ZettelAside(props){\n    const [mode, setMode] = useState(props.selection.ids.length===1?\"single\":\"batch\") // batch, single, lemma\n    const [lastMode, setLastMode]=useState(\"batch\") // mode activated when add lemma is closed.\n    const [nextAfterLemmaAdd, setNextAfterLemmaAdd]=useState(false);\n    const [content, setContent] = useState(null);\n    const [newLemma, setNewLemma] = useState(null);\n    const [newLemmaDisplay, setNewLemmaDisplay] = useState(null);\n    useEffect(()=>{setMode(props.selection.ids.length===1?\"single\":\"batch\")},[props.selection.ids]);\n    useEffect(()=>{\n        switch(mode){\n            case \"batch\":\n                setContent(<ZettelAsideBatch  openAddLemma={(l,ld)=>openAddLemma(l,ld)} saveBatch={async (t,v,i)=>{return await saveBatch(t,v,i)}} onUpdate={props.onUpdate} selection={props.selection} />);\n                break;\n            case \"single\":\n                setContent(<ZettelAsideSingle openAddLemma={(l, ld, n)=>openAddLemma(l, ld, n)} onClose={props.onClose} onReload={props.onReload} showDetail={props.showDetail} toggleShowDetail={()=>{props.toggleShowDetail()}} item={props.item} openNextItem={props.openNextItem} onUpdate={id=>{props.onUpdate(id)}} />);\n                break;\n            case \"lemma\":\n                setContent(<ZettelAddLemma saveAfterAddLemma={async(l,l_id)=>{return await saveAfterAddLemma(l,l_id)}} newLemma={newLemma} newLemmaDisplay={newLemma} closeAddLemma={()=>{setMode(lastMode)}} />);\n                break;\n            default:\n                setContent(null);\n        }\n    },[mode,props.item.id,props.showDetail]);\n    const saveBatch = async(batchType,batchValue,batchValueId)=>{\n        let newKey=null;\n        let newValue=null;\n        if(batchType===1&&batchValue!=\"\"&&batchValueId===null){\n            openAddLemma(batchValue, batchValue);\n            return {status: true};\n        } else if(zettelBatchOptions()[batchType-1][3]===true&&batchValueId!=null){\n            newKey=zettelBatchOptions()[batchType-1][2];\n            newValue=batchValueId;\n        } else if(zettelBatchOptions()[batchType-1][3]===false&&batchValue!=null&&batchValue!=\"\"){\n            newKey=zettelBatchOptions()[batchType-1][2];\n            newValue=batchValue;\n        } else {\n            return {status: false, error: \"Bitte tragen Sie einen gültigen Wert ein.\"};\n        }\n\n        let newValueLst = [];\n        for(const cId of props.selection.ids){\n            let newValueObj = {id: cId, user_id: arachne.me.id}\n            newValueObj[newKey] = newValue;\n            newValueLst.push(newValueObj);\n        }\n        await arachne.zettel.save(newValueLst);\n        props.onUpdate(props.selection.ids);\n        return {status: true};\n    }\n    const openAddLemma=(l, ld,next=false)=>{setLastMode(mode);setNewLemma(l);setNewLemmaDisplay(ld);setMode(\"lemma\");setNextAfterLemmaAdd(next)};\n    const saveAfterAddLemma=async(lemma,lemma_id)=>{\n        let re;\n        if(props.selection.ids.length===1){\n            await arachne.zettel.save({id: props.item.id, lemma_id: lemma_id})\n            if(nextAfterLemmaAdd){props.openNextItem()}\n        } else {\n            re=await saveBatch(1,lemma, lemma_id);\n        }\n        setMode(lastMode);\n        return re;\n    };\n    return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{if(mode!=\"lemma\"){props.onClose()}else{setMode(lastMode)}}}>{content}</Offcanvas>;\n}\nfunction ZettelAsideSingle(props){\n    const [commentCount, setCommentCount]=useState(0);\n    const [ressourceLst, setRessourceLst]=useState([]);\n    const [lemma, setLemma]=useState(\"\");\n    const [zettelObject, setZettelObject]=useState({});\n    const [zettelObjectErr, setZettelObjectErr]=useState(null); // null=no err; {status: 1|2, msg: \"err txt\"}: 1 = prompt warning (\"ok\" means proceed saving data), 2 = error, dont save data\n    useEffect(()=>{\n        const fetchData=async()=>{\n            setRessourceLst(await arachne.edition.get({work_id: zettelObject.work_id}));\n        };\n        if(zettelObject.work_id>0){fetchData()}\n    },[zettelObject.work_id])\n    const saveDetail=async(next=false)=>{\n        if(zettelObjectErr&&zettelObjectErr.status===2){\n            return {status: -1, error: zettelObjectErr.msg};\n        }else if(zettelObjectErr===null||(zettelObjectErr.status===1&&window.confirm(zettelObjectErr.msg))){\n            // save data\n            let saveObj = zettelObject;\n            saveObj.user_id = arachne.me.id;\n            await arachne.zettel.save(saveObj)\n            if(saveObj.lemma_id===null&&lemma!==\"\"&&lemma!==null&&lemma!==undefined){\n                console.log(\"here we are!\", saveObj.lemma_id, lemma);\n                document.querySelector(\".onOpenSetFocus\").focus();\n                props.openAddLemma(lemma, lemma, next);\n            }else if(next){\n                document.querySelector(\".onOpenSetFocus\").focus();\n                props.openNextItem();\n            }else{\n                props.onUpdate([props.item.id]);\n            }\n            return {status: 1};\n        }else{\n            return {status: 0};\n        };\n    }\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>ID {props.item.id}</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <Accordion defaultActiveKey={0}>\n                <Accordion.Item eventKey={0}>\n                    <Accordion.Header>Übersicht</Accordion.Header>\n                    <Accordion.Body>\n                        <ZettelSingleContent setLemma={v=>{setLemma(v)}} setZettelObjectErr={err=>{setZettelObjectErr(err)}} setZettelObject={o=>{setZettelObject(o)}} item={props.item} />\n                        <Row className=\"mb-3 mt-4\">\n                            <Col>\n                                <StatusButton style={{marginRight: \"10px\"}} onClick={()=>{return saveDetail(true)}} value=\"speichern&weiter\" />\n                                <StatusButton onClick={()=>{return saveDetail()}} value=\"speichern\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col><Form>\n                                <Form.Check size=\"sm\" type=\"switch\" label={props.showDetail?\"Details ausblenden\":\"Details einblenden\"} checked={props.showDetail} onChange={props.toggleShowDetail} />\n                            </Form></Col>\n                        </Row>\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey={4}>\n                    <Accordion.Header>Fliesstext</Accordion.Header>\n                    <Accordion.Body>\n                        <p>{props.item.ocr_text_corr}</p>\n                        <p>{props.item.scan_id}</p>\n                    </Accordion.Body>\n                </Accordion.Item>\n                {ressourceLst.length>0&&<Accordion.Item eventKey={1}>\n                    <Accordion.Header>Ressourcen</Accordion.Header>\n                    <Accordion.Body>\n                        {ressourceLst.map(r=><div key={r.id}><a href={r.url===null||r.url===\"\"?`/site/argos/${r.id}`:r.url} target=\"_blank\" rel=\"noreferrer\">{r.label}</a></div>)}\n                    </Accordion.Body>\n                </Accordion.Item>}\n                {arachne.access(\"comment\")?<Accordion.Item eventKey={2}>\n                    <Accordion.Header>Kommentare{commentCount>0?<small style={{marginLeft: \"5px\"}}>({commentCount})</small>:null}</Accordion.Header>\n                    <Accordion.Body>\n                        <CommentBox tbl=\"zettel\" id={props.item.id} setCommentCount={setCommentCount} />\n                    </Accordion.Body>\n                </Accordion.Item>:null}\n                {arachne.access(\"admin\")&&<Accordion.Item eventKey={3}>\n                    <Accordion.Header>Zettel löschen</Accordion.Header>\n                    <Accordion.Body>\n                    <Button variant=\"danger\" onClick={async ()=>{\n                        if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                            await arachne.zettel.delete(props.item.id);\n                            props.onClose();\n                            props.onReload();\n                        }\n                    }}>Zettel löschen</Button>\n                    </Accordion.Body>\n                </Accordion.Item>}\n            </Accordion>\n        </Offcanvas.Body>\n    </>;\n}\nfunction ZettelAsideBatch(props){\n    const [batchType, setBatchType] = useState(1);\n    const [batchValue, setBatchValue] = useState(\"\");\n    const [batchValueId, setBatchValueId] = useState(null);\n    let batch_options = zettelBatchOptions();\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>{props.selection.ids.length} Zettel</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <Row className=\"mb-3\">\n                <Col>\n                    <SelectMenu style={{width: \"110px\"}} options={batch_options} onChange={event=>{setBatchValue(\"\");setBatchType(parseInt(event.target.value))}} />\n                </Col>\n                <Col><BatchInputType batchType={batchType} batchValue={batchValue} batchValueId={batchValueId} setBatchValue={v=>{setBatchValue(v)}} setBatchValueId={v=>{setBatchValueId(v)}} /></Col>\n            </Row>\n            <Row>\n                <Col><StatusButton value=\"für alle übernehmen\" onClick={async()=>{\n                    const re=await props.saveBatch(batchType,batchValue,batchValueId);\n                    setBatchValue(\"\");\n                    return re;\n                }} /></Col>\n            </Row>\n        </Offcanvas.Body>\n    </>;\n}\nfunction ZettelAddLemma(props){\n    const [lemmaObject, setLemmaObject]=useState({});\n    const [newLemmaOK, setNewLemmaOK]=useState(false); // ZettelAddLemmaContent checks validity of new lemma object and sets to newLemmaOK\n\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>Soll ein neues Wort erstellt werden?</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <ZettelAddLemmaContent setNewLemmaOK={setNewLemmaOK} newLemma={props.newLemma} newLemmaDisplay={props.newLemmaDisplay} setLemmaObject={o=>{setLemmaObject(o)}} />\n            <Row>\n                <Col><StatusButton type=\"button\" value=\"neues Wort erstellen\" onClick={async()=>{\n                    if(newLemmaOK){\n                        const newId = await arachne.lemma.save(lemmaObject);\n                        return await props.saveAfterAddLemma(lemmaObject.lemma,newId);\n                    }else{\n                        return {status: false, error: \"Bitte füllen Sie alle Angaben korrekt aus!\"}\n                    }\n                }} /><Button variant=\"secondary\" style={{marginLeft: \"10px\"}} onClick={()=>{props.closeAddLemma()}}>abbrechen</Button></Col>\n            </Row>\n        </Offcanvas.Body>\n    </>;\n}\n\nexport { Zettel };","import { Card, Row, Col, Container, Spinner, Accordion, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from \"react\";\nimport 'chart.js/auto';\n\n\nimport { arachne } from \"./../arachne.js\";\nimport { parseHTML, sleep } from \"./../elements.js\";\n\nlet fetchIndexBoxData;\nlet IndexBoxDetail;\n\nfunction IndexBox(props){\n    const WORD_COUNT = 100;\n    const SCROLL_BOUND = 500;\n    const [query, setQuery]=useState(null);\n    const [words, setWords] = useState([]);\n    const [detailId, setDetailId] = useState(null);\n    const [resultLst, setResultLst]=useState([]);\n    const [resultCurrentId, setResultCurrentId] = useState(0);\n\n    const [wordLst, setWordLst] = useState([]); // contains all words\n    useEffect(()=>{\n        const fetchData=async()=>{\n            ({ fetchIndexBoxData, IndexBoxDetail } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            setWordLst(await fetchIndexBoxData());\n            setQuery(\"\");\n        };\n        fetchData();\n    },[])\n\n    useEffect(()=>{\n        if(query!==null&&query!==\"\"){\n            const lowQuery = query.toLowerCase();\n            const queryLength = query.length;\n            const results=wordLst.filter(w=>w.lemma.substring(0,queryLength)===lowQuery);\n            setResultLst(results);\n            if(results.length>0){setResultCurrentId(results[0].id)};\n        }else if(query===\"\"){\n            setResultLst([]);\n            setResultCurrentId(0);\n        }\n    }, [query]);\n\n    useEffect(()=>{\n        if(resultLst.length>0){\n            const cIndex = wordLst.findIndex(w=>w.id===resultCurrentId);\n\n            const wordsBefore = wordLst.slice(cIndex-WORD_COUNT>=0?cIndex-WORD_COUNT:0,cIndex);\n            const wordsAfter = wordLst.slice(cIndex, cIndex+WORD_COUNT);\n            setWords(wordsBefore.concat(wordsAfter));\n            //setDetailId(resultCurrentId);\n            const scrollToHit = async()=>{\n                await sleep(200);\n                const hit = document.querySelector(\".indexBox_result_hit\");\n                if(hit){hit.scrollIntoView({block: \"center\", behavior: \"auto\"})}\n            }\n            scrollToHit();\n        }else{\n            setWords(wordLst.slice(0,WORD_COUNT));\n        }\n    }, [resultLst,resultCurrentId]);\n\n    const loadMoreWords=(e)=>{\n        if(e.target.scrollHeight-e.target.scrollTop-e.target.offsetHeight<SCROLL_BOUND){//bottom\n            const after = getWordsAfter();\n            setWords(words.concat(after))\n        }else if(e.target.scrollTop<SCROLL_BOUND){\n            const before = getWordsBefore()            \n            setWords(before.concat(words));\n        }\n    }\n    const getWordsBefore = ()=>{\n        const firstId = wordLst.findIndex(w=>w.id===words[0].id);\n        return wordLst.slice(firstId-WORD_COUNT>=0?firstId-WORD_COUNT:0, firstId);\n    };\n    const getWordsAfter=()=>{\n        const lastId = wordLst.findIndex(w=>w.id===words[words.length-1].id);\n        return wordLst.slice(lastId+1, lastId+1+WORD_COUNT);\n    };\n    if(wordLst.length>0){\n        return <Container className=\"mainBody\">\n            <div className=\"indexBoxLst\">\n                <input type=\"text\" style={{width: \"100%\", margin: \"10px 0px 10px 0\"}} value={query} onChange={e=>{setQuery(e.target.value)}} onKeyDown={e=>{\n                    if(e.keyCode===13&e.shiftKey){ //backwards\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex===0){setResultCurrentId(resultLst[resultLst.length-1].id)}\n                        else{setResultCurrentId(resultLst[lastIndex-1].id)}\n                    }else if(e.keyCode===9){\n                        e.preventDefault();\n                        setDetailId(resultCurrentId);\n                    }else if(e.keyCode===13){\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex+1<resultLst.length){setResultCurrentId(resultLst[lastIndex+1].id)}\n                        else{setResultCurrentId(resultLst[0].id)}\n                    }else if(e.keyCode===27){\n                        setQuery(\"\");\n                    }\n                }} />\n                <div>{resultLst.length>0?<small style={{float: \"right\"}}><span style={{marginRight: \"15px\"}}>{resultLst.findIndex(r=>r.id===resultCurrentId)+1}<span style={{margin: \"0 3px 0 3px\"}}>/</span>{resultLst.length} </span><FontAwesomeIcon style={{marginRight: \"5px\"}} icon={faAngleLeft} onClick={()=>{\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex===0){setResultCurrentId(resultLst[resultLst.length-1].id)}\n                        else{setResultCurrentId(resultLst[lastIndex-1].id)}\n                }} /><FontAwesomeIcon style={{marginRight: \"3px\"}} icon={faAngleRight} onClick={()=>{\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex+1<resultLst.length){setResultCurrentId(resultLst[lastIndex+1].id)}\n                        else{setResultCurrentId(resultLst[0].id)}\n                }}/></small>:null}</div>\n                <ListGroup variant=\"flush\" className=\"indexBoxLstResultBox\" onScroll={e=>{loadMoreWords(e)}}>\n                    {words.map(w=><ListGroup.Item className={resultCurrentId===w.id?\"indexBox_result_hit\":resultLst.map(r=>r.id).includes(w.id)?\"indexBox_result\":null} action onClick={()=>{setDetailId(w.id)}} key={w.id} dangerouslySetInnerHTML={parseHTML(w.lemma_display)}></ListGroup.Item>)}\n                </ListGroup>\n            </div>\n            <div className=\"indexBoxDetail\">{detailId?<IndexBoxDetail lemma_id={detailId} />:null}</div>\n        </Container>;\n    }else{\n        return <div>Daten werden geladen...</div>;\n    }\n}//\n/*\n    \n    //const [resultIndex, setResultIndex]=useState(0);\n    \n\nuseEffect(()=>{\n        const fetchData=async()=>{\n            if(query!=\"\"){\n                const results = await arachne.lemma.get({lemma: `${query}*`}, {select: [\"id\", \"lemma\"], order: [\"lemma\"]});\n                //if(!results.map(r=>r.id).includes(resultCurrentId)){setResultIndex(0)}\n                // if hit is also in new resultLst, it shouldnt be reset!\n                setResultCurrentId(results[0].id);\n                setResultCurrentWord(results[0].lemma)\n                setResultLst(results);\n            }\n        }\n        fetchData();\n    },[query]);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            const AllBefore = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: resultCurrendWord}], {count: true});\n            const before = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: resultCurrendWord}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT, offset: AllBefore[0].count-WORD_COUNT>0?AllBefore[0].count-WORD_COUNT:0});\n            const after = await arachne.lemma.search([{c: \"lemma\", o: \">=\", v: resultCurrendWord}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: (WORD_COUNT+1)});\n            setWords(before.concat(after));\n            await sleep(200);\n            const hit = document.querySelector(\".indexBox_result_hit\");\n            hit.scrollIntoView({block: \"center\", behavior: \"auto\"});\n        };\n        fetchData();\n    }, [resultCurrentId])\n    const loadMoreWords=async(e)=>{\n        if(e.target.scrollHeight-e.target.scrollTop-e.target.offsetHeight<SCROLL_BOUND){//bottom\n            let after = await getWordsAfter(words[words.length-1].lemma);\n            setWords(words.concat(after))\n            after = await getWordsAfter(words[words.length-1].lemma);\n            setWords(words.concat(after))\n        }else if(e.target.scrollTop<SCROLL_BOUND){\n            let before = await getWordsBefore(words[0].lemma)            \n            setWords(before.concat(words));\n            before = await getWordsBefore(words[0].lemma)            \n            setWords(before.concat(words));\n        }\n    }\n    const getWordsBefore = async(word)=>{\n            const AllBefore = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: word}], {count: true});\n            return await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: word}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT, offset: AllBefore[0].count-WORD_COUNT>0?AllBefore[0].count-WORD_COUNT:0});\n    };\n    const getWordsAfter=async(word)=>{\n        return await arachne.lemma.search([{c: \"lemma\", o: \">\", v: word}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT});\n    };\n*/\nexport { IndexBox };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faSearch, faEllipsisV, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Container, Navbar, Nav, NavDropdown, Alert } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\nimport { ChangeLog } from \"./../changelog.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./../content/mlw_opera.js\";\nimport { GeschichtsquellenInterface } from \"./../content/mlw.js\";\nimport { DOMOpera, Konkordanz, Etudaus, DOMRessource } from \"./../content/dom.js\";\nimport { TLLRessource } from \"./../content/tll.js\";\nimport { Ressource, SekLit } from \"./ressources.js\";\nimport { Account } from \"./../settings.js\";\nimport { Import, Server, Statistics } from \"./server.js\"\nimport { Zettel } from \"./zettel.js\";\nimport { IndexBox } from \"./indexbox.js\";\nimport { arachne } from \"./../arachne.js\";\nlet MainMenuContent;\n\nfunction MainBody(props){\n    arachne.changeLog = dbChangeLog;\n    let main = {\n        null: <ChangeLog />,\n        \"ressources\": <Ressource />, // mlw\n        \"stats\": <Statistics PROJECT_NAME={props.PROJECT_NAME} />,\n        \"server\": <Server />,\n        \"lemma\": <Lemma PROJECT_NAME={props.PROJECT_NAME} loadMain={(e,res)=>{props.loadMain(e, res)}} />,\n        \"import\": <Import loadMain={(e,res)=>{props.loadMain(e, res)}} />,\n        \"zettel\": <Zettel PROJECT_NAME={props.PROJECT_NAME}  />,\n        \"indexbox\": <IndexBox PROJECT_NAME={props.PROJECT_NAME} />,\n        \"account\": <Account />,\n        \"seklit\": <SekLit />, // mlw\n        \"maiora\": <Opera listName=\"opera_maiora\" />, // mlw\n        \"minora\": <Opera listName=\"opera_minora\" />, // mlw\n        \"geschichtsquellen\": <GeschichtsquellenInterface />, // mllw\n        \"konkordanz\": <Konkordanz />, // dom\n        \"quellenverzeichnis\": <DOMOpera />, // dom\n        \"etudaus\": <Etudaus />, // dom\n        \"domressource\": <DOMRessource />, // dom\n        \"index\": <Opera listName=\"tll_index\" />, // TLL\n        \"tllressource\": <TLLRessource />, // TLL\n        }\n    if(props===null||props.res===null||Object.keys(main).includes(props?props.res:null)){return main[props?props.res:null]}\n    else{return <div className=\"text-danger\" style={{textAlign: \"center\", marginTop: \"100px\"}}>Unbekannter Menü-Punkt '{props.res}'.</div>}\n}\n\nfunction MainNavBar(props){\n    const [mainMenuContentLoaded, setMainMenuContentLoaded] = useState(false);\n    useEffect(()=>{\n        const loadModules = async () =>{\n            ({ MainMenuContent } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            setMainMenuContentLoaded(true);\n        };\n        loadModules();\n    }, []);\n    let dbName = \"Datenbank\"\n    switch(props.PROJECT_NAME){\n        case \"mlw\":\n            dbName = \"dMLW\";\n            break;\n        case \"dom\":\n            dbName = \"dDOM\";\n            break;\n        default:\n            dbName = \"Datenbank\";\n    }\n    return <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Container fluid>\n            <Navbar.Brand style={{cursor: \"pointer\"}} onClick={e=>{props.loadMain(e, null)}}>{dbName}</Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Nav>\n                    <NavDropdown title=\"Zettel- und Wortmaterial\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"zettel\")}}>Zettel-Datenbank</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"lemma\")}}>Wortliste</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Verzeichnisse\">\n                        {mainMenuContentLoaded?<MainMenuContent loadMain={(...params)=>{props.loadMain(...params)}} />:null}\n                    </NavDropdown>\n                    <NavDropdown title=\"Einstellungen\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"account\")}}>Konto</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"server\")}}>Server</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"import\")}}>Import</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"stats\")}}>Statistik</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link>\n                    <FontAwesomeIcon icon={faSignOutAlt} onClick={e => {props.loadMain(e, \"logout\")}} title=\"abmelden\" />\n                </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n</Navbar>;\n}\n\nconst dbChangeLog = [\n    {\n        project: \"dom\",\n        title: \"Import und Ressourcen\",\n        date: \"2022-07-12\",\n        description: <><p>Zettel, Ressourcen und Volltexte können importiert werden. Die Ressourcen können hinzugefügt und verwaltet werden, sie werden im Quellenverzeichnis angezeigt. Argos ist allerdings erst begrenzt lauffähig.</p></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Geschichtsquellen\",\n        date: \"2022-07-08\",\n        description: <><p>Die Geschichtsquellen-Datensätze können nun mit den dMLW-Datensätzen verknüpft werden. Bereits gemachte Verknüpfungen werden mit einem <FontAwesomeIcon icon={faCaretDown} /> in den <i>opera</i>-Listen angezeigt. In den nächsten Wochen sollen alle Verknüpfungen eingetragen werden.</p></>\n    },\n    {\n        project: \"tll\",\n        title: \"Testversion\",\n        date: \"2022-06-20\",\n        description: <><p>Eine erste Testversion ist online! Die Lemmaliste wurde von der <a target=\"_blank\" href=\"https://publikationen.badw.de/de/thesaurus/\">TLL Open Access Lemmasuche</a> übernommen, der Index vom <a target=\"_blank\" href=\"https://thesaurus.badw.de/tll-digital/index/a.html#pJ4\">TLL Open Access Index</a>.</p></>\n    },\n    {\n        title: \"Beta 12.10\",\n        date: \"2022-06-10\",\n        description: <><p>Die Suchfunktion (<FontAwesomeIcon icon={faSearch} />) unterstützt nun reguläre Ausdrücke: Wählen Sie \"re\" als Operator aus. Weitere Hinweise finden Sie <a href=\"https://mariadb.com/kb/en/regular-expressions-overview/\" target=\"_blank\">hier</a>.</p></>\n    },\n    {\n        project: \"dom\",\n        title: \"dDOM Update\",\n        date: \"2022-06-03\",\n        description: <><p>Die neue Version ist online!</p></>\n    },\n    {\n        title: \"Beta 12.10\",\n        date: \"2022-05-04\",\n        description: <><p>Zettel können nun aus der Zettel-Datenbank als pdf exportiert werden. Benutzen Sie das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> in der Zettel-Datenbank (rechts unten) und wählen Sie \"Suchergebnisse exportieren\" aus.</p></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.9\",\n        date: \"2022-04-29\",\n        description: <><p>Kleine Verbesserung in der Darstellung der <i>opera</i>-Listen.</p></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.8\",\n        date: \"2022-04-14\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Ressourcen: \"Autor/Jahr-Angabe\"-Fehler bei Angabe der Serie behoben.</li>\n            <li>Ressourcen: Bandinhalt-Fehler behoben.</li>\n            <li>Ressourcen: Seitenverhältnis der Bilder kann verändert werden.</li>\n        </ul>\n        <p>Einige Fehler in den Ressourcen wurden behoben. Ins System aufgenommen <i>(falls Ressourcen zu diesen Bänden in den opera-Listen fehlen, schreiben Sie unbedingt ein Ticket!)</i>:</p>\n        <ul>\n            <li>MGH Poet. I</li>\n            <li>MGH Poet. IV (Winterfeld)</li>\n        </ul></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.7\",\n        date: \"2022-02-26\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Änderungen beim Zettel-Upload: Buchstaben U/V und I/J wurden zusammengefasst.</li>\n            <li>Korrekturen bei der Zitiertitel-Suche der opera-Listen.</li>\n            <li>Korrekturen beim Upload von Scan-Bildern.</li>\n        </ul></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.6\",\n        date: \"2022-02-23\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Suche in opera-Listen funktioniert wieder.</li>\n            <li>Korrektur bei der voreingestellten Suche.</li>\n            <li>Links auf Wiki angepasst.</li>\n        </ul>\n        </>\n    },\n    {\n        title: \"Beta 12.5\",\n        date: \"2022-02-18\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>ocr-Funktionen des Servers in Modul \"archimedes.py\" verschoben.</li>\n            <li>Darstellung der Detailansicht für Ressourcen und Sekundärliteratur überarbeitet.</li>\n            <li>Neuladen der Ansicht beim Löschen von Elementen.</li>\n            <li>Opera-Listen werden automatisch neu geladen, wenn die Listen auf dem Server aktualisiert wurden oder wenn Autoren oder Werke erstellt oder gelöscht wurden.</li>\n            <li>Altes Benachrichtigungssystem (StatusBox) entfernt.</li>\n        </ul></>\n    },\n    {\n    title: \"Beta 12.4\",\n        date: \"2022-02-15\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Grösse der abgebildeten Wörter begrenzt auf digitalen und gescannten Zetteln.</li>\n            <li>Wiki-Anleitung für das Hochladen der Zettel verlinkt.</li>\n            <li>Zettel-Reihenfolge beim Hochladen stimmt jetzt auch mit Chrome.</li>\n            <li>Veraltete Daten und Links von früherer Version entfernt.</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.3\",\n        date: \"2022-02-14\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>ocr-Verfahren für neue Zettel überarbeitet (s. Einstellungen &gt; Server) und automatische Typ-Erkennung aktiviert.</li>\n            <li>Konto-Verwaltung überarbeitet (Löschen von Accounts jetzt möglich).</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.2\",\n        date: \"2022-02-13\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li><Alert.Link href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/issues/194\">Issue #194</Alert.Link></li>\n            <li>\"Details ein-/ausblenden\" unter \"speichern\" und \"speichern&weiter\" verschoben.</li>\n            <li>Kleiner Fehler bei Stapelverabeitung behoben (Änderugnen wurde nicht angezeigt).</li>\n            <li>Mit \"X\" kann die Detailansicht in der Zettel-DB geschlossen werden.</li>\n            <li>Wenn ein neues Wort in der Zettel-DB erstellt wurde, wird es automatisch mit dem aktuellen Zettel verknüpft.</li>\n            <li>Man kann nun aus der Stapel-Ansicht neue Wörter erstellen.</li>\n            <li>Die Hilfe zum Erstellen von Wörtern wird nun auch in der Wortliste angezeigt.</li>\n            <li>Import-Formulare überarbeitet und verbessert.</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.1\",\n        date: \"2022-02-11\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Mit einem Klick auf den Wortansatz in der Wortliste wird die Zettel-Datenbank geöffnet und die mit diesem Wort verknüpften Zettel angezeigt.</li>\n            <li>Suchfelder in Wortliste hinzugefügt: \"Wörterbücher\", \"Kommentar\", \"Zahlzeichen\", \"im Wörterbuch (MLW)\", \"Stern\", \"Fragezeichen\".</li>\n            <li>Verbesserung des Fehlers mit \"speichern&weiter\".</li>\n            <li>\"Lemmaliste\" in \"Wortliste\" umbenannt. Ebenso \"Lemma\" in \"Wort\" (usw.).</li>\n            <li>Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> der opera-Listen: Alle sollen nun die Listen aktualisieren können.</li>\n            <li>opera-Listen können nicht mehr von \"Einstellungen\"-&gt;\"Server\" aktualisiert werden.</li>\n            <li>Die Statistiken können nur noch über das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> unter \"Einstellungen\"-&gt;\"Statistik\" aktualisiert werden.</li>\n            <li>Alle Links sollten mit CTRL/CMD+Klick in einem neuen Fenster/Tab geöffnet werden können.</li>\n            <li>Dark-Mode deaktiviert (wird später wieder eingeführt).</li>\n        </ul>\n    </>},\n    {\n        title: \"Beta 12.0\",\n        date: \"2022-02-09\",\n        description: <><p>Neues Design und Steuerelemente mit <Alert.Link target=\"_blank\" href=\"https://react-bootstrap.github.io\">Bootstrap</Alert.Link>. Die Suchfunktion befindet sich links unten auf der Seite (<FontAwesomeIcon icon={faSearch} />).</p></>\n    }\n]\nexport { MainBody, MainNavBar };","import { Row, Col, Form, Container } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { StatusButton } from \"./elements.js\";\n\nfunction Account(){\n    const [firstName, setFirstName] = useState(arachne.me.first_name);\n    const [lastName, setLastName] = useState(arachne.me.last_name);\n    const [email, setEmail] = useState(arachne.me.email);\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [zWidth, setZWidth] = useState(arachne.options.z_width);\n    const [actionKey, setActionKey] = useState(arachne.options.action_key);\n    const [openExternally, setOpenExternally]=useState(arachne.options.openExternally);\n    const displaySettings = [\n        <Row key={1} className=\"mb-2\">\n            <Col xs={2}>Breite der Zettel:</Col>\n            <Col><Form.Range min=\"400\" max=\"600\" size=\"sm\" value={zWidth} onChange={e=>{\n                arachne.setOptions(\"z_width\", e.target.value);\n                arachne.setOptions(\"z_height\", 350/500*parseInt(e.target.value));\n                setZWidth(e.target.value);\n            }}/></Col>\n        </Row>,\n        <Row key={2} className=\"mb-2\">\n            <Col xs={4}>Öffnen der Ressourcen (Zettel im Editor):</Col>\n            <Col><Form.Select size=\"sm\" value={openExternally} onChange={e=>{arachne.setOptions(\"openExternally\", parseInt(e.target.value));setOpenExternally(e.target.value)}}>\n                    <option value=\"0\">im gleichen Fenster</option>\n                    <option value=\"1\">in einem neuen Fenster</option>\n                    <option value=\"2\">in Echo</option>\n                </Form.Select></Col>\n        </Row>\n    ];\n    return <Container style={{padding: \"0 10% 0 10%\"}}>\n        <Row><Col><h3>Persönliche Daten</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Vorname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={firstName} onChange={e=>{setFirstName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Nachname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={lastName} onChange={e=>{setLastName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>Email-Adresse:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={email} onChange={e=>{setEmail(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: firstName,\n                        last_name: lastName,\n                        email: email,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Passwort</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>altes Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={oldPassword} onChange={e=>{setOldPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>neues Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={newPassword} onChange={e=>{setNewPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: oldPassword,\n                        new_password: newPassword\n                    });\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Darstellung und Benutzung</h3></Col></Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Funktionstaste für Tastenkürzel</Col>\n            <Col>\n                <Form.Select size=\"sm\" value={actionKey} onChange={e=>{arachne.setOptions(\"action_key\", e.target.value);setActionKey(e.target.value)}}>\n                    <option value=\"alt\">Alt</option>\n                    <option value=\"ctrl\">Strg</option>\n                    <option value=\"cmd\">Befehlstaste</option>\n                </Form.Select>\n                <small>Eine Liste mit Tastenkürzeln finden Sie <a className=\"text-primary\" rel=\"noreferrer\" href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/06-Argos#tastenkürzel\" target=\"_blank\">hier</a>.</small>\n            </Col>\n        </Row>\n        {displaySettings}\n    </Container>;\n}\n\nexport { Account };"],"names":["ChangeLog","arachne","a","b","date","undefined","project","useState","displayAll","setDisplayAll","c","i","variant","title","d","substring","description","style","cursor","marginTop","textAlign","onClick","LemmaRow","LemmaHeader","LemmaAsideContent","lemmaSearchItems","StatisticsChart","Lemma","props","state","item","newItemCreated","loadModules","PROJECT_NAME","setState","Navbar","fixed","bg","Container","fluid","className","boxName","searchQuery","q","order","setupItems","this","searchOptions","sortOptions","status","searchStatus","count","loadPage","newPage","currentPage","maxPage","menuItems","window","confirm","lemma_display","lemma","newId","id","o","v","LemmaBox","loadMain","e","res","currentElements","gridArea","showDetail","LemmaAside","onUpdate","reloadEntry","onReload","onClose","newItem","indexOfNewItem","findIndex","newQuery","Spinner","animation","size","limit","query","queryOrder","Math","floor","selectionDetail","ids","offset","React","selection","currentId","cEls","cEl","push","cId","find","padding","Table","striped","width","Offcanvas","show","placement","scroll","backdrop","onHide","closeButton","SekLit","titel","SekLitBox","SekLitAside","onDoubleClick","parseInt","target","closest","kennziffer","signatur","alte_signatur","name","vorname","reihe","ort","jahr","weitere_angaben","zusatz","Row","Col","xs","type","value","onChange","signature","Button","marginLeft","Ressource","ressource","editor","year","Date","getFullYear","RessourceBox","RessourceAside","resTypes","url","label","dangerouslySetInnerHTML","parseHTML","opus","href","fontSize","icon","faExternalLinkAlt","work_id","ac_web","volume","vol_cont","serie","location","library","comment","path","aspect_ratio","bibliography_preview","tbl","searchCol","returnCol","updateBibliography","dir_name","backgroundColor","options","height","error","select","bibliography","length","Statistics","lastUpdated","setLastUpdated","zettelBox","setZettelBox","lemmaBox","setLemmaBox","ressourceBox","setRessourceBox","useEffect","fetchData","dataIn","newZettelBox","newLemmaBox","newRessourceBox","forEach","JSON","parse","data","Error","getNumbers","Tabs","defaultActiveKey","Tab","eventKey","float","color","Server","ocrJobs","faszikelJobs","users","ocrDisplayAll","defaultActive","re","sleep","loadOcrJobs","map","row","finished","sqlDate","u_date","c_date","source","total","round","Alert","faszikel","log","dateArray","split","createdDate","join","verticalAlign","u","first_name","last_name","access","agent","session_last_active","faSun","faMoon","ServerAside","loadUsers","loadFaszikelJobs","allFaszikelJobs","newOcrJobs","sort","newUsers","rightList","right","marked","includes","nAccess","Object","entries","border","borderRadius","margin","stringify","prevProps","ImportOCR","ocrRessource","setOCRRessource","ocrRessourceId","setOCRRessourceId","fileLst","setFileLst","placeholder","Form","multiple","accept","files","scanLst","missLst","saveLst","file","fName","cScan","filename","text","fileTxt","full_text","console","success","Import","importRessource","editionObj","newEditionId","uploadForm","FormData","append","fLength","body","importRessourceComponent","MLW_Import_Ressource","TLL_Import_Ressource","DOM_Import_Ressource","zettelLetter","zettelEditors","zettelEditorSelected","zettelType","zettelFiles","progress","cItemCount","cUploadIndex","uploadGroup","Array","from","firstId","lastId","maxLoops","currentLoop","uItem","r","zettelSuccess","dismissible","localStorage","setItem","GeschichtsquellenImport","zettelSearchItems","zettelBatchOptions","ZettelCard","BatchInputType","ZettelAddLemmaContent","ZettelSingleContent","newZettelObject","exportZettelObject","zettelPresetOptions","zettelSortOptions","Zettel","showPreset","presetOptions","export","exportPdf","open","ZettelBox","presetSelection","toggleShowDetail","itemDetail","ZettelAside","reloadZettel","openNextItem","lastIndex","testProp","multiSelect","selectCallback","preset","element","mode","setMode","lastMode","setLastMode","nextAfterLemmaAdd","setNextAfterLemmaAdd","content","setContent","newLemma","setNewLemma","setNewLemmaDisplay","ZettelAsideBatch","openAddLemma","l","ld","saveBatch","t","ZettelAsideSingle","n","ZettelAddLemma","saveAfterAddLemma","l_id","newLemmaDisplay","closeAddLemma","batchType","batchValue","batchValueId","newKey","newValue","newValueLst","newValueObj","user_id","next","lemma_id","commentCount","setCommentCount","ressourceLst","setRessourceLst","setLemma","zettelObject","setZettelObject","zettelObjectErr","setZettelObjectErr","saveDetail","msg","saveObj","document","querySelector","focus","Accordion","err","marginRight","checked","ocr_text_corr","scan_id","rel","setBatchType","setBatchValue","setBatchValueId","batch_options","event","lemmaObject","setLemmaObject","newLemmaOK","setNewLemmaOK","fetchIndexBoxData","IndexBoxDetail","MainMenuContent","IndexBox","WORD_COUNT","setQuery","words","setWords","detailId","setDetailId","resultLst","setResultLst","resultCurrentId","setResultCurrentId","wordLst","setWordLst","lowQuery","toLowerCase","queryLength","results","filter","w","cIndex","wordsBefore","slice","wordsAfter","concat","scrollToHit","hit","scrollIntoView","block","behavior","getWordsBefore","getWordsAfter","onKeyDown","keyCode","shiftKey","preventDefault","faAngleLeft","faAngleRight","ListGroup","onScroll","scrollHeight","scrollTop","offsetHeight","after","before","loadMoreWords","action","MainBody","dbChangeLog","main","null","Opera","listName","GeschichtsquellenInterface","Konkordanz","DOMOpera","Etudaus","DOMRessource","TLLRessource","keys","MainNavBar","mainMenuContentLoaded","setMainMenuContentLoaded","dbName","Nav","NavDropdown","faSignOutAlt","faCaretDown","faSearch","faEllipsisV","Account","firstName","setFirstName","lastName","setLastName","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","zWidth","setZWidth","actionKey","setActionKey","openExternally","setOpenExternally","displaySettings","min","max","reUser","old_password","new_password"],"sourceRoot":""}