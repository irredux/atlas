{"version":3,"file":"static/js/932.0e1c8018.chunk.js","mappings":"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","sources":["content/tll.js"],"sourcesContent":["import { parseHTML, parseHTMLPreview, SelectMenu, StatusButton, AutoComplete, TableView } from \"./../elements.js\";\nimport { arachne } from \"./../arachne.js\";\nimport { Accordion, Form, Col, Row, Container, NavDropdown, Card, ListGroup, Spinner } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport 'chart.js/auto';\nimport { Bar, Pie } from \"react-chartjs-2\";\nfunction arachneTbls(){\n    return [\"project\", \"auctores\", \"edition\", \"lemma\", \"tll_index\", \"scan\", \"scan_lnk\", \"opera\", \"opera_ac\", \"zettel\", \"user\", \"seklit\", \"article\", \"zettel_lnk\", \"statistics\", \"scan_paths\", \"ocr_jobs\", \"comment\", \"scan_opera\", \"fulltext_search_view\", \"tags\", \"tag_lnks\", \"sections\"];\n}\n/* ************************************************************************************* */\nfunction LemmaHeader(){\n    return <tr><th width=\"30%\">Wortansatz</th><th width=\"20%\">TLL</th></tr>;\n}\nfunction LemmaRow(props){\n    return <tr id={props.lemma.id} onDoubleClick={e=>{props.showDetail(parseInt(e.target.closest(\"tr\").id))}}>\n        <td title={\"ID: \"+props.lemma.id}>\n            <a dangerouslySetInnerHTML={parseHTML(props.lemma.lemma_display)} onClick={e=>{\n                localStorage.setItem(\"tll_searchBox_zettel\", `[[{\"id\":0,\"c\":\"lemma_id\",\"o\":\"=\",\"v\":${props.lemma.id}}],1,[\"id\"]]`);\n                props.loadMain(e);\n            }}>\n            </a>\n        </td>\n        <td><a href={`https://publikationen.badw.de/de/thesaurus/${props.lemma.link_img}`} target=\"_blank\">{props.lemma.link_name}</a></td>\n    </tr>;\n}\nfunction lemmaSearchItems(){\n    return [\n        [\"lemma\", \"Wort\"],\n        [\"lemma_display\", \"Wort-Anzeige\"],\n        [\"id\", \"ID\"],\n        [\"hom_nr\", \"Homonym-Nr\"],\n        [\"sub\", \"Sublemma\"],\n        [\"addenda\", \"Addenda\"],\n        [\"search\", \"alt. Schreibewise\"],\n    ];\n}\nfunction LemmaAsideContent(props){\n    const [lemma, setLemma] = useState(props.item.lemma);\n    const [lemma_display, setLemma_display] = useState(props.item.lemma_display);\n    const [lemma_nr, setLemma_Nr] = useState(props.item.lemma_nr);\n    const [sub, setSub] = useState(props.item.sub);\n    const [addenda, setAddenda] = useState(props.item.addenda);\n    const [search, setSearch] = useState(props.item.search);\n    const [link_name, setLink_name] = useState(props.item.link_name);\n    const [link_img, setLink_img] = useState(props.item.link_img);\n    const [comment, setComment] = useState(props.item.comment);\n\n    useEffect(()=>{\n        setLemma(props.item.lemma);\n        setLemma_display(props.item.lemma_display);\n        setLemma_Nr(props.item.lemma_nr);\n        setSub(props.item.sub);\n        setAddenda(props.item.addenda);\n        setSearch(props.item.search);\n        setLink_name(props.item.link_name);\n        setLink_img(props.item.link_img);\n        setComment(props.item.comment);\n    }, [props.id]);\n    return <Container>\n        <Row className=\"mb-2\">\n            <Col>Wort:</Col>\n            <Col><input type=\"text\" value={lemma} onChange={event=>{setLemma(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-5\">\n            <Col>Wort-Anzeige:</Col>\n            <Col><input type=\"text\" value={parseHTMLPreview(lemma_display)} onChange={event=>{setLemma_display(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Zahlzeichen:</Col>\n            <Col><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7]]} onChange={event=>{setLemma_Nr(event.target.value)}} value={lemma_nr} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Sublemma:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setSub(event.target.value)}} value={sub} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Addenda:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setAddenda(event.target.value)}} value={addenda} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>alt. Schreib-weise:</Col>\n            <Col><input type=\"text\" value={search} onChange={event=>{setSearch(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>pdf-Linkname:</Col>\n            <Col><input type=\"text\" value={link_name} onChange={event=>{setLink_name(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>pdf-Bildname:</Col>\n            <Col><input type=\"text\" value={link_img} onChange={event=>{setLink_img(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col>Kommentar:</Col>\n            <Col><textarea style={{width: \"210px\", height: \"150px\"}} value={comment?comment.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"):\"\"} onChange={event=>{setComment(event.target.value)}}></textarea></Col>\n        </Row>\n        <Row>\n            <Col>\n            <StatusButton value=\"speichern\" onClick={async ()=>{\n        if(lemma===\"\"||lemma.indexOf(\" \")>-1||lemma.indexOf(\"*\")>-1||lemma.indexOf(\"[\")>-1){\n            return {status: false, error: \"Bitte tragen Sie ein gültiges Wort ein!\"};\n        } else if(lemma_display===\"\"){\n            return {status: false, error: \"Bitte tragen Sie eine gültige Wort-Anzeige ein!\"};\n        } else {\n            let newLemmaValue = {\n                id: props.id,\n                lemma: lemma,\n                lemma_display: lemma_display,\n                hom_nr: lemma_nr,\n                sub: sub,\n                addenda: addenda,\n                search: search,\n                link_name: link_name,\n                link_img, link_img,\n                comment: comment,\n            };\n            const newId = await arachne.lemma.save(newLemmaValue);\n            props.onUpdate(props.id);\n            return {status: true};\n        }\n    }} />\n    {arachne.access(\"l_edit\")?<StatusButton style={{marginLeft: \"10px\"}} variant=\"danger\" value=\"löschen\" onClick={async ()=>{\n        if(window.confirm(\"Soll das Wort gelöscht werden? Das Wort wird von allen verknüpften Zettel entfernt. Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n            const allZettel = await arachne.zettel.get({lemma_id: props.id});\n            let zettelRemoveList = [];\n            for(const zettel of allZettel){\n                zettelRemoveList.push({id: zettel.id, lemma_id: null});\n            }\n            if(zettelRemoveList.length>0){await arachne.zettel.save(zettelRemoveList);}\n            await arachne.lemma.delete(props.id);\n            props.onClose();\n            props.onReload();\n            return {status: true};\n        }\n    }} />:null}\n            </Col>\n        </Row>\n    </Container>;\n}\n/* ************************************************************************************* */\nfunction zettelSearchItems(){\n    return [\n        [\"lemma\", \"Wort\"],\n        [\"lemma_id\", \"Wort-ID\"],\n        [\"type\", \"Typ\"],\n        [\"id\", \"ID\"],\n        [\"ac_web\", \"Werk\"],\n        [\"date_type\", \"Datum-Typ\"],\n        [\"date_own\", \"eigenes Sortierdatum\"],\n        [\"date_own_display\", \"eigenes Anzeigedatum\"],\n        [\"auto\", \"Automatisierung\"],\n        [\"ocr_length\", \"Textlänge\"],\n        [\"img_path\", \"Bildpfad\"],\n    ];\n}\nfunction ZettelCard(props){\n    const zettel = props.item;\n    let style = {height: arachne.options.z_height+\"px\", width: arachne.options.z_width+\"px\"};\n    let box = null;\n    if(zettel.img_path!=null){\n        let classList = \"\";\n        if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n        else{classList+=\"zettel_img in_use\"}\n        box =\n        <div className=\"zettel\" id={zettel.id} style={style}>\n            <img alt=\"\" style={{objectFit: \"fill\", borderRadius: \"7px\"}} className={classList} src={\"/tll\"+zettel.img_path+\".jpg\"}></img>\n            {props.showDetail?<div className=\"zettel_msg\" dangerouslySetInnerHTML={parseHTML(zettel.date_own_display?zettel.date_own_display:zettel.date_display)}></div>:null}\n            {props.showDetail?\n            <div className=\"zettel_menu\">\n                <span style={{float: \"left\", overflow: \"hidden\", maxHeight: \"50px\", maxWidth: \"250px\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.ac_web)}></span>\n            </div>\n            :null}\n        </div>;\n    } else {\n        //style.height = \"355px\";\n        box =\n        <div className=\"zettel\" id={zettel.id} style={style}>\n            <div className=\"digitalZettel\">\n                <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.ac_web)}></div>\n                <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n            </div>\n        </div>;\n    }\n    return box;\n}\nfunction zettelBatchOptions(){return [[1, \"Wort\", \"lemma_id\", true],[2, \"Opus\", \"opus_id\", true],[3,\"Zettel-Typ\", \"type\", false]]} // [id, description, db-col, use AutoComplete Component]; first array will trigger \"add new lemma\" if not in auto-complete list.\nfunction BatchInputType(props){\n    switch(props.batchType){\n        case 1:\n            return <AutoComplete onChange={(value, id)=>{props.setBatchValue(value);props.setBatchValueId(id)}} value={props.batchValue} tbl=\"lemma\"  searchCol=\"lemma\" returnCol=\"lemma_display\" />;\n            break;\n        case 2:\n            return <AutoComplete  value={props.batchValue} tbl=\"opera_ac\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{props.setBatchValue(value);props.setBatchValueId(id)}} />;\n            break;\n        case 3:\n            return <SelectMenu style={{width: \"86%\"}} options={[[1, \"Perikopenzettel\"], [2, \"Exzerptzettel\"], [3, \"Lexikonzettel\"], [4, \"Indexzettel\"], [5, \"Literaturzettel\"]]} onChange={event=>{props.setBatchValue(event.target.value)}} />;\n            break;\n        default:\n            return <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>;  \n    }\n}\nfunction ZettelAddLemmaContent(props){\n    const [newLemma, setNewLemma]=useState(props.newLemma);\n    const [newLemmaDisplay, setNewLemmaDisplay]=useState(props.newLemmaDisplay);\n    const [homonym, setHomonym]=useState(0);\n    const [MLW, setMLW]=useState(0);\n    const [Stern, setStern]=useState(0);\n    const [Fragezeichen, setFragezeichen]=useState(0);\n    const [errorLemma, setErrorLemma]=useState(false);\n    const [errorLemmaDisplay, setErrorLemmaDisplay]=useState(false);\n\n    useEffect(()=>{\n        props.setLemmaObject({\n            lemma: newLemma,\n            lemma_display: newLemmaDisplay,\n            lemma_nr: homonym>0?homonym:null,\n            MLW: MLW,\n            Fragezeichen: Fragezeichen,\n            Stern: Stern,\n        });\n        if(newLemma===\"\" || newLemma.indexOf(\" \")>-1||newLemma.indexOf(\"*\")>-1||newLemma.indexOf(\"[\")>-1){setErrorLemma(true)}\n        else{setErrorLemma(false)}\n\n        if(newLemmaDisplay===\"\"){setErrorLemmaDisplay(true)}\n        else{setErrorLemmaDisplay(false)}\n\n        if((newLemma===\"\"||newLemma.indexOf(\" \")>-1)||newLemma.indexOf(\"*\")>-1||newLemma.indexOf(\"[\")>-1||newLemmaDisplay===\"\"){props.setNewLemmaOK(false)}\n        else{props.setNewLemmaOK(true)}\n    },[newLemma,newLemmaDisplay,homonym,MLW,Stern,Fragezeichen]);\n    return <>\n        <Row className=\"mb-4\">\n            <Col><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Umlemmatisierung\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Wörter.</Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Wort:</Col>\n            <Col><input type=\"text\" className={errorLemma?\"invalidInput\":null} value={newLemma} onChange={event=>{setNewLemma(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col>Wort-Anzeige:</Col>\n            <Col><input type=\"text\" className={errorLemmaDisplay?\"invalidInput\":null} value={newLemmaDisplay} onChange={event=>{setNewLemmaDisplay(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Zahlzeichen:</Col>\n            <Col><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{setHomonym(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>im Wörterbuch:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setMLW(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Stern:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setStern(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col>Fragezeichen:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{Fragezeichen(event.target.value)}} /></Col>\n        </Row>\n    </>;\n}\nfunction ZettelSingleContent(props){\n    const [type, setType]=useState(props.item.type);\n    const [lemmaAc, setLemmaAc]=useState(props.item.lemma_display);\n    const [lemmaId, setLemmaId]=useState(props.item.lemma_id);\n    const [work, setWork]=useState(props.item.ac_web);\n    const [workId, setWorkId]=useState(props.item.work_id);\n    const [dateType, setDateType]=useState(props.item.date_type);\n    const [dateDisplay, setDateDisplay]=useState(props.item.date_display);\n    const [dateOwn, setDateOwn]=useState(props.item.date_own);\n    const [dateOwnDisplay, setDateOwnDisplay]=useState(props.item.date_own_display);\n    const [dateOwnError, setDateOwnError]=useState(false);\n    const [dateOwnDisplayError, setDateOwnDisplayError]=useState(false);\n    const [txt, setTxt]=useState(props.item.txt);\n    useEffect(()=>{\n        setType(props.item.type);\n        setLemmaAc(props.item.lemma_display);\n        setLemmaId(props.item.lemma_id);\n        setWork(props.item.ac_web);\n        setWorkId(props.item.work_id);\n        setDateType(props.item.date_type);\n        setDateDisplay(props.item.date_display);\n        setDateOwn(props.item.date_own);\n        setDateOwnDisplay(props.item.date_own_display);\n        setTxt(props.item.txt);\n    },[props.item.id]);\n    useEffect(()=>{\n        if(!isNaN(dateOwn)&&dateOwn!==\" \"&&dateOwn!==\"\"&&dateOwn!==null){setDateOwnError(false)}\n        else{setDateOwnError(true)}\n    },[dateOwn]);\n    useEffect(()=>{\n        if(dateOwnDisplay!==\" \"&&dateOwnDisplay!==\"\"&&dateOwnDisplay!==null){setDateOwnDisplayError(false)}\n        else{setDateOwnDisplayError(true)}\n    },[dateOwnDisplay]);\n    useEffect(()=>{\n        props.setZettelObject({\n            id: props.item.id,\n            type: type,\n            lemma_id: lemmaId>0?lemmaId:null,\n            opus_id: workId>0?workId:null,\n            date_type: dateType,\n            date_own: dateType===9?dateOwn:null,\n            date_own_display: dateType===9?dateOwnDisplay:null,\n            txt: txt,\n        });\n        if(!(dateOwnDisplay===null||dateOwnDisplay===\"\")&&(dateOwn===null||dateOwn===\"\")){\n            props.setZettelObjectErr({status: 2, msg: \"Sie dürfen kein Anzeigedatum speichern, ohne ein Sortierdatum anzugeben!\"});\n        } else if(workId>0&&dateType===9&&((dateOwn!=\"\"&&dateOwn!=null&&!Number.isInteger(dateOwn))||((dateOwn===\"\"||dateOwn===null)))){\n            props.setZettelObjectErr({status: 1, msg: \"Achtung: Dieser Zettel benötigt eine Datierung! Soll er trotzdem ohne Datierung gespeichert werden?\"});\n        } else if (dateType===9&&!(dateOwn===null||dateOwn===\"\")&&(dateOwnDisplay===null||dateOwnDisplay===\"\")){\n            props.setZettelObjectErr({status: 2, msg: \"Setzen Sie ein Anzeigedatum für den Zettel!\"});\n        }else{props.setZettelObjectErr(null)}\n    },[txt,type,lemmaId,workId,dateType,dateOwn,dateOwnDisplay]);\n    useEffect(()=>{props.setLemma(lemmaAc)},[lemmaAc]);\n    return <>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Zetteltyp:</Col>\n            <Col><SelectMenu style={{width: \"100%\"}} value={type?type:0} options={[[0, \"...\"],[1, \"Perikopenzettel\"], [2, \"Exzerptzettel\"], [3, \"Lexikonzettel\"], [4, \"Indexzettel\"], [5, \"Literaturzettel\"],]} onChange={event=>{setType(parseInt(event.target.value))}} classList=\"onOpenSetFocus\" /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Wort:</Col>\n            <Col><AutoComplete style={{width: \"100%\"}} onChange={(value, id)=>{setLemmaAc(value); setLemmaId(id)}} value={lemmaAc?lemmaAc:\"\"} tbl=\"lemma\" searchCol=\"lemma\" returnCol=\"lemma_display\" /></Col>\n        </Row>\n        {type!==4&&type<6&&<Row className=\"mb-2\">\n            <Col xs={4}>Werk:</Col>\n            <Col><AutoComplete style={{width: \"100%\"}}  value={work?work:\"\"} tbl=\"opera_ac\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{\n                setWork(value);setWorkId(id);\n                if(id>0){\n                    const newDateType = await arachne.opera.get({id: id}, {select: [\"date_display\", \"date_type\"]});\n                    if(newDateType.length>0){setDateType(newDateType[0].date_type);setDateDisplay(newDateType[0].date_display)}\n                }\n            }} /></Col>\n        </Row>}\n        {type!==4&&type<6&&workId>0?<Row className=\"mb-2\">\n            <Col xs={4}>Datierung:</Col>\n            <Col><span style={{width: \"100%\"}} dangerouslySetInnerHTML={parseHTML(dateDisplay)}></span></Col>\n        </Row>:null}\n        {dateType===9?<>\n            <Row className=\"mt-4 mb-2\">\n                <Col><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/09-HiwiHow:-Zettel-verknüpfen#anzeigedatumsortierdatum\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={4}>Sortierdatum:</Col>\n                <Col><input className={dateOwnError?\"invalidInput\":null} style={{width:\"100%\"}} type=\"text\" value={dateOwn?dateOwn:\"\"} onChange={e=>{\n                    setDateOwn(e.target.value===\"\"?null:e.target.value);\n                }} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n                <Col xs={4}>Anzeigedatum:</Col>\n                <Col><input className={dateOwnDisplayError?\"invalidInput\":null} style={{width:\"100%\"}} type=\"text\" value={dateOwnDisplay?dateOwnDisplay:\"\"} onChange={e=>{\n                    setDateOwnDisplay(e.target.value);\n                }} /></Col>\n            </Row>\n        </>:null}\n        {props.item.img_path===null&&<Row className=\"mb-2\">\n            <Col xs={4}>Text:</Col>\n            <Col><textarea style={{width: \"100%\"}} value={txt} onChange={e=>{setTxt(e.target.value)}}></textarea></Col>\n        </Row>}\n    </>;\n}\nfunction newZettelObject(){return {type: 2, txt: \"Neuer Zettel\"}}\nfunction exportZettelObject(){return [\"img_path\", \"date_display\", \"ac_web\", \"lemma_display\", \"txt\"]}\nfunction zettelPresetOptions(){return [\n    ['[{\"id\":2,\"c\":\"lemma\",\"o\":\"=\",\"v\":\"NULL\"}]', \"Wortzuweisung\"],\n    ['[{\"id\": 2,\"c\":\"type\",\"o\":\"=\",\"v\":\"NULL\"}]', \"Typzuweisung\"],\n    ['[{\"id\": 2, \"c\": \"ac_web\", \"o\": \"=\", \"v\": \"NULL\"},{\"id\": 3, \"c\": \"type\", \"o\": \"!=\", \"v\": 4},{\"id\": 4, \"c\": \"type\", \"o\": \"!=\", \"v\": 6},{\"id\": 5, \"c\": \"type\", \"o\": \"!=\", \"v\": 7}]', \"Werkzuweisung\"],\n    ['[{\"id\": 2, \"c\": \"date_type\", \"o\": \"=\", \"v\": 9},{\"id\": 3, \"c\": \"date_own\", \"o\": \"!=\", \"v\": \"NULL\"},{\"id\": 4, \"c\": \"type\", \"o\": \"!=\", \"v\": 3},{\"id\": 5, \"c\": \"type\", \"o\": \"!=\", \"v\": 6},{\"id\": 6, \"c\": \"type\", \"o\": \"!=\", \"v\": 7}]', \"Datumszuweisung\"],\n]}\nfunction zettelSortOptions(){return [['[\"id\"]', \"ID\"], ['[\"lemma\",\"lemma_nr\",\"date_sort\",\"date_type\"]', \"Datum\"], ['[\"ocr_length\"]', \"Textlänge\"]]}\n/* ************************************************************************************* */\nfunction MainMenuContent(props){\n    return <>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"index\")}}>Index</NavDropdown.Item>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"tllressource\")}}>Ressourcen</NavDropdown.Item>\n    </>;\n}\n/* ************************************************************************************* */\nconst fetchIndexBoxData=async()=>{\n    let wl = await arachne.lemma.getAll({select: [\"id\", \"lemma\", \"lemma_display\"], order: [\"lemma\"]})\n    wl=wl.map(w=>{return {id: w.id, lemma_display: w.lemma_display, lemma: w.lemma.toLowerCase()}})\n    return wl;\n}\nfunction Zettel(props){\n    const [verso, setVerso] = useState(\"\");\n    const [editions, setEditons] = useState([]);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            if(props.z.work_id>0){\n                const newEditions = await arachne.edition.get({work_id: props.z.work_id}, {select: [\"id\", \"label\", \"url\"]});\n                let editionsLst = [];\n                for(const e of newEditions){\n                    editionsLst.push(<ListGroup.Item key={e.id}><a href={e.url===\"\"?`/site/argos/${e.id}`:e.url} target=\"_blank\" rel=\"noreferrer\">{e.label}</a></ListGroup.Item>);\n                }\n                setEditons(editionsLst)\n            }\n        };\n        fetchData();\n    }, []);\n    return <Card style={{width: \"30rem\"}} className=\"mb-3\">\n        <FontAwesomeIcon style={{position: \"absolute\", top: \"12px\", right: \"10px\"}} onClick={()=>{if(verso===\"\"){setVerso(\"v\")}else{setVerso(\"\")}}} icon={faSync} />\n        <Card.Header style={{height: \"41px\"}} dangerouslySetInnerHTML={parseHTML(props.z.opus)}></Card.Header>\n        <Card.Img variant=\"bottom\" src={`${arachne.url}/mlw${props.z.img_path}${verso}.jpg`} />\n        <Card.Body>\n            <Card.Text><ListGroup horizontal>{editions}</ListGroup></Card.Text>\n        </Card.Body>\n    </Card>;\n}\nfunction IndexBoxDetail(props){\n    const [lemma, setLemma] = useState(null);\n    const [vZettels, setVZettels] = useState(null);\n    const [eZettels, setEZettels] = useState(null);\n    const [iZettels, setIZettels] = useState(null);\n    const [rZettels, setRZettels] = useState(null);\n    const [timeLineData, setTimeLineData] = useState([]);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            setLemma(null);\n            setVZettels(null);\n            setEZettels(null);\n            setIZettels(null);\n            setRZettels(null);\n            const newLemma = await arachne.lemma.get({id: props.lemma_id});\n            setLemma(newLemma[0]);\n            const nVZettel = await arachne.zettel.get({lemma_id: props.lemma_id, type: 1}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\", \"date_sort\", \"date_own\"]});\n            setVZettels(nVZettel);\n            const nEZettel = await arachne.zettel.get({lemma_id: props.lemma_id, type: 2}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\", \"date_sort\", \"date_own\"]});\n            setEZettels(nEZettel);\n            const nIZettel = await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"3\"}, {c: \"type\", o: \"<=\", v: \"6\"}, {c: \"type\", o: \"!=\", v: \"4\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\", \"date_sort\", \"date_own\"]})\n            setIZettels(nIZettel);\n            setTimeLineData(nVZettel.concat(nEZettel.concat(nIZettel)))\n            setRZettels(await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"4\"}, {c: \"type\", o: \"!=\", v: \"6\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n        };\n        fetchData();\n    }, [props.lemma_id])\n    return (lemma?<>\n        <h1 dangerouslySetInnerHTML={parseHTML(lemma.lemma_display)}></h1>\n        <Container>\n            {lemma.dicts&&<Row>\n                <Col xs={2}>Wörterbücher:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.dicts)}></Col>\n            </Row>}\n            {lemma.comment&&<Row className=\"mb-4\">\n                <Col xs={2}>Kommentar:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.comment)}></Col>\n            </Row>}\n            <Row>\n                <Col>\n                    <Accordion defaultActiveKey=\"\">\n                    <Accordion.Item eventKey=\"s\">\n                        <Accordion.Header>Statistik</Accordion.Header>\n                        <Accordion.Body>\n                            <div style={{width: \"70%\", margin: \"auto\"}}>\n                                <Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={{\n                                    labels: [\"6. Jh.\",\"7. Jh.\",\"8. Jh.\",\"9. Jh.\",\"10. Jh.\",\"11. Jh.\",\"12. Jh.\",\"13. Jh.\",],\n                                    datasets: [\n                                        {\n                                            label: 'Anzahl Zettel',\n                                            data: [\n                                                timeLineData.filter(t=>t.date_sort<600).length,\n                                                timeLineData.filter(t=>t.date_sort>599&&t.date_sort<700).length,\n                                                timeLineData.filter(t=>t.date_sort>699&&t.date_sort<800).length,\n                                                timeLineData.filter(t=>t.date_sort>799&&t.date_sort<900).length,\n                                                timeLineData.filter(t=>t.date_sort>899&&t.date_sort<1000).length,\n                                                timeLineData.filter(t=>t.date_sort>999&&t.date_sort<1100).length,\n                                                timeLineData.filter(t=>t.date_sort>1099&&t.date_sort<1200).length,\n                                                timeLineData.filter(t=>t.date_sort>1199).length,\n                                            ],\n                                            backgroundColor: ['#347F9F'],\n                                            borderColor: ['#347F9F'],\n                                            borderWidth: 1,\n                                        },\n                                    ],\n                                }} />\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"v\">\n                        <Accordion.Header>verzetteltes Material&nbsp;{vZettels?<span>({vZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{vZettels?vZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"e\">\n                        <Accordion.Header>Exzerpt-Zettel&nbsp;{eZettels?<span>({eZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{eZettels?eZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"i\">\n                        <Accordion.Header>Index-Zettel&nbsp;{iZettels?<span>({iZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{iZettels?iZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"r\">\n                        <Accordion.Header>restliche Zettel&nbsp;{rZettels?<span>({rZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{rZettels?rZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                </Col>\n            </Row>\n        </Container>\n    </>:null);\n}\n/* ************************************************************************************* */\nfunction TLLRessource(props){\n    const menuItems = [\n        [\"neuer Eintrag\", async(that)=>{\n            if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                const newId = await arachne.edition.save({editor: \"EditorIn\", year: 2022});\n                that.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n            }\n        }]\n    ];\n    const tblRow=(props)=>{\n        return <><td title={\"ID: \"+props.cEl.id}>{props.cEl.editor} {props.cEl.year}</td><td>{props.cEl.ac_web}</td></>;\n    };\n    const asideContent = [ // caption; type: t(ext-input), (text)a(rea), (auto)c(omplete); col names as array\n        {caption: \"EditorIn\", type: \"text\", col: \"editor\"},\n        {caption: \"Jahr\", type: \"text\", col: \"year\"},\n        {caption: <i>opus</i>, type: \"auto\", col: [\"ac_web\", \"opus_id\"], search: {tbl: \"opera_ac\", sCol: \"ac_web\", rCol: \"ac_web\"}},\n        {caption: <span>URL <small>(extern)</small></span>, type: \"text\", col: \"url\"},\n        {caption: <span>Pfad <small>(auf dem Server)</small></span>, type: \"text\", col: \"path\"},\n        {caption: \"Kommentar\", type: \"area\", col: \"comment\"},\n        {caption: \"Seiten-verhältnis\", type: \"text\", col: \"aspect_ratio\"},\n    ];\n    return <TableView\n        tblName=\"edition\"\n        searchOptions={[[\"id\", \"ID\"], [\"editor\", \"EditorIn\"], [\"year\", \"Jahr\"]]}\n        sortOptions={[['[\"id\"]', \"ID\"]]}\n        menuItems={menuItems}\n        tblRow={tblRow}\n        tblHeader={<><th>Kürzel</th><th><i>opus</i></th></>}\n        asideContent={asideContent}\n    />;\n}\n/* ************************************************************************************* */\n\nfunction StatisticsChart(props){\n    let returnChart = null;\n    switch(props.name){\n        case \"zettel_process\":\n            returnChart=<div style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={{\n                    labels: [\"abgeschlossen\", \"nur Lemma\", \"unbearbeitet\"],\n                    datasets: [\n                      {\n                        label: '# of Votes',\n                        data: props.data,\n                        backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                        borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                        borderWidth: 1,\n                      },\n                    ],\n                }} /></div>;\n            break;\n        case \"zettel_type\":\n            returnChart=<div style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={{\n                    labels: [\"verzetteltes Material\", \"Exzerpt\", \"Index\", \"Literatur\", \"Index (unkl. Werk)\", \"Notiz\", \"kein Typ\"],\n                    datasets: [\n                      {\n                        label: '# of Votes',\n                        data: props.data,\n                        backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3', '#EFEFEF', '#FFFFFF'],\n                        borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2', '#EEEEEE', \"#EFEFEF\"],\n                        borderWidth: 1,\n                      },\n                    ],\n                }} /></div>;\n            break;\n        case \"zettel_created_changed\":\n            returnChart=<div style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>nach Jahren</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={{\n                labels: [\"2020\", \"2021\", \"2022\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: props.data[1],\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        //fill: true,\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: props.data[0],\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            }} /></div>;\n            break;\n        case \"zettel_created_changed_current\":\n            returnChart=<div style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>in diesem Jahr</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={{\n                labels: [\"Jan.\", \"Feb.\", \"Mär.\", \"Apr.\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Okt.\", \"Nov.\", \"Dez.\"].slice(0,(new Date()).getMonth()+1),\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: props.data[1],\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        //fill: true,\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: props.data[0],\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            }} /></div>;\n            break;\n        case \"zettel_letter\":\n            returnChart=<div style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>nach Buchstaben</h4><Bar options={{\n                aspectRatio: false,\n                plugins: {legend:{display: true, position: \"bottom\"}},\n                scales: {x: {stacked: true}, y: {stacked: true}}\n            }}\n            data={{\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"W\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                    {\n                        label: 'Anzahl verzetteltes Material',\n                        data: props.data[0],\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                    {\n                        label: 'Anzahl Exzerpt-Zettel',\n                        data: props.data[1],\n                        backgroundColor: ['#8FC9D9'],\n                        borderColor: ['#8FC9D9'],\n                        borderWidth: 1,\n                    },\n                    {\n                        label: 'Anzahl Index-Zettel',\n                        data: props.data[2],\n                        backgroundColor: ['#D2EFF4'],\n                        borderColor: ['#D2EFF4'],\n                        borderWidth: 1,\n                    },\n                    {\n                        label: 'Anzahl restlicher Zettel',\n                        data: props.data[3],\n                        backgroundColor: ['#EAF2F3'],\n                        borderColor: ['#EAF2F3'],\n                        borderWidth: 1,\n                    },\n                ],\n            }} /></div>;\n            break;\n        case \"lemma_letter\":\n            returnChart=<div style={{marginBottom: \"80px\", margin: \"auto\", width: \"70%\", height: \"600px\"}}><h4>nach Buchstaben</h4><Bar options={{plugins: {legend:{display: false, position: \"bottom\"}}}} data={{\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: props.data,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            }} /></div>;\n            break;\n        case \"lemma_mlw\":\n            returnChart=<div style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Relevanz fürs Wörterbuch</h4><Pie options={{plugins: {legend:{display: true, position: \"bottom\"}}}} data={{\n                labels: [\"relevant\", \"nicht relevant\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: props.data,\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            }} /></div>;\n            break;\n        case \"ressource_work\":\n            returnChart=<div style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>Werke nach Volltext und pdfs</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={{\n                labels: [\"mit Volltext und pdf\", \"nur mit pdf\", \"ohne pdf und Volltext\", \"nicht in Benutzung\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: props.data,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            }} /></div>;\n            break;\n        case \"ressource_scans\":\n            returnChart=<div style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>Scan-Seiten und Volltexte</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={{\n                labels: [\"geprüfter Volltext\", \"automatischer Volltext\", \"ohne Volltext\", \"kein lat. Text\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: props.data,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            }} /></div>;\n            break;\n        default:\n            console.log(props.name);\n            //throw new Error(\"Statistic Name not found!\");\n    }\n    return returnChart;\n}\n/* ************************************************************************************* */\nfunction TLL_Import_Ressource(props){\n    const [scanWork, setScanWork] = useState();\n    const [scanId, setScanId] = useState();\n    const [scanEditor, setScanEditor] = useState();\n    const [scanYear, setScanYear] = useState();\n    const [scanPath, setScanPath] = useState();\n    const [scanFiles, setScanFiles] = useState();\n    return <>\n        <Row className=\"mb-2\">\n            <Col xs={3}>Opus:</Col>\n            <Col><AutoComplete  style={{width: \"100%\"}} value={scanWork?scanWork:\"\"} tbl=\"opera_ac\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{setScanWork(value);setScanId(id)}} /></Col>\n        </Row>\n        <Row key=\"0\" className=\"mb-2\">\n            <Col xs={3}>Editor:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={scanEditor?scanEditor:\"\"} onChange={e=>{setScanEditor(e.target.value)}} /></Col>\n        </Row>\n        <Row key=\"1\" className=\"mb-2\">\n            <Col xs={3}>Jahr:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={scanYear?scanYear:\"\"} onChange={e=>{setScanYear(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={3}>Dateipfad:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={scanPath?scanPath:\"\"} placeholder=\"/A/ABBO FLOR. Calc./\" onChange={e=>{setScanPath(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={3}>.png-Dateien:</Col>\n            <Col><Form.Group>\n                <Form.Control type=\"file\" multiple accept=\"image/png\" onChange={e=>{setScanFiles(e.target.files)}} />\n            </Form.Group></Col>\n        </Row>\n        <Row>\n            <Col xs={3}></Col>\n            <Col><StatusButton value=\"hochladen\" onClick={async ()=>{\n                if(scanFiles==null){\n                    return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n                } else if(!scanEditor||!scanYear){\n                    return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n                } else if(scanId === null){\n                    return {status: false, error: \"Kein gültiges Opus ausgewählt!\"};\n                } else if(scanPath&&scanId){\n                    return props.importRessource({\n                        opus_id: scanId,\n                        editor: scanEditor,\n                        year: scanYear,\n                        path: scanPath,\n                        url: \"\",\n                    }, scanFiles);\n                    \n                } else{return {status: false, error: \"Geben Sie einen gültigen Pfad ein!\"};}\n            }} /></Col>\n            </Row>\n    </>;\n}\n/* ************************************************************************************* */\nexport {\n    arachneTbls,\n    LemmaRow, LemmaHeader, lemmaSearchItems, LemmaAsideContent,\n    zettelSearchItems, ZettelCard, zettelBatchOptions, BatchInputType, ZettelAddLemmaContent, ZettelSingleContent, newZettelObject, exportZettelObject, zettelPresetOptions, zettelSortOptions,\n    MainMenuContent,\n    fetchIndexBoxData, IndexBoxDetail,\n    TLLRessource,\n    StatisticsChart,\n    TLL_Import_Ressource,\n}"],"names":["arachneTbls","LemmaHeader","width","LemmaRow","props","id","lemma","onDoubleClick","e","showDetail","parseInt","target","closest","title","dangerouslySetInnerHTML","parseHTML","lemma_display","onClick","localStorage","setItem","loadMain","href","link_img","link_name","lemmaSearchItems","LemmaAsideContent","useState","item","setLemma","setLemma_display","lemma_nr","setLemma_Nr","sub","setSub","addenda","setAddenda","search","setSearch","setLink_name","setLink_img","comment","setComment","useEffect","className","type","value","onChange","event","parseHTMLPreview","options","style","height","replace","indexOf","status","error","hom_nr","newLemmaValue","arachne","onUpdate","marginLeft","variant","window","confirm","lemma_id","allZettel","zettelRemoveList","zettel","push","length","onClose","onReload","zettelSearchItems","ZettelCard","box","img_path","classList","in_use","alt","objectFit","borderRadius","src","date_own_display","date_display","float","overflow","maxHeight","maxWidth","ac_web","txt","zettelBatchOptions","BatchInputType","batchType","setBatchValue","setBatchValueId","batchValue","tbl","searchCol","returnCol","color","ZettelAddLemmaContent","newLemma","setNewLemma","newLemmaDisplay","setNewLemmaDisplay","homonym","setHomonym","MLW","setMLW","Stern","setStern","Fragezeichen","errorLemma","setErrorLemma","errorLemmaDisplay","setErrorLemmaDisplay","setLemmaObject","setNewLemmaOK","rel","ZettelSingleContent","setType","lemmaAc","setLemmaAc","lemmaId","setLemmaId","work","setWork","work_id","workId","setWorkId","date_type","dateType","setDateType","dateDisplay","setDateDisplay","date_own","dateOwn","setDateOwn","dateOwnDisplay","setDateOwnDisplay","dateOwnError","setDateOwnError","dateOwnDisplayError","setDateOwnDisplayError","setTxt","isNaN","setZettelObject","opus_id","Number","isInteger","setZettelObjectErr","msg","xs","select","newDateType","newZettelObject","exportZettelObject","zettelPresetOptions","zettelSortOptions","MainMenuContent","fetchIndexBoxData","order","wl","map","w","toLowerCase","Zettel","verso","setVerso","editions","setEditons","fetchData","z","newEditions","editionsLst","url","label","position","top","right","icon","faSync","opus","horizontal","IndexBoxDetail","vZettels","setVZettels","eZettels","setEZettels","iZettels","setIZettels","rZettels","setRZettels","timeLineData","setTimeLineData","nVZettel","nEZettel","c","o","v","nIZettel","concat","dicts","defaultActiveKey","eventKey","margin","aspectRatio","plugins","legend","display","data","labels","datasets","filter","t","date_sort","backgroundColor","borderColor","borderWidth","size","animation","TLLRessource","menuItems","that","editor","year","newId","setState","newItemCreated","asideContent","caption","col","sCol","rCol","tblName","searchOptions","sortOptions","tblRow","cEl","tblHeader","StatisticsChart","returnChart","name","marginBottom","slice","Date","getMonth","scales","x","stacked","y","console","log","TLL_Import_Ressource","scanWork","setScanWork","scanId","setScanId","scanEditor","setScanEditor","scanYear","setScanYear","scanPath","setScanPath","scanFiles","setScanFiles","placeholder","multiple","accept","files","importRessource","path"],"sourceRoot":""}