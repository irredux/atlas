{"version":3,"file":"static/js/440.8e80b9ff.chunk.js","mappings":"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","sources":["content/dom.js"],"sourcesContent":["import { parseHTML, StatusButton, SelectMenu, AutoComplete, TableView } from \"./../elements.js\";\nimport { arachne } from \"./../arachne.js\";\nimport { useState, useEffect } from \"react\";\nimport { Col, Row, Container, NavDropdown } from \"react-bootstrap\";\n\nfunction arachneTbls(){\n    return [\"lemma\", \"work\", \"zettel\", \"user\", \"konkordanz\", \"opera\", \"comment\", \"etudaus\", \"ocr_jobs\", \"edition\", \"statistics\"];\n}\n\n/* ************************************************************************************* */\n\nfunction LemmaHeader(){\n\treturn <tr><th width=\"30%\">Lemma</th><th width=\"20%\">Farbe</th><th>Kommentar</th><th>dom en ligne</th></tr>;\n}\n\t\t\t\nfunction LemmaRow(props){\n\tconst colors = {\n        \"gelb\": \"#E9AB17\",\n        \"grün\": \"green\",\n        \"blau\": \"#0000A0\",\n        \"rot\": \"#C11B17\",\n        \"lila\": \"#4B0082\",\n        \"türkis\": \"#3f888f\"\n    };\n    return <tr id={props.lemma.id} onDoubleClick={e=>{props.showDetail(parseInt(e.target.closest(\"tr\").id))}}>\n\t\t<td title={\"ID: \"+props.lemma.id}>\n\t\t\t<a dangerouslySetInnerHTML={parseHTML(props.lemma.lemma_display)} onClick={e=>{\n    \t\t\tlocalStorage.setItem(\"searchBox_zettel\", `[[{\"id\":0,\"c\":\"lemma_id\",\"o\":\"=\",\"v\":${props.lemma.id}}],1,[\"id\"]]`);\n    \t\t\tprops.loadMain(e);\n\t\t\t}}>\n\t\t\t</a>\n\t\t</td>\n\t\t<td style={{color: colors[props.lemma.farbe]}}>{props.lemma.farbe}</td>\n\t\t<td dangerouslySetInnerHTML={parseHTML(props.lemma.comment)}></td>\n\t\t<td>{props.lemma.URL?<a href={\"https://dom-en-ligne.de/\"+props.lemma.URL} target=\"_blank\" rel=\"noreferrer\">zum Artikel</a>:null}</td>\n\t</tr>;\n}\nfunction lemmaSearchItems(){\n\treturn [\n\t\t[\"lemma\", \"Lemma\"],\n\t\t[\"id\", \"ID\"],\n\t\t[\"farbe\", \"Farbe\"],\n\t\t[\"URL\", \"URL\"],\n\t];\n}\n\nfunction LemmaAsideContent(props){\n\tconst [lemma, setLemma] = useState(props.item.lemma);\n\tconst [lemma_simple, setLemma_simple] = useState(props.item.lemma_simple);\n\tconst [nr, setNr] = useState(props.item.nr);\n\tconst [normgraphie, setNormgraphie] = useState(props.item.normgraphie);\n\tconst [dom_normgraphie, setDom_normgraphie] = useState(props.item.dom_normgraphie);\n\tconst [verworfen, setVerworfen] = useState(props.item.verworfen);\n\tconst [unsicher, setUnsicher] = useState(props.item.unsicher);\n\tconst [farbe, setFarbe] = useState(props.item.farbe);\n\tconst [comment, setComment] = useState(props.item.comment);\n\tconst [reference_id, setReference_id] = useState(props.item.reference_id);\n\tconst [reference, setReference] = useState(props.item.reference);\n\tuseEffect(()=>{\n\t\tsetLemma(props.item.lemma);\n\t\tsetLemma_simple(props.item.lemma_simple);\n\t\tsetNr(props.item.nr);\n\t\tsetNormgraphie(props.item.normgraphie);\n\t\tsetDom_normgraphie(props.item.dom_normgraphie);\n\t\tsetVerworfen(props.item.verworfen);\n\t\tsetUnsicher(props.item.unsicher);\n\t\tsetFarbe(props.item.farbe);\n\t\tsetComment(props.item.comment);\n\t\tsetReference_id(props.item.reference_id);\n\t\tsetReference(props.item.reference);\n\t}, [props.id]);\n\n\treturn <Container>\n        <Row className=\"mb-2\">\n            <Col>Wort:</Col>\n            <Col><input type=\"text\" value={lemma} onChange={event=>{setLemma(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Wort: <small>(ohne Sonderz.)</small></Col>\n            <Col><input type=\"text\" value={lemma_simple} onChange={event=>{setLemma_simple(event.target.value)}} /></Col>\n        </Row>\n\t\t<Row className=\"mb-2\">\n            <Col>Farbe:</Col>\n            <Col><SelectMenu options={[[\"gelb\", \"gelb\"], [\"grün\", \"grün\"], [\"rot\", \"rot\"], [\"blau\", \"blau\"], [\"lila\", \"lila\"], [\"türkis\", \"türkis\"]]} onChange={event=>{setFarbe(event.target.value)}} value={farbe} /></Col>\n        </Row>\n\t\t{[\"blau\", \"türkis\", \"lila\"].includes(farbe)?<Row>\n\t\t\t<Col>Referenz:</Col>\n\t\t\t<Col><AutoComplete onChange={(value, id)=>{setReference(value);setReference_id(id)}} tbl=\"lemma\" col=\"ac_w\" value={reference} /></Col>\n\t\t</Row>:null}\n\n\n        <Row className=\"mt-4 mb-2\">\n            <Col>Homonym-Nr.:</Col>\n            <Col><input type=\"text\" value={nr} onChange={event=>{setNr(event.target.value)}} /></Col>\n        </Row>\n\n        <Row className=\"mb-2\">\n        \t<Col>Normgraphie:</Col>\n        \t<Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setNormgraphie(event.target.value)}} value={normgraphie} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n        \t<Col>DOM-Normgraphie:</Col>\n        \t<Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setDom_normgraphie(event.target.value)}} value={dom_normgraphie} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n        \t<Col>verworfen:</Col>\n        \t<Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setVerworfen(event.target.value)}} value={verworfen} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n        \t<Col>unsicher:</Col>\n        \t<Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setUnsicher(event.target.value)}} value={unsicher} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n        \t<Col>Kommentar:</Col>\n        \t<Col><textarea onChange={event=>{setComment(event.target.value)}} style={{resize: \"false\", width: \"97%\"}} value={comment}></textarea></Col>\n        </Row>\n        <Row>\n            <Col>\n            <StatusButton value=\"speichern\" onClick={async ()=>{\n        if(lemma===\"\"){\n            return {status: false, error: \"Bitte ein gültiges Wort eintragen!\"};\n        } else if(lemma_simple===\"\"){\n            return {status: false, error: \"Bitte tragen Sie eine gültiges Wort (ohne Sonderzeichen) ein!\"};\n        } else {\n            let newLemmaValue = {\n                id: props.id,\n                lemma: lemma,\n                lemma_simple: lemma_simple,\n                reference_id: reference_id,\n                normgraphie: normgraphie,\n                dom_normgraphie: dom_normgraphie,\n                verworfen: verworfen,\n                unsicher: unsicher,\n                farbe: farbe,\n                comment: comment,\n            };\n            if(!isNaN(nr)){newLemmaValue.nr=nr}\n            const newId = await arachne.lemma.save(newLemmaValue);\n            props.onUpdate(props.id);\n            return {status: true};\n        }\n    }} />\n    {arachne.access(\"l_edit\")?<StatusButton style={{marginLeft: \"10px\"}} variant=\"danger\" value=\"löschen\" onClick={async ()=>{\n        if(window.confirm(\"Soll das Wort gelöscht werden? Das Wort wird von allen verknüpften Zettel entfernt. Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n            const allZettel = await arachne.zettel.get({lemma_id: props.id});\n            let zettelRemoveList = [];\n            for(const zettel of allZettel){\n                zettelRemoveList.push({id: zettel.id, lemma_id: null});\n            }\n            if(zettelRemoveList.length>0){await arachne.zettel.save(zettelRemoveList);}\n            await arachne.lemma.delete(props.id);\n            props.onClose();\n            props.onReload();\n            return {status: true};\n        }\n    }} />:null}\n            </Col>\n        </Row>\n    </Container>;\n}\n\n/* ************************************************************************************* */\n\nfunction zettelSearchItems(){\n    return [\n        [\"lemma_simple\", \"Wort\"],\n        [\"lemma_id\", \"Wort-ID\"],\n        [\"farbe\", \"Farbe\"],\n        [\"id\", \"ID\"],\n        [\"editor\", \"EditorIn\"],\n        [\"comment\", \"Kommentar\"],\n        [\"zettel_sigel\", \"Sigel\"],\n    ];\n}\nfunction ZettelCard(props){\n    const zettel = props.item;\n    let style = {width: arachne.options.z_width+\"px\", height: \"100%\"};\n    let box = null;\n    if(zettel.img_path!=null){\n        let classList = \"\";\n        if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n        else{classList+=\"zettel_img in_use\"}\n        box =\n        <div className=\"zettel\" id={zettel.id} style={style}>\n            <img alt=\"\" style={{objectFit: \"fill\", borderRadius: \"7px\"}} className={classList} src={zettel.img_path+\".jpg\"}></img>\n            {props.showDetail?\n            <div className=\"zettel_menu\">\n                <span style={{float: \"left\", overflow: \"hidden\", maxHeight: \"50px\", maxWidth: \"250px\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.zettel_sigel)}></span>\n            </div>\n            :null}\n        </div>;\n    } else {\n        //style.height = \"355px\";\n        box =\n        <div className=\"zettel\" id={zettel.id} style={style}>\n            <div className=\"digitalZettel\">\n                <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.zettel_sigel)}></div>\n                <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n            </div>\n        </div>;\n    }\n    return box;\n}\nfunction zettelBatchOptions(){return [[1, \"Wort\", \"lemma_id\", true],[2, \"Sigel\", \"konkordanz_id\", true]]} // [id, description, db-col, use AutoComplete Component]; first array will trigger \"add new lemma\" if not in auto-complete list.\nfunction BatchInputType(props){\n    switch(props.batchType){\n        case 1:\n            return <AutoComplete onChange={(value, id)=>{props.setBatchValue(value);props.setBatchValueId(id)}} value={props.batchValue} tbl=\"lemma\" searchCol=\"ac_w\" returnCol=\"ac_w\" />;\n            break;\n        case 2:\n            return <AutoComplete  value={props.batchValue} tbl=\"konkordanz\" searchCol=\"zettel_sigel\" returnCol=\"zettel_sigel\" onChange={(value, id)=>{props.setBatchValue(value);props.setBatchValueId(id)}} />;\n            break;\n        default:\n            return <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n    }\n}\nfunction ZettelAddLemmaContent(props){\n    const [newLemma, setNewLemma]=useState(props.newLemma);\n    const [newLemmaDisplay, setNewLemmaDisplay]=useState(props.newLemmaDisplay);\n    const [homonym, setHomonym]=useState(0);\n    const [farbe, setFarbe]=useState(\"gelb\");\n    const [reference, setReference]=useState(\"\");\n    const [referenceId, setReferenceId]=useState(null);\n    const [normgraphie, setNormgraphie]=useState(0);\n    const [domNormgraphie,setDomNormgraphie]=useState(0);\n    const [verworfen, setVerworfen]=useState(0);\n    const [unsicher, setUnsicher]=useState(0);\n    const [comment, setComment]=useState(\"\");\n    const [errorLemma, setErrorLemma]=useState(false);\n    const [errorLemmaDisplay, setErrorLemmaDisplay]=useState(false);\n    const referenceColors = [\"blau\", \"türkis\", \"lila\"];\n    useEffect(()=>{\n        props.setLemmaObject({\n            lemma: newLemma,\n            lemma_simple: newLemmaDisplay,\n            nr: homonym>0?homonym:null,\n            farbe: farbe,\n            reference_id: referenceColors.includes(farbe)?referenceId:null,\n            normgraphie: normgraphie,\n            dom_normgraphie: domNormgraphie,\n            verworfen: verworfen,\n            unsicher: unsicher,\n            comment: comment!=\"\"?comment:null\n        });\n        if(newLemma===\"\"){setErrorLemma(true)}\n        else{setErrorLemma(false)}\n\n        if(newLemmaDisplay===\"\"){setErrorLemmaDisplay(true)}\n        else{setErrorLemmaDisplay(false)}\n\n        if((newLemma===\"\" || newLemma.indexOf(\" \")>-1)||newLemmaDisplay===\"\"){props.setNewLemmaOK(false)}\n        else{props.setNewLemmaOK(true)}\n    },[newLemma,newLemmaDisplay,homonym,farbe,reference,normgraphie,domNormgraphie,verworfen,unsicher,comment]);\n    return <>\n        <Row className=\"mb-2\">\n            <Col>Wort:</Col>\n            <Col><input type=\"text\" className={errorLemma?\"invalidInput\":null} value={newLemma} onChange={event=>{setNewLemma(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Wort: <small>(ohne Sonderzeichen)</small></Col>\n            <Col><input type=\"text\" className={errorLemmaDisplay?\"invalidInput\":null} value={newLemmaDisplay} onChange={event=>{setNewLemmaDisplay(event.target.value)}} /></Col>\n        </Row>\n        <Row>\n            <Col>Farbe:</Col>\n            <Col><SelectMenu options={[[\"gelb\", \"gelb\"], [\"grün\", \"grün\"],\n            [\"rot\", \"rot\"], [\"blau\", \"blau\"], [\"lila\", \"lila\"], [\"türkis\", \"türkis\"]]} onChange={event=>{setFarbe(event.target.value)}} /></Col>\n        </Row>\n        {referenceColors.includes(farbe)?<Row className=\"mt-2\">\n            <Col>Referenz:</Col>\n            <Col><AutoComplete onChange={(value, id)=>{setReference(value);setReferenceId(id)}} tbl=\"lemma\" col=\"ac_w\" /></Col>\n        </Row>:null}\n        <Row className=\"mt-4 mb-2\">\n            <Col>Zahlzeichen:</Col>\n            <Col><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{setHomonym(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>Normgraphie:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setNormgraphie(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>DOM-Normgraphie:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setDomNormgraphie(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>verworfen:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setVerworfen(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col>unsicher:</Col>\n            <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{setUnsicher(event.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col>Kommentar:</Col>\n            <Col><textarea onChange={event=>{setComment(event.target.value)}} style={{resize: \"false\", width: \"97%\"}} value={comment}></textarea></Col>\n        </Row>\n    </>;\n}\nfunction ZettelSingleContent(props){\n    const [lemmaAc, setLemmaAc]=useState(props.item.ac_w);\n    const [lemmaId, setLemmaId]=useState(props.item.lemma_id);\n    const [sigel, setSigel]=useState(props.item.zettel_sigel);\n    const [sigelId, setSigelId]=useState(props.item.konkordanz_id);\n    const [txt, setTxt]=useState(props.item.txt);\n    const [sigelPreview, setSigelPreview]=useState(null);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            const operaId = await arachne.konkordanz.get({id: sigelId}, {select: [\"opera_id\"]});\n            if(operaId.length>0){\n                const newSigelPreview = await arachne.opera.get({id: operaId[0].opera_id});\n                console.log(newSigelPreview);\n                if(newSigelPreview.length>0){setSigelPreview(newSigelPreview[0])}\n                else{setSigelPreview(null)}\n            }else{setSigelPreview(null)}\n        };\n        if(sigelId>0){fetchData()}else{setSigelPreview(null)}\n    },[sigelId])\n    useEffect(()=>{\n        setLemmaAc(props.item.ac_w);\n        setLemmaId(props.item.lemma_id);\n        setSigel(props.item.zettel_sigel);\n        setSigelId(props.item.konkordanz_id);\n        setTxt(props.item.txt);\n    },[props.item.id]);\n    useEffect(()=>{\n        props.setZettelObject({\n            id: props.item.id,\n            lemma_id: lemmaId>0?lemmaId:null,\n            konkordanz_id: sigelId>0?sigelId:null,\n            txt: txt,\n        });\n    },[txt,lemmaId,sigelId]);\n    useEffect(()=>{props.setLemma(lemmaAc)},[lemmaAc]);\n    return <>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Wort:</Col>\n            <Col><AutoComplete classList=\"onOpenSetFocus\" style={{width: \"100%\"}} onChange={(value, id)=>{setLemmaAc(value); setLemmaId(id)}} value={lemmaAc?lemmaAc:\"\"} tbl=\"lemma\" searchCol=\"ac_w\" returnCol=\"ac_w\" /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Sigel:</Col>\n            <Col><AutoComplete style={{width: \"100%\"}}  value={sigel?sigel:\"\"} tbl=\"konkordanz\" searchCol=\"zettel_sigel\" returnCol=\"zettel_sigel\" onChange={async (value, id)=>{setSigel(value);setSigelId(id)}} /></Col>\n        </Row>\n        {sigelPreview?<Row>\n            <Col><small><b>{sigelPreview.sigel}</b> = <span dangerouslySetInnerHTML={parseHTML(sigelPreview.werk)}></span></small></Col>\n        </Row>:null}\n        {props.item.img_path===null&&<Row className=\"mb-2\">\n            <Col xs={4}>Text:</Col>\n            <Col><textarea style={{width: \"100%\"}} value={txt} onChange={e=>{setTxt(e.target.value)}}></textarea></Col>\n        </Row>}\n    </>;\n}\nfunction newZettelObject(){return {txt: \"Neuer Zettel\"}}\nfunction exportZettelObject(){return [\"img_path\", \"zettel_sigel\", \"lemma_display\", \"txt\"]}\nfunction zettelPresetOptions(){return null}\nfunction zettelSortOptions(){return [['[\"id\"]', \"ID\"], ['[\"lemma_simple\"]', \"Lemma\"]]}\n\n/* ************************************************************************************* */\n\nfunction MainMenuContent(props){\n\n\n    return <>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"konkordanz\")}}>Konkordanz</NavDropdown.Item>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"quellenverzeichnis\")}}>Quellenverzeichnis</NavDropdown.Item>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"etudaus\")}}>Etudaus</NavDropdown.Item>\n        <NavDropdown.Item onClick={e => {props.loadMain(e, \"domressource\")}}>Ressourcen</NavDropdown.Item>\n    </>;\n}\n\n/* ************************************************************************************* */\n\nfunction DOMOpera(props){\n    const menuItems = [\n        [\"neuer Eintrag\", async(that)=>{\n            if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                const newId = await arachne.opera.save({sigel: \"neues Werk\"});\n                that.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n            }\n        }]\n    ];\n    const tblRow=(props)=>{\n        return <><td title={\"ID: \"+props.cEl.id} dangerouslySetInnerHTML={parseHTML(props.cEl.sigel)}></td><td dangerouslySetInnerHTML={parseHTML(props.cEl.werk)}></td><td className=\"minorTxt\">\n                        {props.cEl.bibgrau&&<p dangerouslySetInnerHTML={parseHTML(props.cEl.bibgrau)}></p>}\n                        {props.cEl.bibvoll&&<p dangerouslySetInnerHTML={parseHTML(props.cEl.bibvoll)}></p>}\n                        {props.cEl.bibzusatz&&<p dangerouslySetInnerHTML={parseHTML(props.cEl.bibzusatz)}></p>}\n                </td></>;\n    };\n    const asideContent = [ // caption; type: t(ext-input), (text)a(rea), (auto)c(omplete); col names as array\n        {caption: \"dol-ID\", type: \"text\", col: \"db_id\"},\n        {caption: \"Sigel\", type: \"text\", col: \"sigel\"},\n        {caption: \"Werk\", type: \"text\", col: \"werk\"},\n        {caption: \"Bib-Grau\", type: \"text\", col: \"bibgrau\"},\n        {caption: \"Bib-Zusatz\", type: \"text\", col: \"bibzusatz\"},\n        {caption: \"Bib-Voll\", type: \"text\", col: \"bibvoll\"},\n    ];\n    return <TableView\n        tblName=\"opera\"\n        searchOptions={[[\"sigel\", \"Sigel\"], [\"id\", \"ID\"]]}\n        sortOptions={[['[\"id\"]', \"ID\"], ['[\"sigel\"]', \"Sigel\"]]}\n        menuItems={menuItems}\n        tblRow={tblRow}\n        tblHeader={<><th>Sigel</th><th>Werktitel</th><th>Bibliographie</th></>}\n        asideContent={asideContent}\n    />;\n}\n\nfunction Konkordanz(props){\n    const menuItems = [\n        [\"neuer Eintrag\", async(that)=>{\n            if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                const newId = await arachne.konkordanz.save({zettel_sigel: \"neuer Verweis\"});\n                that.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n            }\n        }]\n    ];\n    const tblRow=(props)=>{\n        return <><td title={\"ID: \"+props.cEl.id} dangerouslySetInnerHTML={parseHTML(props.cEl.zettel_sigel)}></td><td>{props.cEl.comment}</td><td>{props.cEl.opera_id&&<span>{props.cEl.opera} <i className=\"minorTxt\">(ID: {props.cEl.opera_id})</i></span>}</td></>;\n    };\n    const asideContent = [ // caption; type: t(ext-input), (text)a(rea), (auto)c(omplete); col names as array\n        {caption: \"Zettel-Sigel\", type: \"text\", col: \"zettel_sigel\"},\n        {caption: \"Verknüpftes Werk\", type: \"auto\", col: [\"sigel\", \"opera_id\"], search: {tbl: \"opera\", sCol: \"sigel\", rCol: \"sigel\"}},\n        {caption: \"Kommentar\", type: \"area\", col: \"comment\"},\n    ];\n    return <TableView\n        tblName=\"konkordanz\"\n        searchOptions={[[\"zettel_sigel\", \"Sigel\"], [\"id\", \"ID\"], [\"opera_id\", \"Werk-ID\"]]}\n        sortOptions={[['[\"id\"]', \"ID\"], ['[\"zettel_sigel\"]', \"Sigel\"]]}\n        menuItems={menuItems}\n        tblRow={tblRow}\n        tblHeader={<><th>Angabe auf Zettel</th><th>Bemerkung</th><th>Quelle</th></>}\n        asideContent={asideContent}\n    />;\n}\n\nfunction Etudaus(props){\n    const menuItems = [\n        [\"neuer Eintrag\", async(that)=>{\n            if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                const newId = await arachne.etudaus.save({zettel_sigel: \"neuer Verweis\"});\n                that.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n            }\n        }]\n    ];\n    const tblRow=(props)=>{\n        return <><td title={\"ID: \"+props.cEl.id} dangerouslySetInnerHTML={parseHTML(props.cEl.sigel)}></td><td dangerouslySetInnerHTML={parseHTML(props.cEl.werk)}></td><td>{props.cEl.opera_id}</td></>;\n    };\n    const asideContent = [ // caption; type: t(ext-input), (text)a(rea), (auto)c(omplete); col names as array\n        {caption: \"Sigel\", type: \"text\", col: \"sigel\"},\n        {caption: \"Werk\", type: \"area\", col: \"werk\"},\n    ];\n    return <TableView\n        tblName=\"etudaus\"\n        searchOptions={[[\"sigel\", \"Sigel\"], [\"id\", \"ID\"], [\"opera_id\", \"Werk-ID\"], [\"werk\", \"Quelle\"]]}\n        sortOptions={[['[\"id\"]', \"ID\"], ['[\"sigel\"]', \"Sigel\"]]}\n        menuItems={menuItems}\n        tblRow={tblRow}\n        tblHeader={<><th>Angabe auf Zettel</th><th>Werk</th><th>Quelle</th></>}\n        asideContent={asideContent}\n    />;\n}\n\nfunction DOMRessource(props){\n    const menuItems = [\n        [\"neuer Eintrag\", async(that)=>{\n            if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                const newId = await arachne.edition.save({editor: \"EditorIn\", year: 2022});\n                that.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n            }\n        }]\n    ];\n    const tblRow=(props)=>{\n        return <><td title={\"ID: \"+props.cEl.id}>{props.cEl.editor} {props.cEl.year}</td><td>{props.cEl.sigel} <small>(ID {props.cEl.opera_id})</small></td></>;\n    };\n    const asideContent = [ // caption; type: t(ext-input), (text)a(rea), (auto)c(omplete); col names as array\n        {caption: \"EditorIn\", type: \"text\", col: \"editor\"},\n        {caption: \"Jahr\", type: \"text\", col: \"year\"},\n        {caption: \"verknpft. Werk\", type: \"auto\", col: [\"sigel\", \"opera_id\"], search: {tbl: \"opera\", sCol: \"sigel\", rCol: \"sigel\"}},\n        {caption: <span>URL <small>(extern)</small></span>, type: \"text\", col: \"url\"},\n        {caption: <span>Pfad <small>(auf dem Server)</small></span>, type: \"text\", col: \"path\"},\n        {caption: \"Kommentar\", type: \"area\", col: \"comment\"},\n        {caption: \"Seiten-verhältnis\", type: \"text\", col: \"aspect_ratio\"},\n    ];\n    return <TableView\n        tblName=\"edition\"\n        searchOptions={[[\"editor\", \"EditorIn\"], [\"year\", \"Jahr\"]]}\n        sortOptions={[['[\"id\"]', \"ID\"]]}\n        menuItems={menuItems}\n        tblRow={tblRow}\n        tblHeader={<><th>Kürzel</th><th>verknpft. Werk</th></>}\n        asideContent={asideContent}\n    />;\n}\nexport {\n    arachneTbls,\n    LemmaRow, LemmaHeader, lemmaSearchItems, LemmaAsideContent,\n    zettelSearchItems, ZettelCard, zettelBatchOptions, BatchInputType, ZettelAddLemmaContent, ZettelSingleContent, newZettelObject, exportZettelObject, zettelPresetOptions, zettelSortOptions,\n    MainMenuContent,\n    DOMOpera, Konkordanz, Etudaus, DOMRessource\n}"],"names":["arachneTbls","LemmaHeader","width","LemmaRow","props","id","lemma","onDoubleClick","e","showDetail","parseInt","target","closest","title","dangerouslySetInnerHTML","parseHTML","lemma_display","onClick","localStorage","setItem","loadMain","style","color","farbe","comment","URL","href","rel","lemmaSearchItems","LemmaAsideContent","useState","item","setLemma","lemma_simple","setLemma_simple","nr","setNr","normgraphie","setNormgraphie","dom_normgraphie","setDom_normgraphie","verworfen","setVerworfen","unsicher","setUnsicher","setFarbe","setComment","reference_id","setReference_id","reference","setReference","useEffect","className","type","value","onChange","event","options","includes","tbl","col","resize","status","error","newLemmaValue","isNaN","arachne","onUpdate","marginLeft","variant","window","confirm","lemma_id","allZettel","zettelRemoveList","zettel","push","length","onClose","onReload","zettelSearchItems","ZettelCard","height","box","img_path","classList","in_use","alt","objectFit","borderRadius","src","float","overflow","maxHeight","maxWidth","zettel_sigel","txt","zettelBatchOptions","BatchInputType","batchType","setBatchValue","setBatchValueId","batchValue","searchCol","returnCol","ZettelAddLemmaContent","newLemma","setNewLemma","newLemmaDisplay","setNewLemmaDisplay","homonym","setHomonym","referenceId","setReferenceId","domNormgraphie","setDomNormgraphie","errorLemma","setErrorLemma","errorLemmaDisplay","setErrorLemmaDisplay","referenceColors","setLemmaObject","indexOf","setNewLemmaOK","ZettelSingleContent","ac_w","lemmaAc","setLemmaAc","lemmaId","setLemmaId","sigel","setSigel","konkordanz_id","sigelId","setSigelId","setTxt","sigelPreview","setSigelPreview","fetchData","select","operaId","opera_id","newSigelPreview","console","log","setZettelObject","xs","werk","newZettelObject","exportZettelObject","zettelPresetOptions","zettelSortOptions","MainMenuContent","DOMOpera","menuItems","that","newId","setState","newItemCreated","c","o","v","tblName","searchOptions","sortOptions","tblRow","cEl","bibgrau","bibvoll","bibzusatz","tblHeader","asideContent","caption","Konkordanz","opera","search","sCol","rCol","Etudaus","DOMRessource","editor","year"],"sourceRoot":""}