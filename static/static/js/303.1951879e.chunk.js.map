{"version":3,"file":"static/js/303.1951879e.chunk.js","mappings":"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","sources":["changelog.js","db/lemma.js","db/zettel.js","db/ressources.js","db/server.js","db/mainContent.js","db/indexbox.js","settings.js"],"sourcesContent":["import { Alert, Container } from \"react-bootstrap\";\nimport { arachne } from \"./arachne.js\";\nimport { useState } from \"react\";\n\nfunction  ChangeLog(){\n    arachne.changeLog = arachne.changeLog.sort((a,b)=>a.date<b.date);\n    arachne.changeLog = arachne.changeLog.filter(a=>(a.project===undefined||a.project===arachne.project));\n    const [displayAll, setDisplayAll] = useState(arachne.changeLog.length>5?false:true);\n    const formatDate = d=>{\n        const numToMonth = {\n            \"01\": \"Januar\",\n            \"02\": \"Februar\",\n            \"03\": \"März\",\n            \"04\": \"April\",\n            \"05\": \"Mai\",\n            \"06\": \"Juni\",\n            \"07\": \"Juli\",\n            \"08\": \"August\",\n            \"09\": \"September\",\n            \"10\": \"Oktober\",\n            \"11\": \"November\",\n            \"12\": \"Dezember\",\n        };\n        return `${d.substring(8,10)}. ${numToMonth[d.substring(5,7)]} ${d.substring(0,4)}`;\n    };\n    return <Container>\n        {arachne.changeLog.map((c,i)=>{if(displayAll||i<5){return <Alert key={i} variant={i===0?\"primary\":\"secondary\"}><Alert.Heading>{c.title}</Alert.Heading><i>{formatDate(c.date)}</i>{c.description}</Alert>}else{return null}})}\n        {displayAll?null:<Alert style={{cursor: \"pointer\", marginTop: \"100px\", textAlign: \"center\"}} variant=\"info\" onClick={()=>{setDisplayAll(true)}}>Alle Änderungen anzeigen.</Alert>}\n    </Container>;\n    \n}\n\nexport { ChangeLog };","import { Col, Table, Offcanvas, Navbar, Row, Container, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nlet LemmaRow;\nlet LemmaHeader;\nlet LemmaAsideContent;\nlet lemmaSearchItems;\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null, newItemCreated: null, lemmaSearchItems: [[\"id\", \"ID\"]]};\n        const loadModules = async () =>{\n            \n            ({ LemmaRow, LemmaHeader, lemmaSearchItems, LemmaAsideContent } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            this.setState({lemmaSearchItems: lemmaSearchItems()})\n        };\n        loadModules();\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            boxName=\"lemma\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            setupItems={this.state.newItemCreated}\n                            searchOptions={this.state.lemmaSearchItems}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Wort\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neues Wort\", async ()=>{\n                                        if(window.confirm(\"Soll ein neues Wort erstellt werden?\")){\n                                            const newId = await arachne.lemma.save({lemma_display:\"Neues Wort\", lemma:\"Neues Wort\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <LemmaBox\n                    loadMain={(e, res)=>{this.props.loadMain(e, res)}}\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<LemmaAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<LemmaRow key={cEl.id} lemma={cEl} loadMain={e=>{this.props.loadMain(e, \"zettel\");}} showDetail={(cId)=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === cId))}} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table striped width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><LemmaHeader /></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\n\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.item.id};\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>ID {this.props.item.id}</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body><LemmaAsideContent id={this.state.id} item={this.props.item} onUpdate={id=>{this.props.onUpdate(id);}} onClose={()=>{this.props.onClose()}} onReload={()=>{this.props.onReload()}} />\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({id: this.props.item.id});\n        }\n    }\n}\n\nexport { Lemma };","import { Form, Row, Col, Button, Navbar, Modal, Offcanvas, Container, Spinner, Accordion } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete, ToolKit, SearchHint, StatusButton, CommentBox } from \"./../elements.js\";\n\nlet zettelSearchItems;\nlet zettelBatchOptions;\nlet ZettelCard;\nlet BatchInputType;\nlet ZettelAddLemmaContent;\nlet ZettelSingleContent;\nlet newZettelObject;\nlet exportZettelObject;\nlet zettelPresetOptions;\nlet zettelSortOptions;\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {zettelSearchItems: [[\"id\", \"ID\"]],searchStatus: \"\", setupItems: null, showPreset: false, showDetail: true, count:0, selectionDetail:{ids:[], currentId:null, sortOptions: null, presetOptions: null}};\n\n        const loadModules = async () =>{    \n            ({ zettelSearchItems, ZettelCard, zettelBatchOptions, BatchInputType, ZettelAddLemmaContent, ZettelSingleContent, newZettelObject, exportZettelObject, zettelPresetOptions, zettelSortOptions } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            this.setState({zettelSearchItems: zettelSearchItems(), sortOptions: zettelSortOptions(), presetOptions: zettelPresetOptions()})\n        };\n        loadModules();\n    }\n    render(){\n        const menuItems = [\n            [\"Suchergebnisse exportieren\", async ()=>{\n                const exportPdf = await arachne.zettel.search(this.state.query, {select: exportZettelObject(), export:true, order:this.state.queryOrder});\n                window.open(exportPdf, \"_blank\");\n            }]\n        ];\n        if(arachne.access(\"z_edit\")){\n            menuItems.push([\"neuer Zettel erstellen\", async ()=>{\n                if(window.confirm(\"Soll ein neuer Zettel erstellt werden?\")){\n                    const newId = await arachne.zettel.save(newZettelObject());\n                    this.setState({setupItems: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                }\n            }]);\n        }\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            {this.state.sortOptions?<SearchBox\n                                boxName=\"zettel\"\n                                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                                setupItems={this.state.setupItems}\n                                searchOptions={this.state.zettelSearchItems}\n                                sortOptions={this.state.sortOptions}\n                                status={this.state.searchStatus}\n                                presetOptions={this.state.presetOptions}\n                            />:null}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            <ToolKit menuItems={menuItems} />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <ZettelBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    presetSelection={this.state.presetSelection}\n                    gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                    toggleShowDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}\n                    showDetail={this.state.showDetail}\n                />\n                {this.state.count==0?<SearchHint />:null}\n            </Container>\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({selectionDetail: {ids: []}})}} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} showDetail={this.state.showDetail} openNextItem={()=>{this.openNextItem()}} toggleShowDetail={()=>{this.setState({showDetail: !this.state.showDetail})}} />:\"\"}\n        </>;\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard showDetail={this.props.showDetail} testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.toggleShowDetail({selection: selection, item: element.props.item});}\n        else{this.props.toggleShowDetail({selection: selection, item: null});};\n    }\n}\nfunction ZettelAside(props){\n    const [mode, setMode] = useState(props.selection.ids.length===1?\"single\":\"batch\") // batch, single, lemma\n    const [lastMode, setLastMode]=useState(\"batch\") // mode activated when add lemma is closed.\n    const [nextAfterLemmaAdd, setNextAfterLemmaAdd]=useState(false);\n    const [content, setContent] = useState(null);\n    const [newLemma, setNewLemma] = useState(null);\n    const [newLemmaDisplay, setNewLemmaDisplay] = useState(null);\n    useEffect(()=>{setMode(props.selection.ids.length===1?\"single\":\"batch\")},[props.selection.ids]);\n    useEffect(()=>{\n        switch(mode){\n            case \"batch\":\n                setContent(<ZettelAsideBatch  openAddLemma={(l,ld)=>openAddLemma(l,ld)} saveBatch={async (t,v,i)=>{return await saveBatch(t,v,i)}} onUpdate={props.onUpdate} selection={props.selection} />);\n                break;\n            case \"single\":\n                setContent(<ZettelAsideSingle openAddLemma={(l, ld, n)=>openAddLemma(l, ld, n)} onClose={props.onClose} onReload={props.onReload} showDetail={props.showDetail} toggleShowDetail={()=>{props.toggleShowDetail()}} item={props.item} openNextItem={props.openNextItem} onUpdate={id=>{props.onUpdate(id)}} />);\n                break;\n            case \"lemma\":\n                setContent(<ZettelAddLemma saveAfterAddLemma={async(l,l_id)=>{return await saveAfterAddLemma(l,l_id)}} newLemma={newLemma} newLemmaDisplay={newLemma} closeAddLemma={()=>{setMode(lastMode)}} />);\n                break;\n            default:\n                setContent(null);\n        }\n    },[mode,props.item.id,props.showDetail]);\n    const saveBatch = async(batchType,batchValue,batchValueId)=>{\n        let newKey=null;\n        let newValue=null;\n        if(batchType===1&&batchValue!=\"\"&&batchValueId===null){\n            openAddLemma(batchValue, batchValue);\n            return {status: true};\n        } else if(zettelBatchOptions()[batchType-1][3]===true&&batchValueId!=null){\n            newKey=zettelBatchOptions()[batchType-1][2];\n            newValue=batchValueId;\n        } else if(zettelBatchOptions()[batchType-1][3]===false&&batchValue!=null&&batchValue!=\"\"){\n            newKey=zettelBatchOptions()[batchType-1][2];\n            newValue=batchValue;\n        } else {\n            return {status: false, error: \"Bitte tragen Sie einen gültigen Wert ein.\"};\n        }\n\n        let newValueLst = [];\n        for(const cId of props.selection.ids){\n            let newValueObj = {id: cId, user_id: arachne.me.id}\n            newValueObj[newKey] = newValue;\n            newValueLst.push(newValueObj);\n        }\n        await arachne.zettel.save(newValueLst);\n        props.onUpdate(props.selection.ids);\n        return {status: true};\n    }\n    const openAddLemma=(l, ld,next=false)=>{setLastMode(mode);setNewLemma(l);setNewLemmaDisplay(ld);setMode(\"lemma\");setNextAfterLemmaAdd(next)};\n    const saveAfterAddLemma=async(lemma,lemma_id)=>{\n        let re;\n        if(props.selection.ids.length===1){\n            await arachne.zettel.save({id: props.item.id, lemma_id: lemma_id})\n            if(nextAfterLemmaAdd){props.openNextItem()}\n        } else {\n            re=await saveBatch(1,lemma, lemma_id);\n        }\n        setMode(lastMode);\n        return re;\n    };\n    return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{if(mode!=\"lemma\"){props.onClose()}else{setMode(lastMode)}}}>{content}</Offcanvas>;\n}\nfunction ZettelAsideSingle(props){\n    const [ressourceLst, setRessourceLst]=useState([]);\n    const [lemma, setLemma]=useState(\"\");\n    const [zettelObject, setZettelObject]=useState({});\n    const [zettelObjectErr, setZettelObjectErr]=useState(null); // null=no err; {status: 1|2, msg: \"err txt\"}: 1 = prompt warning (\"ok\" means proceed saving data), 2 = error, dont save data\n    useEffect(()=>{\n        const fetchData=async()=>{\n            setRessourceLst(await arachne.edition.get({work_id: zettelObject.work_id}));\n        };\n        if(zettelObject.work_id>0){fetchData()}\n    },[zettelObject.work_id])\n    const saveDetail=async(next=false)=>{\n        if(zettelObjectErr&&zettelObjectErr.status===2){\n            return {status: -1, error: zettelObjectErr.msg};\n        }else if(zettelObjectErr===null||(zettelObjectErr.status===1&&window.confirm(zettelObjectErr.msg))){\n            // save data\n            let saveObj = zettelObject;\n            saveObj.user_id = arachne.me.id;\n            await arachne.zettel.save(saveObj)\n\n            if(saveObj.lemma_id===null&&lemma!==\"\"){\n                document.querySelector(\".onOpenSetFocus\").focus();\n                props.openAddLemma(lemma, lemma, next);\n            }else if(next){\n                document.querySelector(\".onOpenSetFocus\").focus();\n                props.openNextItem();\n            }else{\n                props.onUpdate([props.item.id]);\n            }\n            return {status: 1};\n        }else{\n            return {status: 0};\n        };\n    }\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>ID {props.item.id}</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <Accordion defaultActiveKey={0}>\n                <Accordion.Item eventKey={0}>\n                    <Accordion.Header>Übersicht</Accordion.Header>\n                    <Accordion.Body>\n                        <ZettelSingleContent setLemma={v=>{setLemma(v)}} setZettelObjectErr={err=>{setZettelObjectErr(err)}} setZettelObject={o=>{setZettelObject(o)}} item={props.item} />\n                        <Row className=\"mb-3 mt-4\">\n                            <Col>\n                                <StatusButton style={{marginRight: \"10px\"}} onClick={()=>{return saveDetail(true)}} value=\"speichern&weiter\" />\n                                <StatusButton onClick={()=>{return saveDetail()}} value=\"speichern\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col><Form>\n                                <Form.Check size=\"sm\" type=\"switch\" label={props.showDetail?\"Details ausblenden\":\"Details einblenden\"} checked={props.showDetail} onChange={props.toggleShowDetail} />\n                            </Form></Col>\n                        </Row>\n                    </Accordion.Body>\n                </Accordion.Item>\n                {ressourceLst.length>0&&<Accordion.Item eventKey={1}>\n                    <Accordion.Header>Ressourcen</Accordion.Header>\n                    <Accordion.Body>\n                        {ressourceLst.map(r=><div key={r.id}><a href={r.url===null||r.url===\"\"?`/site/argos/${r.id}`:r.url} target=\"_blank\" rel=\"noreferrer\">{r.label}</a></div>)}\n                    </Accordion.Body>\n                </Accordion.Item>}\n                {arachne.access(\"comment\")?<Accordion.Item eventKey={2}>\n                    <Accordion.Header>Kommentare</Accordion.Header>\n                    <Accordion.Body>\n                        <CommentBox tbl=\"zettel\" id={props.item.id} />\n                    </Accordion.Body>\n                </Accordion.Item>:null}\n                {arachne.access(\"admin\")&&<Accordion.Item eventKey={3}>\n                    <Accordion.Header>Zettel löschen</Accordion.Header>\n                    <Accordion.Body>\n                    <Button variant=\"danger\" onClick={async ()=>{\n                        if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                            await arachne.zettel.delete(props.item.id);\n                            props.onClose();\n                            props.onReload();\n                        }\n                    }}>Zettel löschen</Button>\n                    </Accordion.Body>\n                </Accordion.Item>}\n            </Accordion>\n        </Offcanvas.Body>\n    </>;\n}\nfunction ZettelAsideBatch(props){\n    const [batchType, setBatchType] = useState(1);\n    const [batchValue, setBatchValue] = useState(\"\");\n    const [batchValueId, setBatchValueId] = useState(null);\n    let batch_options = zettelBatchOptions();\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>{props.selection.ids.length} Zettel</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <Row className=\"mb-3\">\n                <Col>\n                    <SelectMenu style={{width: \"110px\"}} options={batch_options} onChange={event=>{setBatchValue(\"\");setBatchType(parseInt(event.target.value))}} />\n                </Col>\n                <Col><BatchInputType batchType={batchType} batchValue={batchValue} batchValueId={batchValueId} setBatchValue={v=>{setBatchValue(v)}} setBatchValueId={v=>{setBatchValueId(v)}} /></Col>\n            </Row>\n            <Row>\n                <Col><StatusButton value=\"für alle übernehmen\" onClick={async()=>{\n                    const re=await props.saveBatch(batchType,batchValue,batchValueId);\n                    setBatchValue(\"\");\n                    return re;\n                }} /></Col>\n            </Row>\n        </Offcanvas.Body>\n    </>;\n}\nfunction ZettelAddLemma(props){\n    const [lemmaObject, setLemmaObject]=useState({});\n    const [newLemmaOK, setNewLemmaOK]=useState(false); // ZettelAddLemmaContent checks validity of new lemma object and sets to newLemmaOK\n\n    return <>\n        <Offcanvas.Header closeButton><Offcanvas.Title>Soll ein neues Wort erstellt werden?</Offcanvas.Title></Offcanvas.Header>\n        <Offcanvas.Body>\n            <ZettelAddLemmaContent setNewLemmaOK={setNewLemmaOK} newLemma={props.newLemma} newLemmaDisplay={props.newLemmaDisplay} setLemmaObject={o=>{setLemmaObject(o)}} />\n            <Row>\n                <Col><StatusButton type=\"button\" value=\"neues Wort erstellen\" onClick={async()=>{\n                    if(newLemmaOK){\n                        const newId = await arachne.lemma.save(lemmaObject);\n                        return await props.saveAfterAddLemma(lemmaObject.lemma,newId);\n                    }else{\n                        return {status: false, error: \"Bitte füllen Sie alle Angaben korrekt aus!\"}\n                    }\n                }} /><Button variant=\"secondary\" style={{marginLeft: \"10px\"}} onClick={()=>{props.closeAddLemma()}}>abbrechen</Button></Col>\n            </Row>\n        </Offcanvas.Body>\n    </>;\n}\n\nexport { Zettel };","import { Row, Col, Button, Table, Navbar, Offcanvas, Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, Navigator, parseHTML, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nclass SekLit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"seklit\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"id\", \"ID\"]\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"e_edit\")&&<ToolKit menuItems={[\n                                    [\"neuer Eintrag\", async ()=>{\n                                        if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                                            const newId = await arachne.seklit.save({titel: \"neues Werk\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <SekLitBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<SekLitAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.seklit.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            this.setState({currentElements: [], item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.seklit.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.seklit.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.seklit.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass SekLitBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.kennziffer}</td><td>{cEl.signatur} {cEl.alte_signatur?`(${cEl.alte_signatur})`:null}</td><td>\n                    {cEl.name}, {cEl.vorname}, <b>{cEl.titel}</b>, {cEl.reihe}, {cEl.ort} {cEl.jahr}\n                    </td>\n                    <td>{cEl.weitere_angaben}{cEl.zusatz?\" - \"+cEl.zusatz:null}</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\" striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"10%\">Kennziffer</th><th width=\"10%\">Signatur</th><th width=\"60%\">Werkbezeichnung</th><th>weitere Angaben</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass SekLitAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            kennziffer: this.props.item.kennziffer,\n            signatur: this.props.item.signatur,\n            alte_signatur: this.props.item.alte_signatur,\n            name: this.props.item.name,\n            vorname: this.props.item.vorname,\n            titel: this.props.item.titel,\n            reihe: this.props.item.reihe,\n            weitere_angaben: this.props.item.weitere_angaben,\n            ort: this.props.item.ort,\n            jahr: this.props.item.jahr,\n            zusatz: this.props.item.zusatz,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n    <Offcanvas.Header closeButton>\n        <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n    </Offcanvas.Header>\n    <Offcanvas.Body>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Kennziffer:</Col>\n            <Col><input type=\"text\" value={this.state.kennziffer?this.state.kennziffer:\"\"} onChange={e=>{this.setState({kennziffer: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.signatur?this.state.signatur:\"\"} onChange={e=>{this.setState({signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>alte Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.alte_signatur?this.state.alte_signatur:\"\"} onChange={e=>{this.setState({alte_signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Name:</Col>\n            <Col><input type=\"text\" value={this.state.name?this.state.name:\"\"} onChange={e=>{this.setState({name: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Vorname:</Col>\n            <Col><input type=\"text\" value={this.state.vorname?this.state.vorname:\"\"} onChange={e=>{this.setState({vorname: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Titel:</Col>\n            <Col><input type=\"text\" value={this.state.titel?this.state.titel:\"\"} onChange={e=>{this.setState({titel: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Reihe:</Col>\n            <Col><input type=\"text\" value={this.state.reihe?this.state.reihe:\"\"} onChange={e=>{this.setState({reihe: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Ort:</Col>\n            <Col><input type=\"text\" value={this.state.ort?this.state.ort:\"\"} onChange={e=>{this.setState({ort: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Jahr:</Col>\n            <Col><input type=\"text\" value={this.state.jahr?this.state.jahr:\"\"} onChange={e=>{this.setState({jahr: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>weitere Angaben:</Col>\n            <Col><input type=\"text\" value={this.state.weitere_angaben?this.state.weitere_angaben:\"\"} onChange={e=>{this.setState({weitere_angaben: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Zusatz:</Col>\n            <Col><input type=\"text\" value={this.state.zusatz?this.state.zusatz:\"\"} onChange={e=>{this.setState({zusatz: e.target.value})}} /></Col>\n        </Row>\n        <Row>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            await arachne.seklit.save({\n                id: this.state.id,\n                kennziffer: this.state.kennziffer,\n                signatur: this.state.signature,\n                alte_signatur: this.state.alte_signatur,\n                name: this.state.name,\n                vorname: this.state.vorname,\n                titel: this.state.titel,\n                reihe: this.state.reihe,\n                weitere_angaben: this.state.weitere_angaben,\n                ort: this.state.ort,\n                jahr: this.state.jahr,\n                zusatz: this.state.zusatz,\n            });\n            this.props.onUpdate(this.state.id);\n            return {status: true};\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    if(window.confirm(\"Soll der Eintrag gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                        await arachne.seklit.delete(this.state.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>löschen</Button></Col>\n        </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                kennziffer: this.props.item.kennziffer,\n                signatur: this.props.item.signatur,\n                alte_signatur: this.props.item.alte_signatur,\n                name: this.props.item.name,\n                vorname: this.props.item.vorname,\n                titel: this.props.item.titel,\n                reihe: this.props.item.reihe,\n                weitere_angaben: this.props.item.weitere_angaben,\n                ort: this.props.item.ort,\n                jahr: this.props.item.jahr,\n                zusatz: this.props.item.zusatz,\n            });\n        }\n    }\n}\n\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null,\n            offset: 0,\n        };\n    }\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"ressources\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"ac_web\", \"Werk\"],\n                                [\"work_id\", \"Werk-ID\"],\n                                [\"ressource\", \"Ressource-Typ\"],\n                                [\"id\", \"ID\"],\n                                [\"path\", \"Dateipfad\"],\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neue Ressource\", async ()=>{\n                                        if(window.confirm(\"Soll eine neue Ressource erstellt werden?\")){\n                                            const newId = await arachne.edition.save({ressource: 0, editor: \"Neue Ressource\", year: new Date().getFullYear()});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <RessourceBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<RessourceAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:this.state.offset, order:this.state.queryOrder});\n            this.setState({currentElements: currentElements, item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                offset: ((newPage-1)*50),\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                let url = cEl.url;\n                if(url===\"\"||url===null){url = \"/site/viewer/\"+cEl.id}\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a href={url} target=\"_blank\">öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\"striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"20%\">Kürzel</th><th width=\"20%\">Typ</th><th>vrkn. Werk</th><th width=\"10%\">Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            vol_cont: this.props.item.vol_cont,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature,\n            comment: this.props.item.comment,\n            path: this.props.item.path,\n            url: this.props.item.url,\n            aspect_ratio: this.props.item.aspect_ratio,\n            bibliography_preview: null,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Werk:</Col>\n                <Col><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id});this.updateBibliography(id)}} /></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Alter Dateiname:</Col>\n                <Col>{this.props.item.dir_name}</Col>\n            </Row>\n            {this.state.bibliography_preview&&<Row className=\"mb-4\">\n                <Col xs={3}>Biblio-graphische Angaben:</Col>\n                <Col style={{fontSize: \"90%\", backgroundColor: \"var(--bs-gray-100\"}}>{this.state.bibliography_preview}</Col>\n            </Row>}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Ressource:</Col>\n                <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource?this.state.ressource:\"\"} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></Col>\n            </Row>\n            {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n                <Row key=\"0\" className=\"mb-2\">\n                    <Col xs={3}>Editor:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"1\" className=\"mb-2\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"2\" className=\"mb-2\">\n                    <Col xs={3}>Band:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.volume?this.state.volume:\"\"} onChange={e=>{this.setState({volume: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"3\" className=\"mb-2\">\n                    <Col xs={3}>Bandinhalt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.vol_cont?this.state.vol_cont:\"\"} onChange={e=>{this.setState({vol_cont: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"4\" className=\"mb-4\">\n                    <Col xs={3}>Reihe:</Col>\n                    <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie?this.state.serie:\"\"} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===2?[\n                <Row key=\"5\" className=\"mb-2\">\n                    <Col xs={3}>Stadt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"6\" className=\"mb-2\">\n                    <Col xs={3}>Bibliothek:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.library?this.state.library:\"\"} onChange={e=>{this.setState({library: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"7\" className=\"mb-4\">\n                    <Col xs={3}>Signatur:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.signature?this.state.signature:\"\"} onChange={e=>{this.setState({signature: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===3||this.state.ressource===4?[\n                <Row key=\"8\" className=\"mb-2\">\n                    <Col xs={3}>Drucker:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"9\" className=\"mb-2\">\n                    <Col xs={3}>Ort:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"10\" className=\"mb-4\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Kommentar:</Col>\n                <Col><textarea style={{width: \"267px\", height: \"100px\"}} value={this.state.comment?this.state.comment:\"\"} onChange={e=>{this.setState({comment: e.target.value})}}></textarea></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Dateipfad:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.path?this.state.path:\"\"} onChange={e=>{this.setState({path: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n                <Col xs={3}>Link:<br /><small>(externe Quellen)</small></Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.url?this.state.url:\"\"} onChange={e=>{this.setState({url: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n            <Col xs={3}>Seiten-verhältnis:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.aspect_ratio?this.state.aspect_ratio:\"\"} onChange={e=>{this.setState({aspect_ratio: e.target.value.substring(0,5)})}} /></Col>\n        </Row>\n            <Row className=\"mb-2\">\n                <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            if((this.state.ressource===0||this.state.ressource===1||this.state.ressource===5)&&!this.state.serie&&(!this.state.editor||!this.state.year)){\n                return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n            } else {\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work_id,\n                    ressource: this.state.ressource,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.vol_cont,\n                    serie: this.state.serie,\n                    comment: this.state.comment,\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature,\n                    path: this.state.path,\n                    url: this.state.url,\n                    aspect_ratio: this.state.aspect_ratio,\n                });\n                this.props.onUpdate(this.state.id);\n                return {status: true};\n            }\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"20px\"}} onClick={async ()=>{\n            if(window.confirm(\"Soll die Ressource wirklich gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                await arachne.edition.delete(this.state.id);\n                this.props.onUpdate(null);\n                this.props.onReload();\n            }\n        }}>löschen</Button></Col>\n            </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidMount(){\n        this.updateBibliography(this.props.item.work_id);\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.updateBibliography(this.props.item.work_id);\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                vol_cont: this.props.item.vol_cont,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature,\n                comment: this.props.item.comment,\n                path: this.props.item.path,\n                url: this.props.item.url,\n                aspect_ratio: this.props.item.aspect_ratio,\n            });\n        }\n    }\n    async updateBibliography(work_id){\n        if(work_id>0){\n            let bibliography = await arachne.work.get({id: work_id}, {select: [\"bibliography\"]});\n            if(bibliography.length > 0){\n                this.setState({bibliography_preview: bibliography[0].bibliography});\n            } else {\n                this.setState({bibliography_preview: null});\n            }\n        }\n    }\n}\n\nexport { Ressource, SekLit };","import { Alert, Button, Row, Col, Offcanvas, Table, Form, Navbar, Container, Tabs, Tab } from \"react-bootstrap\";\nimport React from \"react\";\nimport 'chart.js/auto';\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, SelectMenu, ToolKit, StatusButton, sleep, sqlDate } from \"./../elements.js\";\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // process\n            const zettel_process_data = {\n                labels: [\"abgeschlossen\", \"nur Lemma\", \"unbearbeitet\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_process,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            \n            zettelCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltype\n            const zettel_types_data = {\n                labels: [\"verzetteltes Material\", \"Exzerpt\", \"Index\", \"Literatur\", \"Index (unkl. Werk)\", \"Notiz\", \"kein Typ\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_types,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3', '#EFEFEF', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2', '#EEEEEE', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // created in years\n            const zettel_created_data = {\n                labels: [\"2020\", \"2021\", \"2022\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>nach Jahren</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_data} /></div>);\n\n            // created in current year\n            let zettel_current_year_labels = [\"Jan.\", \"Feb.\", \"Mär.\", \"Apr.\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Okt.\", \"Nov.\", \"Dez.\"];\n            zettel_current_year_labels.splice((new Date()).getMonth()+1)\n            const zettel_created_current_data = {\n                labels: zettel_current_year_labels,\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed_current,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created_current,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>in diesem Jahr</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_current_data} /></div>);\n            \n            zettelBox = <div>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_letters,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false, position: \"bottom\"}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (in MLW)\n            const lemma_mlw_data = {\n                labels: [\"relevant\", \"nicht relevant\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_mlw,\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Relevanz fürs Wörterbuch</h4><Pie options={{plugins: {legend:{display: true, position: \"bottom\"}}}} data={lemma_mlw_data} /></div>);\n\n            lemmaBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            const ressource_work_data = {\n                labels: [\"mit Volltext und pdf\", \"nur mit pdf\", \"ohne pdf und Volltext\", \"nicht in Benutzung\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.ressource_work,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>Werke nach Volltext und pdfs</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_work_data} /></div>);\n\n            ressourceBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{ressourceCharts}</div>;\n        }\n        return <>\n        <Navbar fixed=\"bottom\" bg=\"light\">\n            <Container fluid>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                [\"Statistik aktualisieren\", async ()=>{\n                                    if(window.confirm(\"Sollen die Statistik aktualisiert werden? Dieser Prozess dauert ca. 30 Sekunden.\")){\n                                        const reStatus = await arachne.exec(\"statistics_update\");\n                                        if(reStatus===200){\n                                            this.getNumbers();\n                                            return {status: true};\n                                        }else{\n                                            return {status: false, error: \"Die Aktualisierung war nicht erfolgreich.\"};\n                                        }\n                                    }\n                                }]\n                            ]} />}\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        <Container className=\"mainBody\">\n            <Tabs defaultActiveKey=\"lemma\" className=\"mb-3\">\n                <Tab eventKey=\"lemma\" title=\"Lemma\">{lemmaBox}</Tab>\n                <Tab eventKey=\"zettel\" title=\"Zettel\">{zettelBox}</Tab>\n                <Tab eventKey=\"ressource\" title=\"Werke und Ressourcen\">{ressourceBox}</Tab>\n            </Tabs>\n            <div style={{float: \"right\", color: \"var(--bs-gray-400\"}}>{this.state.last_updated}</div>\n        </Container>\n    </>;\n    }\n    componentDidMount(){this.getNumbers()}\n    async getNumbers(){\n        const numbers = await arachne.statistics.getAll();\n        this.setState({\n            last_updated: JSON.parse(numbers.find(i => i.name === \"last_updated\").data),\n            zettel_process: JSON.parse(numbers.find(i => i.name === \"zettel_process\").data),\n            zettel_types: JSON.parse(numbers.find(i => i.name === \"zettel_type\").data),\n            zettel_created: JSON.parse(numbers.find(i => i.name === \"zettel_created\").data),\n            zettel_changed: JSON.parse(numbers.find(i => i.name === \"zettel_changed\").data),\n            zettel_created_current: JSON.parse(numbers.find(i => i.name === \"zettel_created_current\").data),\n            zettel_changed_current: JSON.parse(numbers.find(i => i.name === \"zettel_changed_current\").data),\n            lemma_letters: JSON.parse(numbers.find(i => i.name === \"lemma_letter\").data),\n            lemma_mlw: JSON.parse(numbers.find(i => i.name === \"lemma_mlw\").data),\n            ressource_work: JSON.parse(numbers.find(i => i.name === \"ressource_work\").data)\n        });\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            ocrJobs: [],\n            faszikelJobs: [],\n            users: []\n        };\n    }\n    render(){\n        let defaultActive = \"\";\n        if(arachne.access(\"ocr_jobs\")){defaultActive = \"o\"}\n        else if(arachne.access(\"faszikel\")){defaultActive = \"d\"}\n        else if(arachne.access(\"admin\")){defaultActive = \"a\"}\n        return <><Container className=\"mainBody\">\n        <Tabs defaultActiveKey={defaultActive} className=\"mb-5\">\n            {arachne.access(\"ocr_jobs\")&&<Tab eventKey=\"o\" title=\"ocr-Aufträge\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zur ocr-Erkennung.</Col>\n                </Row>\n                <Row><Col>\n                    <StatusButton value=\"neuer Zettel-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job\");\n                        if(re===200){\n                            await sleep(500);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                    <StatusButton style={{float: \"right\"}} value=\"neuer Scan-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job_scans\");\n                        if(re===200){\n                            await sleep(500);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                </Col></Row>\n                <Row><Col>\n                    <Table striped width=\"100%\">\n                        <thead>\n                            <tr>\n                                <th>Datum</th>\n                                <th>Objekte</th>\n                                <th>Status</th>\n                                <th>Gesamtauftrag</th>\n                                <th>bearbeitet</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.ocrJobs.map(row=>{\n                                let status=<td className=\"text-primary\">aktiv</td>;\n                                if(row.finished===1){status=<td className=\"text-secondary\">beendet</td>}\n                                else if(new Date()-sqlDate(row.u_date)>1800000){status=<td className=\"text-warning\">inaktiv</td>}\n                                return <tr key={row.id}><td>{row.c_date.substring(0, 10)}</td><td>{row.source}</td>{status}<td>{row.total}</td><td>{Math.round(1000/row.total*row.count)/10}%</td></tr>})}\n                        </tbody>\n                    </Table>\n                </Col></Row>\n            </Tab>}\n            {arachne.access(\"faszikel\")&&<Tab eventKey=\"d\" title=\"Druckausgabe\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zum Erstellen der Druckausgabe.</Col>\n                </Row>\n                <Row><Col>\n                <Table striped width=\"100%\">\n                        <tbody>{this.state.faszikelJobs.map(faszikel => {\n                            if(faszikel.log){\n                                let dateArray = faszikel.date.split(\"\")\n                                dateArray[10] = \" \";\n                                dateArray[13] = \":\";\n                                dateArray[16] = \":\";\n                                let createdDate = dateArray.join(\"\").substring(0, 19);\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>{faszikel.name?faszikel.name.substring(0, faszikel.name.length-4):<i>Eintrag</i>}</b><br /><i className=\"minorTxt\">{createdDate}</i></td><td>{faszikel.name?<a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/${faszikel.name}`}>pdf</a>:null}</td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/zip`}>Artikel</a></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/log`}>log-Datei</a></td></tr>;\n                            } else {\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>Neuer Auftrag in Bearbeitung</b></td><td></td><td></td></tr>;\n                            }\n                        })}</tbody>\n                </Table>\n                </Col></Row>\n            </Tab>}\n            {arachne.access(\"admin\")&&<Tab eventKey=\"a\" title=\"Kontenverwaltung\" style={{padding: \"0 20%\"}}>\n                <Table striped width=\"100%\">\n                        <thead style={{textAlign:\"left\"}}><tr><th width=\"25%\">Name</th><th width=\"30%\">Rechte</th><th width=\"35%\">Browser</th><th width=\"10%\">Aktiv</th></tr></thead>\n                        <tbody>\n                            {this.state.users.map(u=>{return <tr key={u.id}>\n                            <td><a className=\"text-dark\" onClick={()=>{this.setState({item: u})}}>{u.first_name} {u.last_name}</a></td>\n                            <td>{JSON.parse(u.access).join(\", \")}</td>\n                            <td>{u.agent}</td>\n                            <td>{u.session_last_active&&new Date()-sqlDate(u.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td>\n                        </tr>})}\n                        </tbody>\n                </Table>\n            </Tab>}\n        </Tabs></Container>\n        {this.state.item&&<ServerAside onReload={()=>{this.loadUsers()}} onClose={()=>{this.setState({item: null})}} item={this.state.item} onUpdate={ids=>{}} />}\n        </>;\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){this.loadUsers()}\n        if(arachne.access(\"ocr_jobs\")){this.loadOcrJobs()}\n        if(arachne.access(\"faszikel\")){this.loadFaszikelJobs()}\n    }\n    async loadFaszikelJobs(){\n        this.setState({faszikelJobs: []});\n        const allFaszikelJobs = await arachne.exec(\"get_faszikel_jobs\", true);\n        //allFaszikelJobs.sort((a,b)=>a.date<b.date);\n        this.setState({faszikelJobs: allFaszikelJobs/*.splice(0,100)*/});\n    }\n    async loadOcrJobs(){\n        this.setState({ocrJobs: []});\n        const newOcrJobs = await arachne.ocr_jobs.getAll();\n        this.setState({ocrJobs: newOcrJobs});\n    }\n    async loadUsers(){\n        this.setState({users: []});\n        const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n        this.setState({users: newUsers});\n    }\n}\nclass ServerAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {access: JSON.parse(this.props.item.access)};\n    }\n    render(){\n        const rights = {\n            \"auth\": \"Profil aktiviert\",\n            \"admin\": \"Adminrechte\",\n            \"o_view\": \"Kommentarspalte (opera-Listen)\",\n            \"o_edit\": \"opera-Listen bearbeiten\",\n            \"z_add\": \"Zettel importieren\",\n            \"z_edit\": \"Zettel bearbeiten\",\n            \"l_edit\": \"Lemma-Liste bearbeiten\",\n            \"library\": \"Zugriff auf Bibliothek\",\n            \"e_edit\": \"Bibliothek bearbeiten\",\n            \"setup\": \"Zugriff auf Datenbanksetup\",\n            \"module\": \"Zugriff über Python-Modul\",\n            \"editor\": \"Zugriff auf Lemmastrecken-Editor\",\n            \"comment\": \"Zugriff auf Kommentarfunktion\",\n            \"comment_moderator\": \"Kommentare moderieren\",\n            \"faszikel\": \"Faszikel konvertieren\",\n            \"ocr_jobs\": \"OCR-Aufträge aufgeben\",\n        };\n        let rightList = [];\n        for(const [right, description] of Object.entries(rights)){\n            let marked = \"\";\n            if(this.state.access.includes(right)){marked = \"accessMarked\"}\n            rightList.push(<div key={right} style={{cursor: \"pointer\"}} className={marked} onClick={()=>{\n                let nAccess = this.state.access;\n                if(nAccess.includes(right)){\n                    nAccess = nAccess.map(i => {if(i!=right){return i}});\n                } else {\n                    nAccess.push(right);\n                }\n                this.setState({access: nAccess});\n            }}>{description}</div>);\n        }\n\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>{this.props.item.first_name} {this.props.item.last_name} (ID {this.props.item.id})</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Container>\n                <Row className=\"mb-1\">\n                    <Col>Am {this.props.item.session_last_active} zuletzt online.</Col>\n                </Row>\n                <Row className=\"mb-3\">\n                    <Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{this.props.item.agent}</Col>\n                </Row>\n                <Row><Col><h4>Rechte</h4></Col></Row>\n                <Row className=\"mb-3\"><Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{rightList}</Col></Row>\n                <Row><Col><StatusButton value=\"speichern\" onClick={()=>{\n                    arachne.user.save({\n                        id: this.props.item.id,\n                        access: JSON.stringify(this.state.access)\n                    })\n                    this.props.onReload();\n                    return {status: true};\n                }} />\n                </Col><Col><Button variant=\"danger\" onClick={async ()=>{\n                    if(window.confirm(\"Soll der Account wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                        await arachne.user.delete(this.props.item.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>Account löschen</Button></Col></Row>\n            </Container>\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.id!=this.props.item.id){\n            this.setState({access: JSON.parse(this.props.item.access)});\n        }\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            pathLst: [],\n            scanWork: \"\",\n            scanWorkId: null,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: \"\",\n            ocrRessourceId: null,\n            ocrFiles: null,\n            zettelLetter: \"A\",\n            zettelType: 0,\n            zettelFiles: null,\n            zettelEditors: [[arachne.me.id, arachne.me.last_name]],\n            zettelEditorSelected: arachne.me.id,\n            zettelSuccess: null,\n        };\n    }\n    render(){\n        return <Container className=\"mainBody\">\n            <Tabs defaultActiveKey=\"r\" className=\"mb-5\">\n                <Tab eventKey=\"r\" title=\"Ressource\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Werk:</Col>\n                        <Col><AutoComplete  style={{width: \"100%\"}} value={this.state.scanWork} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{\n                                this.setState({scanWork: value, scanWorkId: id})\n                            }} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>Ressource:</Col>\n                        <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></Col>\n                    </Row>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <Row key=\"0\" className=\"mb-2\">\n                            <Col xs={3}>Editor:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"1\" className=\"mb-2\">\n                            <Col xs={3}>Jahr:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"2\" className=\"mb-2\">\n                            <Col xs={3}>Band:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"3\" className=\"mb-2\">\n                            <Col xs={3}>Bandinhalt:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"4\" className=\"mb-4\">\n                            <Col xs={3}>Reihe:</Col>\n                            <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <Row key=\"5\" className=\"mb-2\">\n                            <Col xs={3}>Stadt:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"6\" className=\"mb-2\">\n                            <Col xs={3}>Bibliothek:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"7\" className=\"mb-4\">\n                            <Col xs={3}>Signatur:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <Row key=\"8\" className=\"mb-2\">\n                            <Col xs={3}>Drucker:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"9\" className=\"mb-2\">\n                            <Col xs={3}>Ort:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"10\" className=\"mb-4\">\n                            <Col xs={3}>Jahr:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Dateipfad:</Col>\n                        <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>.png-Dateien:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"image/png\" onChange={e=>{this.setState({scanFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col><StatusButton value=\"hochladen\" onClick={async ()=>{\n                    if(this.state.scanFiles==null){\n                        return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n                    } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                        return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n                    } else if(this.state.scanWorkId === null){\n                        return {status: false, error: \"Kein gültiges Werk ausgewählt!\"};\n                    } else if(this.state.scanPath&&this.state.scanWorkId){\n                        // create new edition\n                        let nPath = this.state.scanPath;\n                        if(nPath.substring(0,1)!=\"/\"){nPath = \"/\"+nPath}\n                        if(nPath.substring(nPath.length-1)!=\"/\"){nPath = nPath+\"/\"}\n                        const newEditionId = await arachne.edition.save({\n                            work_id: this.state.scanWorkId,\n                            ressource: this.state.scanType,\n                            editor: this.state.scanEditor,\n                            year: this.state.scanYear,\n                            volume: this.state.scanVolume,\n                            vol_cont: this.state.scanVolumeContent,\n                            serie: this.state.scanSerie,\n                            location: this.state.scanLocation,\n                            library: this.state.scanLibrary,\n                            signature: this.state.scanSignature,\n                            path: nPath,\n                            url: \"\",\n                        });\n                        // upload files\n                        if(newEditionId>0){\n                            let uploadForm = new FormData();\n                            uploadForm.append(\"edition_id\", newEditionId);\n                            uploadForm.append(\"path\", this.state.scanPath);\n                            const fLength = this.state.scanFiles.length;\n                            for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                            const re = await arachne.importScans(uploadForm);\n                            if(re.status===400){return {status: false, error: `Fehler beim Hochladen der Dateien. Eine neue Ressource mit ID ${newEditionId} wurde aber bereits erstellt.`};}\n                            else if(re.body.length==1){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                            else if(re.body.length>0){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                            else{return {status: true, success: `Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                        } else {\n                            return {status: false, error: \"Edition konnte nicht erstellt werden. Keine Bilder wurden hochgeladen.\"};\n                        }\n                    } else{return {status: false, error: \"Geben Sie einen gültigen Pfad ein!\"};}                    \n                }} /></Col>\n                    </Row>\n                </Tab>\n                <Tab eventKey=\"o\" title=\"ocr-Dateien\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Ressource:</Col>\n                        <Col><AutoComplete  style={{width: \"100%\"}} value={this.state.ocrRessource} tbl=\"scan_paths\" searchCol=\"path\" returnCol=\"path\" onChange={async (value, id)=>{\n                                this.setState({ocrRessource: value, ocrRessourceId: id})\n                            }} />{/*const paths = await arachne.scan_paths.getAll({select: [\"path\"], order: [\"path\"]}); ||||||| <SelectMenu options={this.state.pathLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} />*/}</Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>.txt-Dateien:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"text/plain\" onChange={e=>{this.setState({ocrFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col><StatusButton type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n                        }else if(this.state.ocrRessourceId==null){\n                            return {status: false, error: \"Wählen Sie einen Ordner aus.\"};\n                        }else{\n                            const scanLst = await arachne.scan.get({path: this.state.ocrRessource}, {select: [\"id\", \"filename\"]});\n                            //console.log(scanLst);\n                            let missLst = [];\n                            let saveLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    //console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    saveLst.push({id: cScan.id, full_text: fileTxt});\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(saveLst.length>0){await arachne.scan.save(saveLst)}\n                            if(missLst.length>1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`};}\n                            else if(missLst.length==1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\"};}\n                            else{return {status: true};}\n                        }\n                    }} /></Col>\n                    </Row>\n                </Tab>\n                <Tab eventKey=\"z\" title=\"Zettel\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Buchstabe:</Col>\n                        <Col><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I/J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U/V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>erstellt von:</Col>\n                        <Col><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Zettel-Typ:</Col>\n                        <Col><SelectMenu options={[[0, \"Index-/Exzerpt-Zettel\"], [1, \"verzetteltes Material\"], [4, \"Literatur\"]]} onChange={e=>{this.setState({zettelType: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>Bilder:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"image/jpeg\" onChange={e=>{this.setState({zettelFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}></Col>\n                        <Col><StatusButton value=\"Zettel hochladen\" onClick={async ()=>{\n                            if(this.state.zettelFiles==null){\n                                return {status: false, error: \"Wählen Sie Bilder zum Hochladen aus.\"};\n                            } else if(this.state.zettelFiles.length%2 != 0){\n                                return {status: false, error: \"Wählen Sie eine gerade Anzahl Bilder aus (jeweils Vorder- und Rückseiten!).\"}\n                            }else{\n                                const maxItem= 100;\n                                let cItemCount = maxItem;\n                                let cUploadIndex = -1;\n                                let uploadGroup = [];\n                                let zettelFiles = this.state.zettelFiles;\n                                //console.log(zettelFiles);\n                                // sort imgs\n                                zettelFiles = Array.from(zettelFiles);\n                                zettelFiles.sort((a, b) => {if(b.name < a.name){return 1;}else{return -1;}});\n                                //console.log(zettelFiles);\n\n                                // prepare upload groups\n                                for(let i=0; i<zettelFiles.length; i++){\n                                    if(cItemCount >= maxItem){\n                                        cItemCount = 0;\n                                        cUploadIndex ++;\n                                        uploadGroup.push(new FormData());\n                                        uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                        uploadGroup[cUploadIndex].append(\"type\", this.state.zettelType);\n                                        uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                    }\n                                    cItemCount ++;\n                                    uploadGroup[cUploadIndex].append(\"files\", zettelFiles[i]);\n                                }\n                                // loop through groups and upload!\n                                let firstId = 0;\n                                let lastId = 0;\n                                for(const uItem of uploadGroup){\n                                    const r = await arachne.importZettel(uItem);\n                                    if(firstId === 0){firstId=r[0]}\n                                    lastId = r[1];\n                                }\n                                this.setState({zettelSuccess: [firstId, lastId]});\n                                return {status: true};\n                            }\n                        }} /></Col>\n                    </Row>\n                    {this.state.zettelSuccess&&<Row>\n                        <Col><Alert variant=\"success\" onClose={()=>{this.setState({zettelSuccess: null})}} dismissible>\n                            <Alert.Heading>Hochladen erfolgreich!</Alert.Heading><p>Die neuen Zettel haben IDs zwischen <b>{this.state.zettelSuccess[0]}</b> und <b>{this.state.zettelSuccess[1]}</b>. Möchten Sie die neuen Zettel in Zettel-Datenbank <Alert.Link href=\"#\" onClick={e=>{\n                    localStorage.setItem(\"searchBox_zettel\", `[[{\"id\":0,\"c\":\"id\",\"o\":\">=\",\"v\":${this.state.zettelSuccess[0]}},{\"id\":1,\"c\":\"id\",\"o\":\"<=\",\"v\":${this.state.zettelSuccess[1]}}],1,[\"id\"]]`);\n                    this.props.loadMain(e, \"zettel\");\n                }}>öffnen</Alert.Link>?</p></Alert></Col>\n                    </Row>}\n                <Row className=\"mt-4\"><Col>Eine Anleitung zum Hochladen der Zettel finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/09-HiwiHow:-Zettel-scannen-und-hochladen\">hier</a>.</Col></Row>\n                </Tab>\n            </Tabs>\n        </Container>;\n    }\n    componentDidMount(){\n        /*\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const paths = await arachne.scan_paths.getAll({select: [\"path\"], order: [\"path\"]});\n            let newPathLst = [];\n            for(const path of paths){\n                newPathLst.push([path.path, path.path]);\n            }\n            this.setState({pathLst: newPathLst, ocrRessource: newPathLst[0][0]});\n\n        }\n        loadOptions();\n        */\n\n        if(arachne.access(\"admin\")){\n            arachne.user.getAll({order: [\"last_name\"]}).then(users=>{\n                let userLst = [];\n                for(const user of users){\n                    userLst.push([user.id, user.last_name]);\n                }\n                this.setState({zettelEditors: userLst});\n            }).catch(e=>{throw e});\n        }\n    }\n}\n\nexport { Import, Server, Statistics };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faSearch, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { Container, Navbar, Nav, NavDropdown, Alert } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\nimport { ChangeLog } from \"./../changelog.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./../content/mlw_opera.js\";\nimport { DOMOpera, Konkordanz, Etudaus, DOMRessource } from \"./../content/dom.js\";\nimport { Ressource, SekLit } from \"./ressources.js\";\nimport { Account } from \"./../settings.js\";\nimport { Import, Server, Statistics } from \"./server.js\"\nimport { Zettel } from \"./zettel.js\";\nimport { IndexBox } from \"./indexbox.js\";\nimport { arachne } from \"./../arachne.js\";\nlet MainMenuContent;\n\nfunction MainBody(props){\n    arachne.changeLog = dbChangeLog;\n    let main = {\n        null: <ChangeLog />,\n        \"ressources\": <Ressource />, // mlw\n        \"stats\": <Statistics />,\n        \"server\": <Server />,\n        \"lemma\": <Lemma PROJECT_NAME={props.PROJECT_NAME} loadMain={(e,res)=>{props.loadMain(e, res)}} />,\n        \"import\": <Import loadMain={(e,res)=>{props.loadMain(e, res)}} />,\n        \"zettel\": <Zettel PROJECT_NAME={props.PROJECT_NAME}  />,\n        \"indexbox\": <IndexBox />,\n        \"account\": <Account />,\n        \"seklit\": <SekLit />, // mlw\n        \"maiora\": <Opera listName=\"opera_maiora\" />, // mlw\n        \"minora\": <Opera listName=\"opera_minora\" />, // mlw\n        \"konkordanz\": <Konkordanz />, // dom\n        \"quellenverzeichnis\": <DOMOpera />, // dom\n        \"etudaus\": <Etudaus />, // dom\n        \"domressource\": <DOMRessource />, // dom\n        }\n    if(props===null||props.res===null||Object.keys(main).includes(props?props.res:null)){return main[props?props.res:null]}\n    else{return <div className=\"text-danger\" style={{textAlign: \"center\", marginTop: \"100px\"}}>Unbekannter Menü-Punkt '{props.res}'.</div>}\n}\n\nfunction MainNavBar(props){\n    const [mainMenuContentLoaded, setMainMenuContentLoaded] = useState(false);\n    useEffect(()=>{\n        const loadModules = async () =>{\n            ({ MainMenuContent } = await import(`./../content/${props.PROJECT_NAME}.js`));\n            setMainMenuContentLoaded(true);\n        };\n        loadModules();\n    }, []);\n    let dbName = \"Datenbank\"\n    switch(props.PROJECT_NAME){\n        case \"mlw\":\n            dbName = \"dMLW\";\n            break;\n        case \"dom\":\n            dbName = \"dDOM\";\n            break;\n        default:\n            dbName = \"Datenbank\";\n    }\n    return <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Container fluid>\n            <Navbar.Brand style={{cursor: \"pointer\"}} onClick={e=>{props.loadMain(e, null)}}>{dbName}</Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Nav>\n                    <NavDropdown title=\"Zettel- und Wortmaterial\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"zettel\")}}>Zettel-Datenbank</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"lemma\")}}>Wortliste</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Verzeichnisse\">\n                        {mainMenuContentLoaded?<MainMenuContent loadMain={(...params)=>{props.loadMain(...params)}} />:null}\n                    </NavDropdown>\n                    <NavDropdown title=\"Einstellungen\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"account\")}}>Konto</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"server\")}}>Server</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"import\")}}>Import</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"stats\")}}>Statistik</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link>\n                    <FontAwesomeIcon icon={faSignOutAlt} onClick={e => {props.loadMain(e, \"logout\")}} title=\"abmelden\" />\n                </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n</Navbar>;\n}\n\nconst dbChangeLog = [\n    {\n        project: \"dom\",\n        title: \"dDOM Update\",\n        date: \"2022-06-03\",\n        description: <><p>Neue Version ist online!</p></>\n    },\n    {\n        title: \"Beta 12.10\",\n        date: \"2022-05-04\",\n        description: <><p>Zettel können nun aus der Zettel-Datenbank als pdf exportiert werden. Benutzen Sie das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> in der Zettel-Datenbank (rechts unten) und wählen Sie \"Suchergebnisse exportieren\" aus.</p></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.9\",\n        date: \"2022-04-29\",\n        description: <><p>Kleine Verbesserung in der Darstellung der <i>opera</i>-Listen.</p></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.8\",\n        date: \"2022-04-14\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Ressourcen: \"Autor/Jahr-Angabe\"-Fehler bei Angabe der Serie behoben.</li>\n            <li>Ressourcen: Bandinhalt-Fehler behoben.</li>\n            <li>Ressourcen: Seitenverhältnis der Bilder kann verändert werden.</li>\n        </ul>\n        <p>Einige Fehler in den Ressourcen wurden behoben. Ins System aufgenommen <i>(falls Ressourcen zu diesen Bänden in den opera-Listen fehlen, schreiben Sie unbedingt ein Ticket!)</i>:</p>\n        <ul>\n            <li>MGH Poet. I</li>\n            <li>MGH Poet. IV (Winterfeld)</li>\n        </ul></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.7\",\n        date: \"2022-02-26\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Änderungen beim Zettel-Upload: Buchstaben U/V und I/J wurden zusammengefasst.</li>\n            <li>Korrekturen bei der Zitiertitel-Suche der opera-Listen.</li>\n            <li>Korrekturen beim Upload von Scan-Bildern.</li>\n        </ul></>\n    },\n    {\n        project: \"mlw\",\n        title: \"Beta 12.6\",\n        date: \"2022-02-23\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Suche in opera-Listen funktioniert wieder.</li>\n            <li>Korrektur bei der voreingestellten Suche.</li>\n            <li>Links auf Wiki angepasst.</li>\n        </ul>\n        </>\n    },\n    {\n        title: \"Beta 12.5\",\n        date: \"2022-02-18\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>ocr-Funktionen des Servers in Modul \"archimedes.py\" verschoben.</li>\n            <li>Darstellung der Detailansicht für Ressourcen und Sekundärliteratur überarbeitet.</li>\n            <li>Neuladen der Ansicht beim Löschen von Elementen.</li>\n            <li>Opera-Listen werden automatisch neu geladen, wenn die Listen auf dem Server aktualisiert wurden oder wenn Autoren oder Werke erstellt oder gelöscht wurden.</li>\n            <li>Altes Benachrichtigungssystem (StatusBox) entfernt.</li>\n        </ul></>\n    },\n    {\n    title: \"Beta 12.4\",\n        date: \"2022-02-15\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Grösse der abgebildeten Wörter begrenzt auf digitalen und gescannten Zetteln.</li>\n            <li>Wiki-Anleitung für das Hochladen der Zettel verlinkt.</li>\n            <li>Zettel-Reihenfolge beim Hochladen stimmt jetzt auch mit Chrome.</li>\n            <li>Veraltete Daten und Links von früherer Version entfernt.</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.3\",\n        date: \"2022-02-14\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>ocr-Verfahren für neue Zettel überarbeitet (s. Einstellungen &gt; Server) und automatische Typ-Erkennung aktiviert.</li>\n            <li>Konto-Verwaltung überarbeitet (Löschen von Accounts jetzt möglich).</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.2\",\n        date: \"2022-02-13\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li><Alert.Link href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/issues/194\">Issue #194</Alert.Link></li>\n            <li>\"Details ein-/ausblenden\" unter \"speichern\" und \"speichern&weiter\" verschoben.</li>\n            <li>Kleiner Fehler bei Stapelverabeitung behoben (Änderugnen wurde nicht angezeigt).</li>\n            <li>Mit \"X\" kann die Detailansicht in der Zettel-DB geschlossen werden.</li>\n            <li>Wenn ein neues Wort in der Zettel-DB erstellt wurde, wird es automatisch mit dem aktuellen Zettel verknüpft.</li>\n            <li>Man kann nun aus der Stapel-Ansicht neue Wörter erstellen.</li>\n            <li>Die Hilfe zum Erstellen von Wörtern wird nun auch in der Wortliste angezeigt.</li>\n            <li>Import-Formulare überarbeitet und verbessert.</li>\n        </ul></>\n    },\n    {\n        title: \"Beta 12.1\",\n        date: \"2022-02-11\",\n        description: <><p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n        <ul>\n            <li>Mit einem Klick auf den Wortansatz in der Wortliste wird die Zettel-Datenbank geöffnet und die mit diesem Wort verknüpften Zettel angezeigt.</li>\n            <li>Suchfelder in Wortliste hinzugefügt: \"Wörterbücher\", \"Kommentar\", \"Zahlzeichen\", \"im Wörterbuch (MLW)\", \"Stern\", \"Fragezeichen\".</li>\n            <li>Verbesserung des Fehlers mit \"speichern&weiter\".</li>\n            <li>\"Lemmaliste\" in \"Wortliste\" umbenannt. Ebenso \"Lemma\" in \"Wort\" (usw.).</li>\n            <li>Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> der opera-Listen: Alle sollen nun die Listen aktualisieren können.</li>\n            <li>opera-Listen können nicht mehr von \"Einstellungen\"-&gt;\"Server\" aktualisiert werden.</li>\n            <li>Die Statistiken können nur noch über das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> unter \"Einstellungen\"-&gt;\"Statistik\" aktualisiert werden.</li>\n            <li>Alle Links sollten mit CTRL/CMD+Klick in einem neuen Fenster/Tab geöffnet werden können.</li>\n            <li>Dark-Mode deaktiviert (wird später wieder eingeführt).</li>\n        </ul>\n    </>},\n    {\n        title: \"Beta 12.0\",\n        date: \"2022-02-09\",\n        description: <><p>Neues Design und Steuerelemente mit <Alert.Link target=\"_blank\" href=\"https://react-bootstrap.github.io\">Bootstrap</Alert.Link>. Die Suchfunktion befindet sich links unten auf der Seite (<FontAwesomeIcon icon={faSearch} />).</p></>\n    }\n]\nexport { MainBody, MainNavBar };","import { Card, Form, Row, Col, Button, Navbar, Offcanvas, Container, Placeholder, Spinner, Accordion, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete, ToolKit, SearchHint, StatusButton, sleep } from \"./../elements.js\";\n\nfunction Zettel(props){\n    const [verso, setVerso] = useState(\"\");\n    const [editions, setEditons] = useState([]);\n\n    useEffect(()=>{\n        const fetchData=async()=>{\n            if(props.z.work_id>0){\n                const newEditions = await arachne.edition.get({work_id: props.z.work_id}, {select: [\"id\", \"label\", \"url\"]});\n                let editionsLst = [];\n                for(const e of newEditions){\n                    editionsLst.push(<ListGroup.Item key={e.id}><a href={e.url===\"\"?`/site/viewer/${e.id}`:e.url} target=\"_blank\">{e.label}</a></ListGroup.Item>);\n                }\n                setEditons(editionsLst)\n            }\n        };\n        fetchData();\n    }, []);\n    return <Card style={{width: \"30rem\"}} className=\"mb-3\">\n        <FontAwesomeIcon style={{position: \"absolute\", top: \"12px\", right: \"10px\"}} onClick={()=>{if(verso===\"\"){setVerso(\"v\")}else{setVerso(\"\")}}} icon={faSync} />\n        <Card.Header style={{height: \"41px\"}} dangerouslySetInnerHTML={parseHTML(props.z.opus)}></Card.Header>\n        <Card.Img variant=\"bottom\" src={`${props.z.img_path}${verso}.jpg`} />\n        {/*<Card.Img variant=\"bottom\" src={`http://localhost:8080${props.z.img_path}${verso}.jpg`} />*/}\n        <Card.Body>\n            <Card.Text><ListGroup horizontal>{editions}</ListGroup></Card.Text>\n        </Card.Body>\n    </Card>;\n}\nfunction Detail(props){\n    const [lemma, setLemma] = useState(null);\n    const [vZettels, setVZettels] = useState(null);\n    const [eZettels, setEZettels] = useState(null);\n    const [iZettels, setIZettels] = useState(null);\n    const [rZettels, setRZettels] = useState(null);\n\n    useEffect(()=>{\n        const fetchData=async()=>{\n            setLemma(null);\n            setVZettels(null);\n            setEZettels(null);\n            setIZettels(null);\n            setRZettels(null);\n            const newLemma = await arachne.lemma.get({id: props.lemma_id});\n            setLemma(newLemma[0]);\n            setVZettels(await arachne.zettel.get({lemma_id: props.lemma_id, type: 1}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n            setEZettels(await arachne.zettel.get({lemma_id: props.lemma_id, type: 2}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n            setIZettels(await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"3\"}, {c: \"type\", o: \"<=\", v: \"6\"}, {c: \"type\", o: \"!=\", v: \"4\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n            setRZettels(await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"4\"}, {c: \"type\", o: \"!=\", v: \"6\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n        };\n        fetchData();\n    }, [props.lemma_id])\n    return (lemma?<>\n        <h1 dangerouslySetInnerHTML={parseHTML(lemma.lemma_display)}></h1>\n        <Container>\n            {lemma.dicts&&<Row>\n                <Col xs={2}>Wörterbücher:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.dicts)}></Col>\n            </Row>}\n            {lemma.comment&&<Row className=\"mb-4\">\n                <Col xs={2}>Kommentar:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.comment)}></Col>\n            </Row>}\n            <Row>\n                <Col>\n                    <Accordion defaultActiveKey=\"\">\n                    <Accordion.Item eventKey=\"v\">\n                        <Accordion.Header>verzetteles Material&nbsp;{vZettels?<span>({vZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{vZettels?vZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"e\">\n                        <Accordion.Header>Exzerpt-Zettel&nbsp;{eZettels?<span>({eZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{eZettels?eZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"i\">\n                        <Accordion.Header>Index-Zettel&nbsp;{iZettels?<span>({iZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{iZettels?iZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"r\">\n                        <Accordion.Header>restliche Zettel&nbsp;{rZettels?<span>({rZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{rZettels?rZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                </Col>\n            </Row>\n        </Container>\n    </>:null);\n}\nfunction IndexBox(props){\n    const WORD_COUNT = 100;\n    const SCROLL_BOUND = 500;\n    const [query, setQuery]=useState(null);\n    const [words, setWords] = useState([]);\n    const [detailId, setDetailId] = useState(null);\n    const [resultLst, setResultLst]=useState([]);\n    const [resultCurrentId, setResultCurrentId] = useState(0);\n\n    const [wordLst, setWordLst] = useState([]); // contains all words\n    useEffect(()=>{\n        const fetchData=async()=>{\n            let wl = await arachne.lemma.getAll({select: [\"id\", \"lemma\", \"lemma_display\"], order: [\"lemma\"]})\n            wl=wl.map(w=>{return {id: w.id, lemma_display: w.lemma_display, lemma: w.lemma.toLowerCase()}})\n            setWordLst(wl)\n            setQuery(\"\");\n        }\n        fetchData();\n    },[])\n\n    useEffect(()=>{\n        if(query!==null&&query!==\"\"){\n            const lowQuery = query.toLowerCase();\n            const queryLength = query.length;\n            const results=wordLst.filter(w=>w.lemma.substring(0,queryLength)===lowQuery);\n            setResultLst(results);\n            if(results.length>0){setResultCurrentId(results[0].id)};\n        }else if(query===\"\"){\n            setResultLst([]);\n            setResultCurrentId(0);\n        }\n    }, [query]);\n\n    useEffect(()=>{\n        if(resultLst.length>0){\n            const cIndex = wordLst.findIndex(w=>w.id===resultCurrentId);\n\n            const wordsBefore = wordLst.slice(cIndex-WORD_COUNT>=0?cIndex-WORD_COUNT:0,cIndex);\n            const wordsAfter = wordLst.slice(cIndex, cIndex+WORD_COUNT);\n            setWords(wordsBefore.concat(wordsAfter));\n            //setDetailId(resultCurrentId);\n            const scrollToHit = async()=>{\n                await sleep(200);\n                const hit = document.querySelector(\".indexBox_result_hit\");\n                if(hit){hit.scrollIntoView({block: \"center\", behavior: \"auto\"})}\n            }\n            scrollToHit();\n        }else{\n            setWords(wordLst.slice(0,WORD_COUNT));\n        }\n    }, [resultLst,resultCurrentId]);\n\n    const loadMoreWords=(e)=>{\n        if(e.target.scrollHeight-e.target.scrollTop-e.target.offsetHeight<SCROLL_BOUND){//bottom\n            const after = getWordsAfter();\n            setWords(words.concat(after))\n        }else if(e.target.scrollTop<SCROLL_BOUND){\n            const before = getWordsBefore()            \n            setWords(before.concat(words));\n        }\n    }\n    const getWordsBefore = ()=>{\n        const firstId = wordLst.findIndex(w=>w.id===words[0].id);\n        return wordLst.slice(firstId-WORD_COUNT>=0?firstId-WORD_COUNT:0, firstId);\n    };\n    const getWordsAfter=()=>{\n        const lastId = wordLst.findIndex(w=>w.id===words[words.length-1].id);\n        return wordLst.slice(lastId+1, lastId+1+WORD_COUNT);\n    };\n    if(wordLst.length>0){\n        return <Container className=\"mainBody\">\n            <div className=\"indexBoxLst\">\n                <input type=\"text\" style={{width: \"100%\", margin: \"10px 0px 10px 0\"}} value={query} onChange={e=>{setQuery(e.target.value)}} onKeyDown={e=>{\n                    if(e.keyCode===13&e.shiftKey){ //backwards\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex===0){setResultCurrentId(resultLst[resultLst.length-1].id)}\n                        else{setResultCurrentId(resultLst[lastIndex-1].id)}\n                    }else if(e.keyCode===9){\n                        e.preventDefault();\n                        setDetailId(resultCurrentId);\n                    }else if(e.keyCode===13){\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex+1<resultLst.length){setResultCurrentId(resultLst[lastIndex+1].id)}\n                        else{setResultCurrentId(resultLst[0].id)}\n                    }else if(e.keyCode===27){\n                        setQuery(\"\");\n                    }\n                }} />\n                <div>{resultLst.length>0?<small style={{float: \"right\"}}><span style={{marginRight: \"15px\"}}>{resultLst.findIndex(r=>r.id===resultCurrentId)+1}<span style={{margin: \"0 3px 0 3px\"}}>/</span>{resultLst.length} </span><FontAwesomeIcon style={{marginRight: \"5px\"}} icon={faAngleLeft} onClick={()=>{\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex===0){setResultCurrentId(resultLst[resultLst.length-1].id)}\n                        else{setResultCurrentId(resultLst[lastIndex-1].id)}\n                }} /><FontAwesomeIcon style={{marginRight: \"3px\"}} icon={faAngleRight} onClick={()=>{\n                        const lastIndex = resultLst.findIndex(r=>r.id===resultCurrentId);\n                        if(lastIndex+1<resultLst.length){setResultCurrentId(resultLst[lastIndex+1].id)}\n                        else{setResultCurrentId(resultLst[0].id)}\n                }}/></small>:null}</div>\n                <ListGroup variant=\"flush\" className=\"indexBoxLstResultBox\" onScroll={e=>{loadMoreWords(e)}}>\n                    {words.map(w=><ListGroup.Item className={resultCurrentId===w.id?\"indexBox_result_hit\":resultLst.map(r=>r.id).includes(w.id)?\"indexBox_result\":null} action onClick={()=>{setDetailId(w.id)}} key={w.id} dangerouslySetInnerHTML={parseHTML(w.lemma_display)}></ListGroup.Item>)}\n                </ListGroup>\n            </div>\n            <div className=\"indexBoxDetail\">{detailId?<Detail lemma_id={detailId} />:null}</div>\n        </Container>;\n    }else{\n        return <div>Daten werden geladen...</div>;\n    }\n}//\n/*\n    \n    //const [resultIndex, setResultIndex]=useState(0);\n    \n\nuseEffect(()=>{\n        const fetchData=async()=>{\n            if(query!=\"\"){\n                const results = await arachne.lemma.get({lemma: `${query}*`}, {select: [\"id\", \"lemma\"], order: [\"lemma\"]});\n                //if(!results.map(r=>r.id).includes(resultCurrentId)){setResultIndex(0)}\n                // if hit is also in new resultLst, it shouldnt be reset!\n                setResultCurrentId(results[0].id);\n                setResultCurrentWord(results[0].lemma)\n                setResultLst(results);\n            }\n        }\n        fetchData();\n    },[query]);\n    useEffect(()=>{\n        const fetchData=async()=>{\n            const AllBefore = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: resultCurrendWord}], {count: true});\n            const before = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: resultCurrendWord}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT, offset: AllBefore[0].count-WORD_COUNT>0?AllBefore[0].count-WORD_COUNT:0});\n            const after = await arachne.lemma.search([{c: \"lemma\", o: \">=\", v: resultCurrendWord}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: (WORD_COUNT+1)});\n            setWords(before.concat(after));\n            await sleep(200);\n            const hit = document.querySelector(\".indexBox_result_hit\");\n            hit.scrollIntoView({block: \"center\", behavior: \"auto\"});\n        };\n        fetchData();\n    }, [resultCurrentId])\n    const loadMoreWords=async(e)=>{\n        if(e.target.scrollHeight-e.target.scrollTop-e.target.offsetHeight<SCROLL_BOUND){//bottom\n            let after = await getWordsAfter(words[words.length-1].lemma);\n            setWords(words.concat(after))\n            after = await getWordsAfter(words[words.length-1].lemma);\n            setWords(words.concat(after))\n        }else if(e.target.scrollTop<SCROLL_BOUND){\n            let before = await getWordsBefore(words[0].lemma)            \n            setWords(before.concat(words));\n            before = await getWordsBefore(words[0].lemma)            \n            setWords(before.concat(words));\n        }\n    }\n    const getWordsBefore = async(word)=>{\n            const AllBefore = await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: word}], {count: true});\n            return await arachne.lemma.search([{c: \"lemma\", o: \"<\", v: word}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT, offset: AllBefore[0].count-WORD_COUNT>0?AllBefore[0].count-WORD_COUNT:0});\n    };\n    const getWordsAfter=async(word)=>{\n        return await arachne.lemma.search([{c: \"lemma\", o: \">\", v: word}], {select: [\"id\", \"lemma_display\", \"lemma\"], order: [\"lemma\"], limit: WORD_COUNT});\n    };\n*/\nexport { IndexBox };","import { Row, Col, Form, Container } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { StatusButton } from \"./elements.js\";\n\nfunction Account(){\n    const [firstName, setFirstName] = useState(arachne.me.first_name);\n    const [lastName, setLastName] = useState(arachne.me.last_name);\n    const [email, setEmail] = useState(arachne.me.email);\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [zWidth, setZWidth] = useState(arachne.options.z_width);\n    const [actionKey, setActionKey] = useState(arachne.options.action_key);\n\n    const displaySettings = [\n        <Row key={1} className=\"mb-2\">\n            <Col xs={2}>Breite der Zettel:</Col>\n            <Col><Form.Range min=\"400\" max=\"600\" size=\"sm\" value={zWidth} onChange={e=>{\n                arachne.setOptions(\"z_width\", e.target.value);\n                arachne.setOptions(\"z_height\", 350/500*parseInt(e.target.value));\n                setZWidth(e.target.value);\n            }}/></Col>\n        </Row>\n    ];\n    return <Container style={{padding: \"0 10% 0 10%\"}}>\n        <Row><Col><h3>Persönliche Daten</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Vorname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={firstName} onChange={e=>{setFirstName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Nachname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={lastName} onChange={e=>{setLastName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>Email-Adresse:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={email} onChange={e=>{setEmail(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: firstName,\n                        last_name: lastName,\n                        email: email,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Passwort</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>altes Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={oldPassword} onChange={e=>{setOldPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>neues Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={newPassword} onChange={e=>{setNewPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: oldPassword,\n                        new_password: newPassword\n                    });\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Darstellung und Benutzung</h3></Col></Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Funktionstaste für Tastenkürzel</Col>\n            <Col>\n                <Form.Select size=\"sm\" value={actionKey} onChange={e=>{arachne.setOptions(\"action_key\", e.target.value);setActionKey(e.target.value)}}>\n                    <option value=\"alt\">Alt</option>\n                    <option value=\"ctrl\">Strg</option>\n                    <option value=\"cmd\">Befehlstaste</option>\n                </Form.Select>\n                <small>Eine Liste mit Tastenkürzeln finden Sie <a className=\"text-primary\" href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/06-Argos#tastenkürzel\" target=\"_blank\">hier</a>.</small>\n            </Col>\n        </Row>\n        {displaySettings}\n    </Container>;\n}\n\nexport { Account };"],"names":["ChangeLog","arachne","a","b","date","undefined","project","useState","displayAll","setDisplayAll","c","i","variant","title","d","substring","description","style","cursor","marginTop","textAlign","onClick","LemmaRow","LemmaHeader","LemmaAsideContent","lemmaSearchItems","zettelSearchItems","zettelBatchOptions","ZettelCard","BatchInputType","ZettelAddLemmaContent","ZettelSingleContent","newZettelObject","exportZettelObject","zettelPresetOptions","zettelSortOptions","Lemma","props","state","item","newItemCreated","loadModules","PROJECT_NAME","setState","Navbar","fixed","bg","Container","fluid","className","boxName","searchQuery","q","order","setupItems","this","searchOptions","sortOptions","status","searchStatus","count","loadPage","newPage","currentPage","maxPage","menuItems","window","confirm","lemma_display","lemma","newId","id","o","v","LemmaBox","loadMain","e","res","currentElements","gridArea","showDetail","LemmaAside","onUpdate","reloadEntry","onReload","onClose","newItem","indexOfNewItem","findIndex","newQuery","Spinner","animation","size","limit","query","queryOrder","Math","floor","selectionDetail","ids","offset","React","selection","currentId","cEls","cEl","push","cId","find","padding","Table","striped","width","Offcanvas","show","placement","scroll","backdrop","onHide","closeButton","SekLit","titel","SekLitBox","SekLitAside","onDoubleClick","parseInt","target","closest","kennziffer","signatur","alte_signatur","name","vorname","reihe","ort","jahr","weitere_angaben","zusatz","Row","Col","xs","type","value","onChange","signature","Button","marginLeft","Ressource","ressource","editor","year","Date","getFullYear","RessourceBox","RessourceAside","resTypes","url","label","dangerouslySetInnerHTML","parseHTML","opus","href","fontSize","icon","faExternalLinkAlt","work_id","ac_web","volume","vol_cont","serie","location","library","comment","path","aspect_ratio","bibliography_preview","tbl","searchCol","returnCol","updateBibliography","dir_name","backgroundColor","options","height","error","select","bibliography","length","Statistics","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","datasets","data","borderColor","borderWidth","margin","marginBottom","plugins","legend","position","zettel_types_data","zettel_types","zettel_created_data","zettel_changed","zettel_created","aspectRatio","display","zettel_current_year_labels","splice","getMonth","zettel_created_current_data","zettel_changed_current","zettel_created_current","lemmaBox","lemmaCharts","lemma_letters_data","lemma_mlw_data","lemma_mlw","flexWrap","ressourceBox","ressourceCharts","ressource_work_data","getNumbers","Tabs","defaultActiveKey","Tab","eventKey","float","color","last_updated","numbers","JSON","parse","Server","ocrJobs","faszikelJobs","users","defaultActive","re","sleep","loadOcrJobs","map","row","finished","sqlDate","u_date","c_date","source","total","round","faszikel","log","dateArray","split","createdDate","join","verticalAlign","u","first_name","last_name","access","agent","session_last_active","faSun","faMoon","ServerAside","loadUsers","loadFaszikelJobs","allFaszikelJobs","newOcrJobs","newUsers","rightList","right","marked","includes","nAccess","Object","entries","border","borderRadius","stringify","prevProps","Import","tab","workLst","pathLst","scanWork","scanWorkId","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrRessourceId","ocrFiles","zettelLetter","zettelType","zettelFiles","zettelEditors","zettelEditorSelected","zettelSuccess","scanPath","Form","multiple","accept","files","nPath","newEditionId","uploadForm","FormData","append","fLength","body","console","success","scanLst","missLst","saveLst","file","fName","cScan","filename","text","fileTxt","full_text","cItemCount","cUploadIndex","uploadGroup","Array","from","sort","firstId","lastId","uItem","r","Alert","dismissible","localStorage","setItem","then","userLst","user","catch","Zettel","showPreset","presetOptions","export","exportPdf","open","ZettelBox","presetSelection","toggleShowDetail","itemDetail","ZettelAside","reloadZettel","openNextItem","lastIndex","testProp","multiSelect","selectCallback","preset","element","mode","setMode","lastMode","setLastMode","nextAfterLemmaAdd","setNextAfterLemmaAdd","content","setContent","newLemma","setNewLemma","setNewLemmaDisplay","useEffect","ZettelAsideBatch","openAddLemma","l","ld","saveBatch","t","ZettelAsideSingle","n","ZettelAddLemma","saveAfterAddLemma","l_id","newLemmaDisplay","closeAddLemma","batchType","batchValue","batchValueId","newKey","newValue","newValueLst","newValueObj","user_id","next","lemma_id","ressourceLst","setRessourceLst","setLemma","zettelObject","setZettelObject","zettelObjectErr","setZettelObjectErr","fetchData","saveDetail","msg","saveObj","document","querySelector","focus","Accordion","err","marginRight","checked","rel","setBatchType","setBatchValue","setBatchValueId","batch_options","event","lemmaObject","setLemmaObject","newLemmaOK","setNewLemmaOK","MainMenuContent","verso","setVerso","editions","setEditons","z","newEditions","editionsLst","ListGroup","Card","top","faSync","src","img_path","horizontal","Detail","vZettels","setVZettels","eZettels","setEZettels","iZettels","setIZettels","rZettels","setRZettels","dicts","IndexBox","WORD_COUNT","setQuery","words","setWords","detailId","setDetailId","resultLst","setResultLst","resultCurrentId","setResultCurrentId","wordLst","setWordLst","wl","w","toLowerCase","lowQuery","queryLength","results","filter","cIndex","wordsBefore","slice","wordsAfter","concat","scrollToHit","hit","scrollIntoView","block","behavior","getWordsBefore","getWordsAfter","onKeyDown","keyCode","shiftKey","preventDefault","faAngleLeft","faAngleRight","onScroll","scrollHeight","scrollTop","offsetHeight","after","before","loadMoreWords","action","MainBody","dbChangeLog","main","null","Opera","listName","Konkordanz","DOMOpera","Etudaus","DOMRessource","keys","MainNavBar","mainMenuContentLoaded","setMainMenuContentLoaded","dbName","Nav","NavDropdown","faSignOutAlt","faEllipsisV","faSearch","Account","firstName","setFirstName","lastName","setLastName","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","zWidth","setZWidth","actionKey","setActionKey","displaySettings","min","max","reUser","old_password","new_password"],"sourceRoot":""}