{"version":3,"sources":["arachne.js","settings.js","elements.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","encodeURI","fetch","headers","then","re","status","json","Error","newValues","method","rId","Array","isArray","id","body","response","parseInt","text","arachne","user","password","tbls","reUser","tables","tbl","Help","style","padding","href","React","Component","Status","props","state","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","type","color","backgroundColor","fontSize","icon","faCheckCircle","clearTimeout","setTimeout","current","opacity","setState","faTimesCircle","faCloudUploadAlt","faCloudMoon","value","ref","position","bottom","left","boxShadow","transition","borderRadius","overflow","zIndex","top","SelectMenu","op","width","onChange","event","pointerEvents","textAlign","margin","faAngleDown","AutoComplete","defaultValue","cInput","items","currentItemId","itemLst","inputStyle","length","col","display","item","itemStyle","onClick","e","selectItemClick","target","textContent","onKeyDown","selectItem","keyCode","onBlur","leave","change","currentItemIndex","input","get","SelectorWrapper","element","children","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","className","Children","map","child","includes","keys","targetId","inRange","newIds","forEach","filter","itemId","SearchInput","marginRight","marginBottom","border","placeholder","faMinusCircle","removeSearchFields","SearchBox","queryTxt","nextID","searchFields","cSF","sF","gridArea","flexWrap","alignItems","faPlusCircle","addSearchFields","float","marginTop","sendQuery","nSearchFields","s","exportSF","document","querySelectorAll","searchQuery","alert","Zettel","gridTemplateColumns","gridTemplateRows","rowGap","q","itemDetail","loadPage","move","currentElements","currentPage","pageMax","showDetail","close","newQuery","zettel","Math","floor","ZettelBox","cEls","cEl","ZettelCard","img_path","classList","in_use","onDoubleClick","src","lemma_display","opus","height","date_display","txt","ZettelAside","ressources","cRes","keyCount","label","dateOwn","dateStyle","borderTop","paddingTop","date_type","right","accessKey","faTimes","setItem","lemma_search","ac_web","nVals","work_id","save","edition","res","catch","cItem","colors","MainMenu","menuEntries","currentSubmenu","onTop","justifyContent","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","marginLeft","hidden","App","mainMenuPos","window","innerWidth","login","addEventListener","main","newStatus","gridColumn","gridRow","name","faCat","email","querySelector","open","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f887c76d.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{throw  new Error(\"ARACHNE: connection failed!\")}//window.open(\"/\", \"_self\")}\n        });\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n    }\n    async open(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n\n            let reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n            if(re.status === 200){this.user = await reUser.json();}\n            else {return false;}\n            if(tbls == null){tbls = await this.tables()}\n            for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n            return true;\n        }else{\n            return false;\n        }\n    }\n    async close(){\n        this.key = null;\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import React from \"react\";\n\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Help };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faAngleDown, faCheckCircle, faCloudUploadAlt, faCloudMoon, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"10px\",\n                left: \"10px\",\n                backgroundColor: \"white\",\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#246EB9\", fontSize:\"40px\"}} icon={faCloudUploadAlt} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}>{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\n\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n    componentDidUpdate(){}\n}\n\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            defaultValue: this.props.value,\n            cInput: this.props.value,\n            items: [],\n            currentItemId: null\n        };\n    }\n    render(){\n        let itemLst = [];\n        let style = {\n            position: \"absolute\",\n            backgroundColor: \"white\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let inputStyle = {};\n        if(this.state.items.length===1&&this.state.items[0][this.props.col]===this.state.cInput){\n            inputStyle = {color: \"#2364AA\"};\n            style.display = \"none\";\n        } else if(this.state.items.length>0){\n            for(const item of this.state.items){\n                let itemStyle = {};\n                if(this.state.currentItemId===item.id){itemStyle.color=\"#2364AA\"}\n                itemLst.push(<div key={item.id} onClick={e=>{this.selectItemClick(e.target.textContent)}} style={itemStyle}>{item[this.props.col]}</div>);\n\n            }\n        } else {style.display = \"none\"}\n        return (\n        <div>\n            <input type=\"text\" style={inputStyle} onKeyDown={e=>{this.selectItem(e.keyCode)}} onBlur={()=>{setTimeout(()=>{this.leave()},100)}} onChange={e=>{this.change(e.target.value)}} value={this.state.cInput} />\n            <div style={style}>{itemLst}</div>\n        </div>);\n    }\n    selectItemClick(value){this.change(value)}\n    selectItem(keyCode){\n        if(keyCode===38&&this.state.currentItemIndex>0){\n            this.setState({currentItemIndex: this.state.currentItemIndex-1, currentItemId: this.state.items[this.state.currentItemIndex-1].id});\n        } else if (keyCode===40&&this.state.currentItemIndex<this.state.items.length){\n            this.setState({currentItemIndex: this.state.currentItemIndex+1, currentItemId: this.state.items[this.state.currentItemIndex+1].id});\n        } else if (keyCode===13){\n            this.change(this.state.items[this.state.currentItemIndex][this.props.col]);\n        }\n    }\n    leave(){if(this.state.items.length>1){this.setState({items: []})}}\n    change(input){\n        if(input!==\"\"&&input!==this.state.cInput){\n            let search = {};\n            search[this.props.col] = input+\"*\";\n            arachne[this.props.tbl].get(search, {select: [\"id\", this.props.col], limit:10})\n            .then(re=>{\n                if(re.length>0){\n                    this.props.onChange(((re.length===1&&re[0][this.props.col]===input)?re[0].id:null),input);\n                    this.setState({cInput: input, items: re, currentItemIndex: 0, currentItemId: re[0].id});\n                } else {\n                    this.props.onChange(null,input);\n                    this.setState({cInput: input, items: []});\n                }\n            });\n        } else if (input===\"\"){\n            this.props.onChange(null,input);\n            this.setState({cInput: \"\", items: []});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.defaultValue!==this.props.value){this.setState({defaultValue: this.props.value, cInput: this.props.value})}\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n        this.element = React.createRef();\n    }\n    render(){\n        return <div style={this.props.style} id={this.props.children.props.id} ref={this.element} onMouseUp={event=>{this.props.onSelect(this.element.current.id, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\n\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        return <div style={this.state.style} className={this.props.className}>\n        {React.Children.map(this.props.children, child => {\n            return <SelectorWrapper style={{boxShadow: this.state.ids.includes(child.props.id)?\"0 5px 15px LightGray\":null, transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })}\n        </div>;\n    }\n    select(targetId, keys){\n        targetId = parseInt(targetId);\n        if(this.props.multiSelect&&keys.shift){\n            //multiselect\n            let inRange = false;\n            let newIds = [];\n            React.Children.forEach(this.props.children, child => {\n                if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                    // start of range\n                    inRange = true;\n                    newIds.push(child.props.id);\n                } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                    // in range\n                    newIds.push(child.props.id);\n                } else if(inRange){\n                    // end of range\n                    inRange = false;\n                    newIds.push(child.props.id);\n                }\n                this.setState({currentId: targetId, ids: newIds});\n            });\n        } else if(this.props.multiSelect&&keys.meta){\n            // select/deselect while keeping selection\n            let newIds = this.state.ids;\n            if(newIds.includes(targetId)){\n                newIds = newIds.filter(itemId => itemId!=targetId);\n            } else {newIds.push(targetId)}\n            this.setState({currentId: targetId, ids: newIds});\n        } else {\n            // single select\n            this.setState({currentId: targetId, ids: [targetId]});\n        }\n    }\n    selectOLD(){\n        /*\n        if(event.target.closest(selector) != null){\n            let cTarget = event.target.closest(selector);\n            let cElements = me.ctn.querySelectorAll(selector);\n\n            if (multiselect == true && event.shiftKey && me.selMarker[selId]['lastRow'] > 0){\n                me.selMarker[selId]['ids'] = [];\n                let startSelect = false;\n                cElements.forEach(function(e){\n                    if(startSelect && (e.id == me.selMarker[selId]['lastRow'] ||\n                        e.id == cTarget.id)){\n                        me.selMarker[selId]['ids'].push(e.id);\n                        startSelect = false;\n                    } else if (startSelect == true){\n                        me.selMarker[selId]['ids'].push(e.id);\n                    } else if(startSelect == false && (e.id == me.selMarker[selId]['lastRow'] ||\n                        e.id == cTarget.id)){\n                        startSelect = true;\n                        me.selMarker[selId]['ids'].push(e.id);\n                    }\n                });\n            } else if (multiselect &&\n                ((argos.SelectKey == 'Ctrl' && event.ctrlKey) ||\n                (argos.SelectKey == 'Cmd' && event.metaKey))){\n                me.selMarker[selId]['lastRow'] = cTarget.id;\n                var cIndex = me.selMarker[selId]['ids'].indexOf(cTarget.id);\n                if (cIndex > -1){\n                    me.selMarker[selId]['ids'].splice(cIndex, 1);\n                } else {\n                    me.selMarker[selId]['ids'].push(cTarget.id);\n                };\n            } else if(!(me.selMarker[selId]['ids'].includes(cTarget.id) &&\n                ((argos.SelectKey == 'Ctrl' && event.ctrlKey) ||\n                    (argos.SelectKey == 'Cmd' && event.metaKey) || event.which == 3))){\n                // single element selected\n                // set edit-mode?\n                if(onEdit!= null && cTarget.id==me.selMarker[selId][\"lastRow\"] &&\n                    (Date.now()-me.selMarker[selId][\"lastClicked\"])>500){\n                    if(cTarget.tagName===\"INPUT\"){\n                        cTarget.disabled=false;\n                        cTarget.focus();\n                    }else{cTarget.setAttribute(\"contenteditable\", true)}\n                    cTarget.classList.remove(\"selEditable\");\n                    cTarget.style.outline = \"none\";\n                    cTarget.style.userSelect = \"text\";\n                    cTarget.style.webkitUserSelect = \"text\";\n\n                    cTarget.addEventListener(\"blur\", function(){\n                        cTarget.setAttribute(\"contenteditable\", false);\n                        if(onEdit!=null && !cTarget.classList.contains(\"selEditable\")){\n                            me.selMarker[selId][\"lastClicked\"] = null;\n                            cTarget.classList.add(\"selEditable\");\n                            onEdit();\n                        }\n                    });\n                    if(cTarget.getAttribute(\"list\")===null){\n                        cTarget.addEventListener(\"keydown\", function(){\n                            if(event.which==13){\n                                event.preventDefault();\n                                cTarget.blur();\n                            }\n                        });\n                    }\n                }else{\n                    if(onEdit!=null){me.selMarker[selId][\"lastClicked\"] = Date.now()}\n                    me.selMarker[selId]['lastRow'] = cTarget.id;\n                    me.selMarker[selId]['ids'] = [cTarget.id];\n                }\n            }\n\n            // mark selected element\n            me.ctn.querySelectorAll(selector).forEach(function(e){\n                if(me.selMarker[selId]['ids'].includes(e.id)){\n                    e.classList.add('selMarked');\n                } else {\n                    e.classList.remove('selMarked');\n                }\n            });\n        }\n        */\n\n    }\n}\n\nexport { Status, SelectMenu, Selector, AutoComplete };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faMinusCircle, faPlusCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        return (\n        <div className=\"searchFields\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\", backgroundColor: \"white\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"lemma\">Lemma</option>\n                <option value=\"type\">Typ</option>\n                <option value=\"id\">ID</option>\n                <option value=\"opus\">Werk</option>\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">!=</option>\n                <option value=\">\">&gt;</option>\n                <option value=\"<\">&lt;</option></select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n    }\n    render(){\n        const searchBox = {\n            boxShadow: \"0 0 2px #d9d9d9\",\n            backgroundColor: \"rgb(253, 253, 253)\",\n            margin: \"0 -20px 0 -20px\",\n            padding: \"12px 24px\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\"\n        };\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div style={searchBox}>\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", backgroundColor: \"var(--mainBG)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <input style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}} type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            \n        </div>\n    }\n    /*                <div style={{\n                    backgroundColor: \"var(--mainColor)\",\n                    color: \"var(--mainBG)\",\n                    borderRadius: \"25px\",\n                    padding: \"0px 8px 2px 8px\",\n                    position: \"relative\",\n                    top: \"-5px\"\n                }} onClick={\n                    () => {\n                        this.addSearchFields();\n                    }\n                }>\n                    +\n                </div>*/\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox searchQuery={(q) => {this.searchQuery(q)}}\n            gridArea={(this.state.itemDetail!=null)?\"1/1/1/2\":\"1/1/1/3\"} />\n            <ZettelBox\n                loadPage={move => {this.loadPage(move)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                pageMax={this.state.pageMax}\n                gridArea={(this.state.itemDetail!=null)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {this.setState({itemDetail: item})}}\n            />\n            {(this.state.itemDetail!=null)?<ZettelAside status={this.props.status} close={() =>{this.setState({itemDetail: null})}} item={this.state.itemDetail} />:\"\"}\n        </div>\n        );\n    }\n    async searchQuery(newQuery){\n        const count = await arachne.zettel.search(newQuery, {count:true});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50});\n        this.setState({\n            query: newQuery,\n            count: count[0][\"count\"],\n            pageMax: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements\n        });\n    }\n    async loadPage(move){\n        if(this.state.currentPage+move>0&&this.state.currentPage+move<=this.state.pageMax){\n            const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((this.state.currentPage+move-1)*50)});\n            this.setState({\n                currentPage: this.state.currentPage+move,\n                currentElements: currentElements\n            });\n        }\n    }\n}\n\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard id={cEl.id} item={cEl} key={cEl.id} showDetail={item => {this.props.showDetail(item)}} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <div style={{position: \"absolute\", left: \"50px\"}}><span className=\"minorTxt\">{this.props.count} Treffer</span></div>\n                <div id=\"navItems\">\n                    <span onClick={()=>{this.props.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\">{this.props.currentPage} von {this.props.pageMax}</span>\n                    <span onClick={()=>{this.props.loadPage(1)}}>&gt;</span>\n                </div>\n                <Selector multiSelect={true} className=\"zettel_box\">{cEls}</Selector>\n            </div>);\n        } else {\n            return <div style={{gridArea: this.props.gridArea, textAlign:\"center\", color:\"rgb(186, 203, 205)\"}}>Keine Ergebnisse gefunden.</div>;\n        }\n    }\n}\n\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n                            /*\n            let imgMSG = document.createElement(\"DIV\");\n            imgMSG.classList.add(\"zettel_msg\");\n            if(zettel.sibling>0){\n                imgMSG.innerHTML = \"<span style='color: var(--contraColor);' title='Geschwisterzettel'>&#x273F;</span>\"\n            }\n            if(zettel.date_sort===9 && zettel.date_own === null){\n                imgMSG.innerHTML +=\"<span style='color: var(--errorStat);' title='Datierung erforderlich'>&#x0021;</span>\";\n            }\n            box.appendChild(imgMSG);\n            */\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style} onDoubleClick={() => {this.props.showDetail(this.props.item)}}>\n                <img className={classList} src={zettel.img_path+\".jpg\"}></img>,\n                <div className=\"zettel_msg\"></div>,\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}}>{zettel.lemma_display}</span>\n                    <span style={{float: \"right\"}}>{zettel.opus}</span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            style.height = \"var(--zettelHeight)\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style} onDoubleClick={() =>{this.props.showDetail(this.props.item)}}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma'>{zettel.lemma_display}</div>\n                    <div className='digitalZettelDate'>{zettel.date_display}</div>\n                    <div className='digitalZettelWork'>{zettel.opus}</div>\n                    <div className='digitalZettelText'>{zettel.txt}</div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\n\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: this.props.item, ressources: null};\n    }\n    render(){\n        let cRes = [];\n        if(this.state.ressources!=null){\n            let keyCount = -1;\n            for(const item of this.state.ressources){\n                keyCount ++;\n                let url = item.url;\n                if(url===\"\"){url=`/site/viewer/${item.id}`}\n                cRes.push(<div key={keyCount}><a href={url}>{item.label}</a></div>);\n            }\n        }\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            backgroundColor: \"white\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        let dateOwn = \"\";\n        let dateStyle = {\n            borderTop: \"1px solid rgb(186, 203, 205)\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            };\n        if(this.state.item.date_type===9){\n            dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n            dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine eigene Datierung.</span></div>,\n            <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Eigenes Sortier-datum:</div>,\n            <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" /></div>,\n            <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Eigenes Anzeigedatum:</div>,\n            <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" /></div>\n        ];\n        }\n        return (\n<div style={style}>\n    <div style={{position: \"absolute\", top: \"45px\", right: \"20px\"}}  onClick={() => {this.props.close()}} accessKey=\"w\">\n        <FontAwesomeIcon icon={faTimes} />\n    </div>\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"150px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/2\", textAlign: \"left\"}}>\n            <i>ID: {this.state.item.id}</i>\n        </div>\n        <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n        <div style={{gridArea: \"3/2/3/3\"}}>\n            <SelectMenu style={{width: \"86%\"}} value={this.state.item.type} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"]]} onChange={event=>{this.setItem(\"type\", parseInt(event.target.value))}} />\n        </div>\n        <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n        <div style={{gridArea: \"4/2/4/3\"}}><AutoComplete onChange={(id, value)=>{this.setItem(\"lemma_id\", id)}} value={this.state.item.lemma_search} tbl=\"lemma\" col=\"lemma_search\" /></div>\n        {this.state.item.type!==4 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n        {this.state.item.type!==4 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.item.ac_web} tbl=\"work\" col=\"ac_web\" onChange={(id, value)=>{this.setItem(\"work_id\", id)}} /></div> : null}\n    </div>\n    <div style={dateStyle}>\n        <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n        <div style={{gridArea: \"1/2/1/3\"}}>{this.state.item.date_display}</div>\n        {dateOwn}\n    </div>\n    <div style={{\n        borderTop: \"1px solid rgb(186, 203, 205)\",\n        paddingTop: \"30px\",\n        display: \"grid\",\n        gridTemplateColumns: \"150px auto\",\n        gridTemplateRows: \"1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"10px 0 30px 0\"\n        }}>\n        <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n        <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        <div style={{gridArea: \"3/2/3/3\"}}><input type=\"button\" value=\"speichern\" onClick={()=>{\n            const nVals = {\n                id: this.state.item.id,\n                type: this.state.item.type,\n                work_id: this.state.item.work_id\n            };\n            this.props.status(\"saving\");\n            arachne.zettel.save(nVals).then(()=>{this.props.status(\"saved\")});\n            }} /></div>\n\n    </div>\n</div>\n        );\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.item.work_id>0){\n            arachne.edition.get({work_id: this.state.item.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    setItem(key, value){\n        let cItem = this.state.item;\n        if(cItem[key]!==value){\n            cItem[key] = value;\n            this.setState({item: cItem});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.item.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({item:this.props.item, ressources: res});\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({item:this.props.item, ressources: null})}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Help } from \"./settings.js\";\nimport { Status } from \"./elements.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {\n    shadow: \"#3c6e71\"\n}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\"Zettel-Datenbank\": \"zettel\"/*,\n                \"Lemmaliste\": \"lemma\",\n            \"Volltext-Suche\": \"fulltext\"*/}\n            },\n            /*\"Verzeichnisse\": {\n                visible: false, \n                items: {\n                \"opera-maiora\":\"maiora\",\n                \"opera-minora\":\"minora\",\n                \"Ressourcen\":\"ressources\",\n                \"Sekundärliteratur\":\"seklit\"\n            }},*/\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                \"Hilfe\":\"help\",\n                /*\"Konto\":\"account\",\n                \"Statistiken\":\"stats\",*/\n                \"abmelden\":\"logout\"\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n            backgroundColor: \"white\"\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    backgroundColor: \"white\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}>{subEntry}</div>);\n                    }\n                    subMenu = <div key={subMenuEntries} style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainMenu\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {login: false, res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                login: false,\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.login){\n            // hurra, login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    throw new Error(`ARGOS: unknown res in 'loadMain': ${this.state.res}`);\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    \n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        const tbls = [\"edition\", \"lemma\", \"work\", \"zettel\"];\n        if(email!==\"\"&&password!==\"\"&&await arachne.open(email, password, tbls)){\n            this.setState({login: true});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}