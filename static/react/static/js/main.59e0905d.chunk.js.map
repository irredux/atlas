{"version":3,"sources":["arachne.js","elements.js","opera.js","settings.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","newValues","rId","Array","isArray","id","body","response","parseInt","text","arachne","user","password","tbls","reUser","tables","tbl","data","newForm","Navigator","onClick","scrollTo","icon","faAngleUp","props","loadPage","currentPage","maxPage","React","Component","Status","state","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","type","style","display","backgroundColor","color","padding","fontSize","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","setState","faCat","faCheckCircle","faTimesCircle","faCloudMoon","value","ref","position","bottom","left","boxShadow","transition","borderRadius","overflow","zIndex","top","SelectMenu","op","width","onChange","event","pointerEvents","textAlign","margin","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","length","i","option","col","e","target","dataset","cursor","onBlur","changeInputValue","onKeyDown","changeSelectedOption","newValue","get","newOptions","keyCode","SelectorWrapper","className","children","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","map","child","includes","keys","selectCallback","targetId","inRange","newIds","forEach","filter","itemId","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","OperaAside","OperaBox","oLst","trLst","editionLst","editions_id","editionsId","parse","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","cLabel","href","listName","abbr","dangerouslySetInnerHTML","date_display","full","bibliography","comment","citation","gridArea","oMax","getAll","Math","floor","getLst","prevProps","Opera","selectionDetail","gridTemplateColumns","gridTemplateRows","rowGap","move","currentElements","pageMax","selection","item","itemDetail","onUpdate","reloadZettel","Server","Import","tab","workLst","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","styleBody","gridGap","mainBody","scanPath","name","accept","multiple","files","edition","save","work_id","ressource","editor","year","volume","vol_cont","serie","location","library","signature","newEditionId","console","log","uploadForm","FormData","append","fLength","importScans","join","scan_lnk","edition_id","scanLnks","scanLst","scanLnk","scan","scan_id","nScan","missLst","file","fName","substring","cScan","find","filename","fileTxt","full_text","styleTab","styleTabActive","borderBottom","justifyContent","border","work","works","newWorkLst","ac_web","editions","newEditionLst","label","loadOptions","Help","SearchInput","marginRight","marginBottom","placeholder","faMinusCircle","removeSearchFields","SearchBox","queryTxt","nextID","searchFields","sOrder","cSF","sF","flexWrap","alignItems","faPlusCircle","addSearchFields","float","marginTop","sendQuery","marginLeft","nSearchFields","s","exportSF","document","querySelectorAll","searchQuery","alert","Zettel","q","showDetail","zettel","newItem","indexOfNewItem","findIndex","newQuery","queryOrder","ZettelBox","cEls","cEl","testProp","ZettelCard","img_path","classList","in_use","src","lemma_display","opus","txt","ZettelAside","addLemma","ressources","batchType","date_type","lemma_id","lemma_ac","date_own","date_own_display","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","right","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","indexOf","newLemmaValue","lemma","MLW","Fragezeichen","Stern","lemma_nr","newId","cRes","keyCount","dateOwn","dateStyle","borderTop","paddingTop","isNaN","Number","isInteger","nVals","user_id","inputType","skipSave","newKey","newValueLst","cId","newValueObj","res","catch","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","mode","addEventListener","newStatus","close","main","Error","height","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","first_name","last_name","email","createAccount","login","querySelector","open","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.59e0905d.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n                //throw new Error(\"ARACHNE: connection failed!\");\n            }//window.open(\"/\", \"_self\")}\n        });\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n    }\n    async open(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n\n            let reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n            if(re.status === 200){this.user = await reUser.json();}\n            else {return false;}\n            if(tbls == null){tbls = await this.tables()}\n            for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n            return true;\n        }else{\n            return false;\n        }\n    }\n    async close(){\n        this.key = null;\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass Navigator extends React.Component{\n    render(){\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.props.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\">{this.props.currentPage} von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.props.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                backgroundColor: \"white\",\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}>{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n    componentDidUpdate(){}\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            backgroundColor: \"white\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.col]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.col]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},100)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle}>{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.col] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.col], limit:10, order: [this.props.col]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.col], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className=\"selectWrapper\" style={this.props.style} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {React.Children.map(this.props.children, child => {\n            return <SelectorWrapper style={{boxShadow: this.state.ids.includes(child.props.id)?\"0px 3px 18px var(--shadowBG)\":null, transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&keys.meta){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nexport { Navigator, parseHTML, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    render(){\n        return <div>Seite</div>;\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: []};\n    }\n    render(){\n        let trLst = [];\n        let i = 0;\n        for(const o of this.state.oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    if(editionsURL&&editionsURL[iE]!=\"\"){cURL=editionsURL[iE]}\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\">{cLabel}</a></li>);\n                }\n            }\n            i++;\n            if(this.state.listName==\"opera_maiora\"){\n                let abbr = <aut>{o.abbr}</aut>;\n                if(o[1]>0){abbr=<span>&nbsp;&nbsp;&nbsp;{o.abbr}</span>}\n                trLst.push(<tr key={i}><td className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2\">{abbr}</td><td className=\"c3\" dangerouslySetInnerHTML={parseHTML(o.full)}></td><td className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td><td className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td></tr>);\n            } else if(this.state.listName===\"opera_minora\"){\n                trLst.push(<tr key={i}><td className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td><td className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td></tr>);\n            }\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n                <Navigator maxPage={this.state.oMax} />\n                <div className=\"operaBox\">\n                <table><tbody>{trLst}</tbody></table>\n                </div>\n                </div>;\n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n            this.setState({listName: this.props.listName, oLst: oLst, oMax: Math.floor(oMax[0][\"count\"]/30)+1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n                this.setState({oLst: oLst, listName: this.props.listName});\n            };\n            getLst();\n        }\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    /*showDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}*/\n                />\n                {this.state.selectionDetail?<OperaAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\n\nclass Server extends React.Component{\n    render(){\n        return <div>opera-Listen aktualisieren.</div>;\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            editionLst: [],\n            scanWork: 1,\n            scanType: 1,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                /*comment,*/\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.editionLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLnks = await arachne.scan_lnk.get({edition_id: this.state.ocrRessource});\n                            let scanLst = [];\n                            for(const scanLnk of scanLnks){\n                                const nScan = await arachne.scan.get({id: scanLnk.scan_id})\n                                scanLst.push(nScan[0]);\n                            }\n                            let missLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    await arachne.scan.save({id: cScan.id, full_text: fileTxt})\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                break;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            border: \"1px solid white\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.getAll({select: [\"id\", \"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const editions = await arachne.edition.getAll({select: [\"id\", \"label\"]});\n            let newEditionLst = [];\n            for(const edition of editions){\n                newEditionLst.push([edition.id, edition.label]);\n            }\n            this.setState({editionLst: newEditionLst});\n\n        }\n        loadOptions();\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Help, Import, Server };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        return (\n        <div className=\"searchFields\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\", backgroundColor: \"white\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"lemma\">Lemma</option>\n                <option value=\"type\">Typ</option>\n                <option value=\"id\">ID</option>\n                <option value=\"opus\">Werk</option>\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n        this.sOrder = null;\n    }\n    render(){\n        const searchBox = {\n            boxShadow: \"0 0 2px #d9d9d9\",\n            backgroundColor: \"rgb(253, 253, 253)\",\n            margin: \"0 -20px 0 -20px\",\n            padding: \"12px 24px\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\"\n        };\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div style={searchBox}>\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", backgroundColor: \"var(--mainBG)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]} onChange={event=>{this.sOrder = JSON.parse(event.target.value)}} />\n            </div>\n        </div>\n    }\n\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF, this.sOrder)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox searchQuery={(q,order) => {this.searchQuery(q,order)}}\n            gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"} />\n            <ZettelBox\n                loadPage={move => {this.loadPage(move)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n        </div>\n        );\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(move){\n        if(this.state.currentPage+move>0&&this.state.currentPage+move<=this.state.maxPage){\n            const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((this.state.currentPage+move-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: this.state.currentPage+move,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n        }\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={move=>{this.props.loadPage(move)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n                            /*\n            let imgMSG = document.createElement(\"DIV\");\n            imgMSG.classList.add(\"zettel_msg\");\n            if(zettel.sibling>0){\n                imgMSG.innerHTML = \"<span style='color: var(--contraColor);' title='Geschwisterzettel'>&#x273F;</span>\"\n            }\n            if(zettel.date_sort===9 && zettel.date_own === null){\n                imgMSG.innerHTML +=\"<span style='color: var(--errorStat);' title='Datierung erforderlich'>&#x0021;</span>\";\n            }\n            box.appendChild(imgMSG);\n            */\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img className={classList} src={zettel.img_path+\".jpg\"}></img>\n                <div className=\"zettel_msg\"></div>\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            /*item: this.props.item,*/\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            backgroundColor: \"white\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style}>\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(!isNaN(e.target.value)&&e.target.value!==\"\"&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            return (\n    <div style={style}>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" col=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id})}} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                if(this.state.date_type===9&&!Number.isInteger(this.state.date_own)){\n                    this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                } else {\n                    let nVals = {\n                        id: this.state.id,\n                        type: this.state.type,\n                        work_id: this.state.work_id,\n                        user_id: arachne.user.id\n                    };\n                    this.props.status(\"saving\");\n                    if(this.state.lemma_id==null&&this.state.newLemma_Lemma!=\"\"){this.setState({addLemma: true})}\n                    else {nVals.lemma_id = this.state.lemma_id}\n                    if(this.state.date_type===9&&Number.isInteger(this.state.date_own)){\n                        nVals.date_own = this.state.date_own;\n                        nVals.date_own_display = this.state.date_own_display;\n                    }\n                    await arachne.zettel.save(nVals)\n                    this.props.status(\"saved\");\n                    this.props.onUpdate([this.state.id]);\n                }\n                }} /></div>\n        </div>\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\" col=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                /*case 4:\n                    inputType = <input type=\"text\" value=\"lemma\" />;\n                    break;*/                \n            }\n            return <div style={style}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={[[1, \"Lemma\"],[2, \"Zitiertitel\"],[3,\"Zettel-Typ\"]/*,[4,\"Projekt\"]*/]} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.user.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Opera } from \"./opera.js\";\nimport { Help, Import, Server } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {\n    shadow: \"#3c6e71\"\n}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\"Zettel-Datenbank\": \"zettel\"/*,\n                \"Lemmaliste\": \"lemma\",\n                \"Volltext-Suche\": \"fulltext\"*/}\n            },\n            /*\"Verzeichnisse\": {\n                visible: false, \n                items: {\n                \"opera-maiora\":\"maiora\",\n                \"opera-minora\":\"minora\",\n                /*\"Ressourcen\":\"ressources\",\n                \"Sekundärliteratur\":\"seklit\"\n            }},*/\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                \"Hilfe\":\"help\",\n                \"Server\": \"server\",\n                \"Import\": \"import\",\n                /*\"Konto\":\"account\",\n                \"Statistiken\":\"stats\",*/\n                \"abmelden\":\"logout\"\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n            backgroundColor: \"white\"\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    backgroundColor: \"white\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries} style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainMenu\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"server\":\n                    main = <Server />\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" />\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" />\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    throw new Error(`ARGOS: unknown res in 'loadMain': ${this.state.res}`);\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        const tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\"];\n        if(email!==\"\"&&password!==\"\"&&await arachne.open(email, password, tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}