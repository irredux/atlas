{"version":3,"sources":["arachne.js","settings.js","elements.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","newValues","rId","Array","isArray","id","body","response","parseInt","text","arachne","user","password","tbls","reUser","tables","tbl","Help","style","padding","href","React","Component","Status","props","state","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","type","display","backgroundColor","color","fontSize","icon","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","setState","faCat","faCheckCircle","faTimesCircle","faCloudMoon","value","ref","position","bottom","left","boxShadow","transition","borderRadius","overflow","zIndex","top","SelectMenu","op","width","onChange","event","pointerEvents","textAlign","margin","faAngleDown","AutoComplete","defaultValue","cInput","items","currentItemId","itemLst","inputStyle","length","col","item","itemStyle","onClick","e","selectItemClick","target","textContent","onKeyDown","selectItem","keyCode","onBlur","leave","change","currentItemIndex","input","get","SelectorWrapper","className","children","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","map","child","includes","keys","selectCallback","targetId","inRange","newIds","forEach","filter","itemId","parseHTML","i","__html","DOMPurify","sanitize","replace","ADD_TAGS","SearchInput","marginRight","marginBottom","border","placeholder","faMinusCircle","removeSearchFields","SearchBox","queryTxt","nextID","searchFields","sOrder","cSF","sF","gridArea","flexWrap","alignItems","faPlusCircle","addSearchFields","float","marginTop","sendQuery","marginLeft","parse","nSearchFields","s","exportSF","document","querySelectorAll","searchQuery","alert","Zettel","selectionDetail","gridTemplateColumns","gridTemplateRows","rowGap","q","loadPage","move","currentElements","currentPage","pageMax","showDetail","selection","itemDetail","close","newQuery","zettel","console","log","queryOrder","Math","floor","ZettelBox","cEls","cEl","testProp","ZettelCard","img_path","classList","in_use","src","dangerouslySetInnerHTML","lemma_display","opus","height","date_display","txt","ZettelAside","addLemma","ressources","batchType","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_work_id","batch_type","right","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","indexOf","newLemmaValue","lemma","MLW","Fragezeichen","Stern","lemma_nr","save","newId","setItem","cRes","keyCount","label","dateOwn","dateStyle","borderTop","paddingTop","date_type","lemma_search","ac_web","nVals","work_id","lemma_id","inputType","skipSave","newValue","newKey","newValueLst","cId","newValueObj","edition","res","catch","cItem","colors","MainMenu","menuEntries","currentSubmenu","onTop","justifyContent","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","login","addEventListener","newStatus","main","Error","gridColumn","gridRow","name","email","querySelector","open","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6fb54b13.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n                //throw new Error(\"ARACHNE: connection failed!\");\n            }//window.open(\"/\", \"_self\")}\n        });\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n    }\n    async open(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n\n            let reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n            if(re.status === 200){this.user = await reUser.json();}\n            else {return false;}\n            if(tbls == null){tbls = await this.tables()}\n            for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n            return true;\n        }else{\n            return false;\n        }\n    }\n    async close(){\n        this.key = null;\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import React from \"react\";\n\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Help };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                backgroundColor: \"white\",\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}>{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\n\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n    componentDidUpdate(){}\n}\n\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            defaultValue: this.props.value,\n            cInput: this.props.value,\n            items: [],\n            currentItemId: null\n        };\n    }\n    render(){\n        let itemLst = [];\n        let style = {\n            position: \"absolute\",\n            backgroundColor: \"white\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let inputStyle = {};\n        if(this.state.items.length===1&&this.state.items[0][this.props.col]===this.state.cInput){\n            inputStyle = {color: \"#2364AA\"};\n            style.display = \"none\";\n        } else if(this.state.items.length>0){\n            for(const item of this.state.items){\n                let itemStyle = {};\n                if(this.state.currentItemId===item.id){itemStyle.color=\"#2364AA\"}\n                itemLst.push(<div key={item.id} onClick={e=>{this.selectItemClick(e.target.textContent)}} style={itemStyle}>{item[this.props.col]}</div>);\n\n            }\n        } else {style.display = \"none\"}\n        return (\n        <div>\n            <input type=\"text\" style={inputStyle} onKeyDown={e=>{this.selectItem(e.keyCode)}} onBlur={()=>{setTimeout(()=>{this.leave()},100)}} onChange={e=>{this.change(e.target.value)}} value={this.state.cInput} />\n            <div style={style}>{itemLst}</div>\n        </div>);\n    }\n    selectItemClick(value){this.change(value)}\n    selectItem(keyCode){\n        if(keyCode===38&&this.state.currentItemIndex>0){\n            this.setState({currentItemIndex: this.state.currentItemIndex-1, currentItemId: this.state.items[this.state.currentItemIndex-1].id});\n        } else if (keyCode===40&&this.state.currentItemIndex<this.state.items.length){\n            this.setState({currentItemIndex: this.state.currentItemIndex+1, currentItemId: this.state.items[this.state.currentItemIndex+1].id});\n        } else if (keyCode===13){\n            this.change(this.state.items[this.state.currentItemIndex][this.props.col]);\n        }\n    }\n    leave(){if(this.state.items.length>1){this.setState({items: []})}}\n    change(input){\n        if(input!==\"\"&&input!==this.state.cInput){\n            let search = {};\n            search[this.props.col] = input+\"*\";\n            arachne[this.props.tbl].get(search, {select: [\"id\", this.props.col], limit:10})\n            .then(re=>{\n                if(re.length>0){\n                    this.props.onChange(((re.length===1&&re[0][this.props.col]===input)?re[0].id:null),input);\n                    this.setState({cInput: input, items: re, currentItemIndex: 0, currentItemId: re[0].id});\n                } else {\n                    this.props.onChange(null,input);\n                    this.setState({cInput: input, items: []});\n                }\n            });\n        } else if (input===\"\"){\n            this.props.onChange(null,input);\n            this.setState({cInput: \"\", items: []});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.defaultValue!==this.props.value){this.setState({defaultValue: this.props.value, cInput: this.props.value})}\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className=\"selectWrapper\" style={this.props.style} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\n\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {React.Children.map(this.props.children, child => {\n            return <SelectorWrapper style={{boxShadow: this.state.ids.includes(child.props.id)?\"0px 3px 18px var(--shadowBG)\":null, transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&keys.meta){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\n\nexport { parseHTML, Status, SelectMenu, Selector, AutoComplete };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { arachne } from \"./arachne.js\";\nimport { parseHTML, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        return (\n        <div className=\"searchFields\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\", backgroundColor: \"white\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"lemma\">Lemma</option>\n                <option value=\"type\">Typ</option>\n                <option value=\"id\">ID</option>\n                <option value=\"opus\">Werk</option>\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">!=</option>\n                <option value=\">\">&gt;</option>\n                <option value=\"<\">&lt;</option></select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n        this.sOrder = null;\n    }\n    render(){\n        const searchBox = {\n            boxShadow: \"0 0 2px #d9d9d9\",\n            backgroundColor: \"rgb(253, 253, 253)\",\n            margin: \"0 -20px 0 -20px\",\n            padding: \"12px 24px\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\"\n        };\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div style={searchBox}>\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", backgroundColor: \"var(--mainBG)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={[['[\"id\"]', \"ID\"], ['[\"lemma_search\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]} onChange={event=>{this.sOrder = JSON.parse(event.target.value)}} />\n            </div>\n        </div>\n    }\n\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF, this.sOrder)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox searchQuery={(q,order) => {this.searchQuery(q,order)}}\n            gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"} />\n            <ZettelBox\n                loadPage={move => {this.loadPage(move)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                pageMax={this.state.pageMax}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside status={this.props.status} close={() =>{this.setState({itemDetail: null})}} selection={this.state.selectionDetail} item={this.state.itemDetail} />:\"\"}\n        </div>\n        );\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            pageMax: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements\n        });\n    }\n    async loadPage(move){\n        if(this.state.currentPage+move>0&&this.state.currentPage+move<=this.state.pageMax){\n            const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((this.state.currentPage+move-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: this.state.currentPage+move,\n                currentElements: currentElements\n            });\n        }\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                /*if(this.state.selection.currentId===cEl.id){\n                    this.props.showDetail({selection: this.state.selection, item: cEl});\n                };*/\n                cEls.push(<ZettelCard testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} /*showDetail={\n                    (item, selection) => {\n                        //this.setState({item: cEl});\n                        this.props.showDetail({selection: selection, item: item});\n                    }\n                }*/\n                 />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <div id=\"navItems\">\n                    <span onClick={()=>{this.props.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\">{this.props.currentPage} von {this.props.pageMax}</span>\n                    <span onClick={()=>{this.props.loadPage(1)}}>&gt;</span>\n                </div>\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n                            /*\n            let imgMSG = document.createElement(\"DIV\");\n            imgMSG.classList.add(\"zettel_msg\");\n            if(zettel.sibling>0){\n                imgMSG.innerHTML = \"<span style='color: var(--contraColor);' title='Geschwisterzettel'>&#x273F;</span>\"\n            }\n            if(zettel.date_sort===9 && zettel.date_own === null){\n                imgMSG.innerHTML +=\"<span style='color: var(--errorStat);' title='Datierung erforderlich'>&#x0021;</span>\";\n            }\n            box.appendChild(imgMSG);\n            */\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style} onClick={() => {/*this.props.showDetail()*/}}>\n                <img className={classList} src={zettel.img_path+\".jpg\"}></img>\n                <div className=\"zettel_msg\"></div>\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            style.height = \"var(--zettelHeight)\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style} onClick={() =>{/*this.props.showDetail(this.props.item)*/}}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma'>{zettel.lemma_display}</div>\n                    <div className='digitalZettelDate'>{zettel.date_display}</div>\n                    <div className='digitalZettelWork'>{zettel.opus}</div>\n                    <div className='digitalZettelText'>{zettel.txt}</div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            item: this.props.item,\n            ressources: [],\n            batchType: 1,\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_work_id: null,\n            batch_type: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            backgroundColor: \"white\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){\n            // add lemma\n            return <div style={style}>\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setItem(\"lemma_search\", this.state.newLemma_Lemma);\n                        this.setItem(\"lemma_id\", newId);\n                        this.setState({addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){\n            // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url}>{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.item.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine eigene Datierung.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Eigenes Sortier-datum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Eigenes Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" /></div>\n            ];\n            }\n            return (\n    <div style={style}>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.item.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.item.type} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"]]} onChange={event=>{this.setItem(\"type\", parseInt(event.target.value))}} />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(id, value)=>{this.setItem(\"lemma_id\", id);this.setState({newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.item.lemma_search} tbl=\"lemma\" col=\"lemma_search\" />\n            </div>\n            {this.state.item.type!==4 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.item.type!==4 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.item.ac_web} tbl=\"work\" col=\"ac_web\" onChange={(id, value)=>{this.setItem(\"work_id\", id)}} /></div> : null}\n        </div>\n        {this.state.item.type!==4 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{this.state.item.date_display}</div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.ressources.length>0?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                let nVals = {\n                    id: this.state.item.id,\n                    type: this.state.item.type,\n                    work_id: this.state.item.work_id\n                };\n                if(this.state.item.lemma_id==null&&this.state.newLemma_Lemma!=\"\"){\n                    // create new lemma\n                    this.props.status(\"saving\");\n                    await arachne.zettel.save(nVals)\n                    this.props.status(\"saved\");\n                    this.setState({addLemma: true});\n                } else {\n                    nVals.lemma_id = this.state.item.lemma_id;\n                    this.props.status(\"saving\");\n                    await arachne.zettel.save(nVals)\n                    this.props.status(\"saved\");\n                }\n                }} /></div>\n        </div>\n    </div>\n            );\n        } else {\n            // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(id, value)=>{this.setState({batch_lemma_id: id})}} value=\"\" tbl=\"lemma\" col=\"lemma_search\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value=\"\" tbl=\"work\" col=\"ac_web\" onChange={(id, value)=>{this.setState({batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                /*case 4:\n                    inputType = <input type=\"text\" value=\"lemma\" />;\n                    break;*/                \n            }\n            return <div style={style}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={[[1, \"Lemma\"],[2, \"Zitiertitel\"],[3,\"Zettel-Typ\"]/*,[4,\"Projekt\"]*/]} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            //this.setItem(\"type\", parseInt(event.target.value))\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"batch_type\";newValue=this.state.batch_type}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.item.work_id>0){\n            arachne.edition.get({work_id: this.state.item.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    setItem(key, value){\n        let cItem = this.state.item;\n        if(cItem[key]!==value){\n            cItem[key] = value;\n            this.setState({item: cItem});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.item.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({addLemma: false, item:this.props.item, ressources: res});\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false, item:this.props.item, ressources: []})}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Help } from \"./settings.js\";\nimport { Status } from \"./elements.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {\n    shadow: \"#3c6e71\"\n}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\"Zettel-Datenbank\": \"zettel\"/*,\n                \"Lemmaliste\": \"lemma\",\n            \"Volltext-Suche\": \"fulltext\"*/}\n            },\n            /*\"Verzeichnisse\": {\n                visible: false, \n                items: {\n                \"opera-maiora\":\"maiora\",\n                \"opera-minora\":\"minora\",\n                \"Ressourcen\":\"ressources\",\n                \"Sekundärliteratur\":\"seklit\"\n            }},*/\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                \"Hilfe\":\"help\",\n                /*\"Konto\":\"account\",\n                \"Statistiken\":\"stats\",*/\n                \"abmelden\":\"logout\"\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n            backgroundColor: \"white\"\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    backgroundColor: \"white\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}>{subEntry}</div>);\n                    }\n                    subMenu = <div key={subMenuEntries} style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainMenu\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {login: false, res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                login: false,\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.login){\n            // hurra, login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    throw new Error(`ARGOS: unknown res in 'loadMain': ${this.state.res}`);\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    \n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        const tbls = [\"edition\", \"lemma\", \"work\", \"zettel\"];\n        if(email!==\"\"&&password!==\"\"&&await arachne.open(email, password, tbls)){\n            this.setState({login: true});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}