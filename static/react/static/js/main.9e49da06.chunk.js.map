{"version":3,"sources":["arachne.js","elements.js","lemma.js","opera.js","ressources.js","settings.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","newValues","rId","Array","isArray","id","body","response","parseInt","text","arachne","me","user","password","tbls","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","data","newForm","mode","rights","parse","every","r","access","includes","SearchInput","props","item","searchOptions","value","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","type","placeholder","onKeyUp","e","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","React","Component","SearchBox","queryTxt","state","nextID","searchFields","sOrder","cSF","sF","sendQuery","gridArea","faPlusCircle","position","top","fontSize","addSearchFields","float","marginTop","marginLeft","display","sortOptions","onChange","event","target","nSearchFields","filter","s","setState","exportSF","document","querySelectorAll","children","length","searchQuery","alert","Navigator","currentPage","scrollTo","faAngleUp","loadPage","margin","textAlign","onBlur","isNaN","maxPage","prevProps","move","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","backgroundColor","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faCloudMoon","ref","bottom","left","transition","borderRadius","overflow","zIndex","SelectMenu","op","classList","pointerEvents","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","i","option","col","dataset","cursor","changeInputValue","onKeyDown","changeSelectedOption","newValue","get","newOptions","SelectorWrapper","isSelected","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","map","child","keys","selectCallback","targetId","inRange","newIds","forEach","itemId","preset","el","querySelector","scrollIntoView","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","Lemma","gridTemplateColumns","gridTemplateRows","rowGap","q","newPage","currentElements","showDetail","onUpdate","reloadEntry","lemma","newItem","indexOfNewItem","findIndex","newQuery","console","log","queryOrder","Math","floor","selectionDetail","LemmaBox","selection","cEls","cEl","onDoubleClick","find","closest","title","dangerouslySetInnerHTML","lemma_display","dicts","comment","LemmaAside","homonym","MLW","Stern","Fragezeichen","right","newLemmaValue","lemma_nr","save","ressource","work_id","editor","year","volume","volumeContent","serie","location","library","signature","OperaAside","OperaBox","oLst","trLst","cHitId","hits","hitIndex","scrollRef","editionLst","editions_id","editionsId","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","arrow","faExternalLinkAlt","cLabel","href","rel","hitStyle","some","listName","abbr","full","author_id","date_display","bibliography","citation","oMax","nextPage","cSearch","maxHits","faBackward","gotoSearchResult","faForward","getAll","getLst","behavior","block","Opera","pageMax","itemDetail","reloadZettel","Ressource","workLst","work","in_use","works","newWorkLst","ac_web","getWorks","edition","RessourceBox","resTypes","label","opus","RessourceAside","vol_cont","Statistics","tab","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","Object","datasets","values","borderColor","borderWidth","height","plugins","legend","zettel_types_data","zettel_types","zettel_created_data","zettel_created","aspectRatio","zettel_changed_data","zettel_changed","fill","lemmaBox","lemmaCharts","lemma_letters_data","ressourceBox","ressourceCharts","ressource_fullTexts_data","ressource_fullTexts","styleBody","mainBody","styleTab","styleTabActive","borderBottom","justifyContent","zettel","zettels","process","abgeschlossen","z","lemma_id","unbearbeitet","reduce","previousValue","currentValue","types","verzettelt","Index","Exzerpt","Literatur","created","changed","years","range","start","stop","from","_","Date","now","getFullYear","months","getMonth","month","c_date","u_date","getZettel","lemmata","letters","letter","l","substring","toUpperCase","Rest","getLemmata","scan","scans","fullTexts","full_text","full_tet","getRessources","Server","users","gridGap","exec","userRows","first_name","last_name","join","agent","session_last_active","faSun","faMoon","newUsers","loadUsers","Import","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","scanPath","name","accept","multiple","files","newEditionId","uploadForm","FormData","append","fLength","importScans","scan_lnk","edition_id","scanLnks","scanLst","scanLnk","scan_id","nScan","missLst","file","fName","cScan","filename","fileTxt","editions","newEditionLst","loadOptions","Help","Zettel","presetSelection","openNextItem","lastIndex","ZettelBox","testProp","ZettelCard","img_path","alt","src","txt","ZettelAside","addLemma","ressources","batchType","date_type","lemma_ac","date_own","date_own_display","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","newId","cRes","keyCount","dateOwn","dateStyle","borderTop","paddingTop","saveDetail","inputType","skipSave","newKey","newValueLst","cId","newValueObj","user_id","res","catch","next","Number","isInteger","nVals","focus","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","addEventListener","newStatus","close","main","Error","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","email","createAccount","login","checkSession","open","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9e49da06.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n                //throw new Error(\"ARACHNE: connection failed!\");\n            }//window.open(\"/\", \"_self\")}\n        });\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n        this.me = null;\n    }\n    async open(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            const reUser = await this.getUser();\n            if(reUser){\n                this.me = reUser;\n                this.me.selectKey = 'ctrl';\n                if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n            }\n            else {return false;}\n\n            if(tbls == null){tbls = await this.tables()}\n            for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n            return true;\n        }else{\n            return false;\n        }\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n        this.sOrder = null;\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} clickButton={()=>{this.sendQuery()}} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={this.props.sortOptions} onChange={event=>{this.sOrder = JSON.parse(event.target.value)}} />\n            </div>\n        </div>\n    }\n\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF, this.sOrder)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.col]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.col]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.col] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.col], limit:10, order: [this.props.col]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.col], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView()};\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu } from \"./elements.js\";\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"], [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Lemma\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <LemmaBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<LemmaAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} />:\"\"}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id} dangerouslySetInnerHTML={parseHTML(cEl.lemma_display)}></td><td>{cEl.dicts}</td><td dangerouslySetInnerHTML={parseHTML(cEl.comment)}></td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Lemmaansatz</th><th>Wörterbücher</th><th>Kommentar</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            lemma: this.props.item.lemma,\n            lemma_display: this.props.item.lemma_display,\n            homonym: this.props.item.homonym,\n            MLW: this.props.item.MLW,\n            Stern: this.props.item.Stern,\n            Fragezeichen: this.props.item.Fragezeichen\n        };\n    }\n    render(){\n        /*\n        <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        */\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.lemma} onChange={event=>{this.setState({lemma: event.target.value})}} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma-Anzeige:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={parseHTMLPreview(this.state.lemma_display)} onChange={event=>{this.setState({lemma_display: event.target.value})}} /></div>\n        </div>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({homonym: event.target.value})}} value={this.state.homonym} /></div>\n            <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n            <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({MLW: event.target.value})}} value={this.state.MLW} /></div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Stern: event.target.value})}} value={this.state.Stern} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Fragezeichen: event.target.value})}} value={this.state.Fragezeichen} /></div>\n            <div style={{gridArea: \"6/2/6/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                if(this.state.lemma===\"\" || this.state.lemma.indexOf(\" \")>-1){\n                    this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                } else if(this.state.lemma_display===\"\"){\n                    this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                } else {\n                    let newLemmaValue = {\n                        id: this.state.id,\n                        lemma: this.state.lemma,\n                        lemma_display: this.state.lemma_display,\n                        MLW: this.state.MLW,\n                        Fragezeichen: this.state.Fragezeichen,\n                        Stern: this.state.Stern,\n                    };\n                    if(this.state.homonym>0){newLemmaValue.lemma_nr=this.state.homonym}\n                    const newId = await arachne.lemma.save(newLemmaValue);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate(this.state.id);\n                }\n            }} /></div>\n        </div>\n    </div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature\n            });\n        }\n    }\n}\n\nexport { Lemma };","import React from \"react\";\nimport { faExternalLinkAlt, faForward, faBackward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    render(){\n        return <div>Seite</div>;\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: []};\n    }\n    render(){\n        let trLst = [];\n        let i = 0;\n        const cHitId = (this.state.hits&&this.state.hits.length>0)?this.state.hits[this.state.hitIndex].id:0;\n        this.scrollRef = null;\n        for(const o of this.state.oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    let arrow = \"\";\n                    if(editionsURL&&editionsURL[iE]!=\"\"){\n                        cURL=editionsURL[iE];\n                        arrow = <span> <FontAwesomeIcon style={{fontSize:\"14px\"}} icon={faExternalLinkAlt} /></span>\n                    }\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\" rel=\"noreferrer\">{cLabel}{arrow}</a></li>);\n                }\n            }\n            i++;\n            let hitStyle = {};\n            if(o.id===cHitId){hitStyle = \"searchHit\"; this.scrollRef = React.createRef()}\n            else if(cHitId>0&&this.state.hits.some(i=>i.id===o.id)){hitStyle = \"searchAllHits\"}\n            if(this.state.listName==\"opera_maiora\"){\n                let abbr = `<aut>${o.abbr}</aut>`;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr= `<span>&nbsp;&nbsp;&nbsp;${o.abbr}</span>`;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push(<tr className={hitStyle} ref={o.id===cHitId?this.scrollRef:null} key={i}><td className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2\" dangerouslySetInnerHTML={parseHTML(abbr)}></td><td className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td><td className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td><td className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td></tr>);\n            } else if(this.state.listName===\"opera_minora\"){\n                trLst.push(<tr className={hitStyle} ref={o.id===cHitId?this.scrollRef:null} key={i}><td className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td><td className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td></tr>);\n            }\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n                <Navigator currentPage={this.state.currentPage} maxPage={this.state.oMax} loadPage={nextPage=>{this.loadPage(nextPage)}} />\n                <div className=\"operaBox\">\n                <table><tbody>{trLst}</tbody></table>\n                </div>\n                <div className=\"SearchBar mainColors\">Suche: <input type=\"text\" style={{boxShadow: \"none\", padding: \"0px\"}} onKeyUp={async e=>{\n                    if(e.keyCode === 13){\n                        if(e.target.value!=\"\"&&this.state.cSearch!=e.target.value){\n                            const hits = await arachne[this.props.listName].search([{c: \"search\", o: \"=\", v: e.target.value}], {select: [\"id\"]});\n                            if(hits.length>0){\n                                this.setState({hitIndex: 0, cSearch: e.target.value, maxHits: hits.length, hits: hits});\n                                this.loadPage(Math.floor(hits[0].id/30)+1);\n                            } else {\n                                this.setState({cSearch: e.target.value, maxHits: 0, hits: []});\n                            }\n                        }\n                    }\n                }} />\n                {this.state.maxHits>0&&<div style={{display:\"inline\", marginLeft: \"20px\"}}>\n                    <FontAwesomeIcon icon={faBackward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(-1)}} /> <span>{this.state.hitIndex+1}</span>/<span>{this.state.maxHits}</span> <FontAwesomeIcon icon={faForward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(1)}} />\n                </div>}\n                </div>\n            </div>;\n    }\n    gotoSearchResult(move){\n        if(move===1&&this.state.hitIndex<this.state.maxHits-1){\n            this.loadPage(Math.floor(this.state.hits[this.state.hitIndex+1].id/30)+1);\n            this.setState({hitIndex: this.state.hitIndex+1});\n        } else if (move===1){\n            this.loadPage(1);\n            this.setState({hitIndex: 0});\n        } else if (move===-1&&this.state.hitIndex>0){\n            this.loadPage(Math.floor(this.state.hits[this.state.hitIndex-1].id/30)+1);\n            this.setState({hitIndex: this.state.hitIndex-1});\n        } else if (move===-1){\n            this.loadPage(Math.floor(this.state.hits[this.state.maxHits-1].id/30)+1);\n            this.setState({hitIndex: this.state.maxHits-1});\n        }\n    }\n    async loadPage(newPage){\n        const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: (newPage-1)*30});\n        this.setState({oLst: oLst, currentPage: newPage});   \n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n            this.setState({listName: this.props.listName, oLst: oLst, oMax: Math.floor(oMax[0][\"count\"]/30)+1, currentPage: 1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oMax = await arachne[this.props.listName].getAll({count: true});\n                const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n                this.setState({oLst: oLst, listName: this.props.listName, oMax: Math.floor(oMax[0][\"count\"]/30)+1, currentPage: 1});\n            };\n            getLst();\n        }\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    /*showDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}*/\n                />\n                {this.state.selectionDetail?<OperaAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu } from \"./elements.js\";\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            workLst: []\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"opus\", \"Werk\"],\n                    [\"work_id\", \"Werk-ID\"],\n                    [\"ressource\", \"Ressource\"],\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <RessourceBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<RessourceAside workLst={this.state.workLst} status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} />:\"\"}\n        </div>\n        );\n    }\n    componentDidMount(){\n        const getWorks = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n        }\n        getWorks();\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a>öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kürzel</th><th>Typ</th><th>vrkn. Werk</th><th>Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\n\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            volumeContent: this.props.item.volumeContent,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i>\n        </div>\n\n        <div style={{gridArea: \"3/1/3/2\"}}>Werk:</div>\n        <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={this.props.workLst} value={this.state.work_id} onChange={e=>{this.setState({work_id: e.target.value})}} /></div>\n        <div style={{gridArea: \"4/1/4/2\"}}>Ressource:</div>\n        <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></div>\n        {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Editor:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Jahr:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Band:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volume} onChange={e=>{this.setState({volume: e.target.value})}} /></div>,\n            <div key=\"6\" style={{gridArea: \"8/1/8/2\"}}>Bandinhalt:</div>,\n            <div key=\"7\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volumeContent} onChange={e=>{this.setState({volumeContent: e.target.value})}} /></div>,\n            <div key=\"8\" style={{gridArea: \"9/1/9/2\"}}>Reihe:</div>,\n            <div key=\"9\" style={{gridArea: \"9/2/9/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></div>\n        ]:null}\n        {this.state.ressource===2?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Stadt:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Bibliothek:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.library} onChange={e=>{this.setState({library: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Signatur:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.signature} onChange={e=>{this.setState({signature: e.target.value})}} /></div>\n        ]:null}\n        {this.state.ressource===3||this.state.ressource===4?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Drucker:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Ort:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Jahr:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n        ]:null}\n        <div style={{gridArea: \"11/2/11/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            if((this.state.type===0||this.state.type===1||this.state.type===5)&&(!this.state.editor||!this.state.year)){\n                this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n            } else {\n                this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                // create new edition\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work,\n                    ressource: this.state.type,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.volumeContent,\n                    serie: this.state.serie,\n                    /*comment,*/\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature\n                });\n                this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n                this.props.onUpdate(this.state.id);\n            }\n        }} /></div>\n    </div>\n</div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature\n            });\n        }\n    }\n}\n\nexport { Ressource };","import React from \"react\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"lemma\",\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // bearbeitungsstand\n            const zettel_process_data = {\n                labels: Object.keys(this.state.zettel_process),\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: Object.values(this.state.zettel_process),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltyp\n            const zettel_types_data = {\n                labels: Object.keys(this.state.zettel_types),\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: Object.values(this.state.zettel_types),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // erstelldatum\n            const zettel_created_data = {\n                labels: Object.keys(this.state.zettel_created),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.zettel_created),\n                    backgroundColor: ['#114B79', '#347F9F'],\n                    borderColor: ['#1B3B6F', '#065A82'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{gridArea: \"2/1/2/3\", width: \"100%\", height: \"400px\"}}><h4>nach Erstelldatum</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: false}}}} data={zettel_created_data} /></div>);\n\n            // änderungsdatum\n            const zettel_changed_data = {\n                labels: Object.keys(this.state.zettel_changed),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.zettel_changed),\n                    backgroundColor: ['#D2EFF4'],\n                    borderColor: ['#1B3B6F'],\n                    borderWidth: 1,\n                    fill: true,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{gridArea: \"3/1/3/3\", width: \"100%\", height: \"400px\"}}><h4>nach Änderungsdatum</h4><Line options={{aspectRatio: false, plugins: {legend:{display: false}}}} data={zettel_changed_data} /></div>);\n\n            zettelBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px 500px 500px\"}}>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: Object.keys(this.state.lemma_letters),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.lemma_letters),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (Sternwort, in MLW, usw.)\n\n\n            lemmaBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            const ressource_fullTexts_data = {\n                labels: Object.keys(this.state.ressource_fullTexts),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.ressource_fullTexts),\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Volltext</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_fullTexts_data} /></div>);\n\n            ressourceBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{ressourceCharts}</div>;\n        }\n        \n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"block\",\n        }\n        let mainBody = <div style={styleBody}></div>;\n                /*\n            {ressourceBox}\n        </div>;*/\n        switch(this.state.tab){\n            case \"lemma\":\n                mainBody = <div style={styleBody}>{lemmaBox}</div>;\n                break;\n            case \"zettel\":\n                mainBody = <div style={styleBody}>{zettelBox}</div>;\n                break;\n                case \"ressource\":\n                    mainBody = <div style={styleBody}>{ressourceBox}</div>;\n                    break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 10% 0 10%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {padding: \"5px 10px\", cursor: \"default\"};\n        const styleTabActive = {padding: \"5px 10px\", borderBottom: \"1px solid red\", cursor: \"default\"};\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"lemma\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"lemma\"})}}>Lemma</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n                <div style={this.state.tab===\"ressource\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ressource\"})}}>Ressourcen</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const getZettel = async () => {\n            const zettels = await arachne.zettel.getAll({select: [\"work_id\", \"lemma_id\", \"type\", \"c_date\", \"u_date\"]});\n            // process\n            let process = {\n                abgeschlossen: zettels.filter(z => (z.work_id>0&&z.lemma_id>0)||(z.type===4)).length,\n                \"nur Werk\":  zettels.filter(z => z.work_id>0&&!(z.lemma_id>0)).length,\n                \"nur Lemma\": zettels.filter(z => !(z.work_id>0)&&z.lemma_id>0).length\n            }\n            process.unbearbeitet = zettels.length - Object.values(process).reduce((previousValue, currentValue) => previousValue+currentValue);\n\n            // types\n            let types = {\n                verzettelt: zettels.filter(z => z.type===1).length,\n                Index: zettels.filter(z => z.type===2).length,\n                Exzerpt: zettels.filter(z => z.type===3).length,\n                Literatur: zettels.filter(z => z.type===4).length,\n            }\n            types[\"ohne Typ\"] = zettels.length-Object.values(types).reduce((previousValue, currentValue)=>previousValue+currentValue);\n            \n            // created + changed\n            const range = (start, stop) => Array.from({ length: (stop-start)+1}, (_, i) => start + (i));\n            let created = {};\n            let changed = {};\n            let years = range(2020, new Date(Date.now()).getFullYear());\n            for(const year of years){\n                let months = range(1,12);\n                if(year===new Date(Date.now()).getFullYear()){\n                    months = range(1, new Date(Date.now()).getMonth()+1);\n                }\n                for(const month of months){\n                    created[`${year}-${month}`] = zettels.filter(z => new Date(z.c_date).getFullYear()===year&&new Date(z.c_date).getMonth()+1===month).length;\n                    changed[`${year}-${month}`] = zettels.filter(z => new Date(z.u_date).getFullYear()===year&&new Date(z.u_date).getMonth()+1===month).length;\n                }\n            }\n            this.setState({zettel_process: process, zettel_types: types, zettel_created: created, zettel_changed: changed});\n        };\n        getZettel();\n\n        const getLemmata = async () => {\n            const lemmata = await arachne.lemma.getAll({select: [\"lemma\"]});\n\n            let letters = {\"A\":0, \"B\":0, \"C\":0, \"D\":0, \"E\":0, \"F\":0, \"G\":0, \"H\":0, \"I\":0, \"K\":0, \"L\":0, \"M\":0, \"N\":0, \"O\":0, \"P\":0, \"Q\":0, \"R\":0, \"S\":0, \"T\":0, \"U\":0, \"V\":0, \"X\":0, \"Y\":0, \"Z\":0};\n            for(const letter of Object.keys(letters)){\n                letters[letter] = lemmata.filter(l => l.lemma.substring(0,1).toUpperCase()===letter).length;\n            }\n            letters.Rest = lemmata.length - Object.values(letters).reduce((previousValue, currentValue) => previousValue+currentValue);\n            this.setState({lemma_letters: letters});\n        };\n        getLemmata();\n\n        const getRessources = async () => {\n            const scans = await arachne.scan.getAll({select: [\"full_text\"]});\n            let fullTexts = {\n                \"mit Volltext\": scans.filter(s => s.full_text!=null&&s.full_tet!=\"\").length\n            }\n            fullTexts[\"ohne Volltext\"] = scans.length - Object.values(fullTexts).reduce((previousValue, currentValue) => previousValue+currentValue);\n            this.setState({ressource_work: 1, ressource_fullTexts: fullTexts});\n        }\n        getRessources();\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"updateOpera\",\n            users: []\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"updateOpera\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Damit Änderungen in den <i>opera</i>-Listen oder Änderungen in den Ressourcen in den Listen sichtbar werden, müssen sie auf dem Server aktualisiert werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"opera-Listen aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        const reStatus = await arachne.exec(\"opera_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"accounts\":\n                styleBody.display = \"block\";\n                let userRows = [];\n                // online: 30*60*1000 = 1800000\n                for(const user of this.state.users){\n                    userRows.push(<tr key={user.id}><td>{user.first_name} {user.last_name}</td><td>{JSON.parse(user.access).join(\", \")}</td><td>{user.agent}</td><td>{Date.now()-new Date(user.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td></tr>)\n                }\n                mainBody = <div style={styleBody}><table className=\"minorTxt\" width=\"100%\"><tbody>{userRows}</tbody></table></div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"updateOpera\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateOpera\"})}}>Opera-Listen</div>\n                {arachne.access(\"admin\")?<div style={this.state.tab===\"accounts\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"accounts\"})}}>Kontenverwaltung</div>:null}\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){\n            const loadUsers = async () => {\n                const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n                this.setState({users: newUsers});\n            };\n            loadUsers();\n        }\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            editionLst: [],\n            scanWork: 1,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                /*comment,*/\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.editionLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLnks = await arachne.scan_lnk.get({edition_id: this.state.ocrRessource});\n                            let scanLst = [];\n                            for(const scanLnk of scanLnks){\n                                const nScan = await arachne.scan.get({id: scanLnk.scan_id})\n                                scanLst.push(nScan[0]);\n                            }\n                            let missLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    await arachne.scan.save({id: cScan.id, full_text: fileTxt})\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                break;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const editions = await arachne.edition.getAll({select: [\"id\", \"label\"], order: [\"label\"]});\n            let newEditionLst = [];\n            for(const edition of editions){\n                newEditionLst.push([edition.id, edition.label]);\n            }\n            this.setState({editionLst: newEditionLst});\n\n        }\n        loadOptions();\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Help, Import, Server, Statistics };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"],\n                    [\"type\", \"Typ\"],\n                    [\"id\", \"ID\"],\n                    [\"opus\", \"Werk\"],\n                    [\"date_type\", \"Datum-Typ\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <ZettelBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                presetSelection={this.state.presetSelection}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} openNextItem={()=>{this.openNextItem()}} />:\"\"}\n        </div>\n        );\n    }\n    openNextItem(){\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img alt=\"\" className={classList} src={zettel.img_path+\".jpg\"}></img>\n                <div className=\"zettel_msg\">{zettel.date_display}</div>\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            /*item: this.props.item,*/\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style} className=\"mainColors\">\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(!isNaN(e.target.value)&&e.target.value!==\"\"&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            return (\n    <div style={style} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} classList=\"zettel_type\" />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" col=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id})}} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}>\n                <input type=\"button\" value=\"speichern\" onClick={()=>{this.saveDetail()}} />\n                <input type=\"button\" value=\"speichern&weiter\" style={{marginTop: \"10px\"}} onClick={()=>{this.saveDetail(true)}} />\n            </div>\n        </div>\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\" col=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                /*case 4:\n                    inputType = <input type=\"text\" value=\"lemma\" />;\n                    break;*/\n                default:\n                    inputType = <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n            }\n            return <div style={style} className=\"mainColors\">\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={[[1, \"Lemma\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]/*,[4,\"Projekt\"]*/]} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.user.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})}\n        }\n    }\n    async saveDetail(next=false){\n        if(this.state.date_type===9&&!Number.isInteger(this.state.date_own)){\n            this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n        } else {\n            let nVals = {\n                id: this.state.id,\n                type: this.state.type,\n                work_id: this.state.work_id,\n                user_id: arachne.user.id\n            };\n            this.props.status(\"saving\");\n            if(this.state.lemma_id===null&&this.state.newLemma_Lemma!==\"\"){this.setState({addLemma: true})}\n            else {nVals.lemma_id = this.state.lemma_id}\n            if(this.state.date_type===9&&Number.isInteger(this.state.date_own)){\n                nVals.date_own = this.state.date_own;\n                nVals.date_own_display = this.state.date_own_display;\n            }\n            await arachne.zettel.save(nVals)\n            this.props.status(\"saved\");\n            if(next){\n                document.querySelector(\"select.zettel_type\").focus();\n                this.props.openNextItem();\n            }else{this.props.onUpdate([this.state.id]);}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./opera.js\";\nimport { Ressource } from \"./ressources.js\";\nimport { Help, Import, Server, Statistics } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {shadow: \"#3c6e71\"}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\n                    \"Zettel-Datenbank\": \"zettel\",\n                    \"Lemmaliste\": \"lemma\",\n                    /*\"Volltext-Suche\": \"fulltext\",*/\n            }},\n            \"Verzeichnisse\": {\n                visible: false, \n                items: {\n                    \"opera-maiora\":\"maiora\",\n                    \"opera-minora\":\"minora\",\n                    \"Ressourcen\":\"ressources\",\n                    /*\"Sekundärliteratur\":\"seklit\",*/\n            }},\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                    \"Hilfe\":\"help\",\n                    \"Konto\":\"account\",\n                    \"Server\": \"server\",\n                    \"Import\": \"import\",\n                    \"Statistiken\":\"stats\",\n                    \"abmelden\":\"logout\",\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries}  className=\"mainColors\" style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainColors\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"ressources\":\n                    main = <Ressource status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"stats\":\n                    main = <Statistics status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"server\":\n                    main = <Server status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"lemma\":\n                    main = <Lemma status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    throw new Error(`ARGOS: unknown res in 'loadMain': ${this.state.res}`);\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){this.setState({mode: \"main\"})}\n        }\n        checkSession();\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        const tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\"];\n        if(email!==\"\"&&password!==\"\"&&await arachne.open(email, password, tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}