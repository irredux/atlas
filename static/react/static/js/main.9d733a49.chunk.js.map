{"version":3,"sources":["arachne.js","elements.js","opera.js","settings.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","newValues","rId","Array","isArray","id","body","response","parseInt","text","arachne","user","password","tbls","reUser","tables","tbl","data","newForm","mode","Navigator","props","state","currentPage","onClick","scrollTo","icon","faAngleUp","loadPage","style","width","border","boxShadow","padding","margin","textAlign","type","value","onChange","e","setState","target","onBlur","isNaN","maxPage","prevProps","move","React","Component","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","display","backgroundColor","color","fontSize","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faCloudMoon","ref","position","bottom","left","transition","borderRadius","overflow","zIndex","className","top","SelectMenu","op","event","pointerEvents","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","length","i","option","col","dataset","cursor","changeInputValue","onKeyDown","changeSelectedOption","newValue","get","newOptions","keyCode","SelectorWrapper","children","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","map","child","includes","keys","selectCallback","targetId","inRange","newIds","forEach","filter","itemId","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","OperaAside","OperaBox","oLst","trLst","editionLst","editions_id","editionsId","parse","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","cLabel","href","listName","abbr","full","work_id","author_id","dangerouslySetInnerHTML","date_display","bibliography","comment","citation","gridArea","oMax","nextPage","newPage","getAll","Math","floor","getLst","Opera","selectionDetail","gridTemplateColumns","gridTemplateRows","rowGap","currentElements","pageMax","selection","item","itemDetail","onUpdate","reloadZettel","Statistics","Server","tab","styleBody","gridGap","mainBody","exec","justifyContent","borderBottom","Import","workLst","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","scanPath","name","accept","multiple","files","edition","save","ressource","editor","year","volume","vol_cont","serie","location","library","signature","newEditionId","console","log","uploadForm","FormData","append","fLength","importScans","join","scan_lnk","edition_id","scanLnks","scanLst","scanLnk","scan","scan_id","nScan","missLst","file","fName","substring","cScan","find","filename","fileTxt","full_text","styleTab","styleTabActive","work","works","newWorkLst","ac_web","editions","newEditionLst","label","loadOptions","Help","SearchInput","marginRight","marginBottom","placeholder","faMinusCircle","removeSearchFields","SearchBox","queryTxt","nextID","searchFields","sOrder","cSF","sF","faPlusCircle","addSearchFields","float","marginTop","sendQuery","marginLeft","nSearchFields","s","exportSF","document","querySelectorAll","searchQuery","alert","Zettel","q","showDetail","zettel","newItem","indexOfNewItem","findIndex","newQuery","queryOrder","ZettelBox","cEls","cEl","testProp","ZettelCard","img_path","classList","in_use","src","lemma_display","opus","txt","ZettelAside","addLemma","ressources","batchType","date_type","lemma_id","lemma_ac","date_own","date_own_display","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","right","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","indexOf","newLemmaValue","lemma","MLW","Fragezeichen","Stern","lemma_nr","newId","cRes","keyCount","dateOwn","dateStyle","borderTop","paddingTop","Number","isInteger","nVals","user_id","inputType","skipSave","newKey","newValueLst","cId","newValueObj","res","catch","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","addEventListener","newStatus","close","main","Error","height","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","first_name","last_name","email","createAccount","login","querySelector","open","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9d733a49.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n                //throw new Error(\"ARACHNE: connection failed!\");\n            }//window.open(\"/\", \"_self\")}\n        });\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n    }\n    async open(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n\n            let reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n            if(re.status === 200){this.user = await reUser.json();}\n            else {return false;}\n            if(tbls == null){tbls = await this.tables()}\n            for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n            return true;\n        }else{\n            return false;\n        }\n    }\n    async close(){\n        this.key = null;\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.col]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.col]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.col] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.col], limit:10, order: [this.props.col]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.col], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className=\"selectWrapper\" style={this.props.style} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {React.Children.map(this.props.children, child => {\n            return <SelectorWrapper style={{boxShadow: this.state.ids.includes(child.props.id)?\"0px 3px 18px var(--shadowBG)\":null, transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&keys.meta){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nexport { Navigator, parseHTML, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    render(){\n        return <div>Seite</div>;\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: []};\n    }\n    render(){\n        let trLst = [];\n        let i = 0;\n        for(const o of this.state.oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    if(editionsURL&&editionsURL[iE]!=\"\"){cURL=editionsURL[iE]}\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\">{cLabel}</a></li>);\n                }\n            }\n            i++;\n            if(this.state.listName==\"opera_maiora\"){\n                let abbr = <aut>{o.abbr}</aut>;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr=<span>&nbsp;&nbsp;&nbsp;{o.abbr}</span>;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push(<tr key={i}><td className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2\">{abbr}</td><td className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td><td className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td><td className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td></tr>);\n            } else if(this.state.listName===\"opera_minora\"){\n                trLst.push(<tr key={i}><td className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td><td className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td></tr>);\n            }\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n                <Navigator currentPage={this.state.currentPage} maxPage={this.state.oMax} loadPage={nextPage=>{this.loadPage(nextPage)}} />\n                <div className=\"operaBox\">\n                <table><tbody>{trLst}</tbody></table>\n                </div>\n                </div>;\n    }\n    async loadPage(newPage){\n        const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: (newPage-1)*30});\n        this.setState({oLst: oLst, currentPage: newPage});   \n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n            this.setState({listName: this.props.listName, oLst: oLst, oMax: Math.floor(oMax[0][\"count\"]/30)+1, currentPage: 1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n                this.setState({oLst: oLst, listName: this.props.listName});\n            };\n            getLst();\n        }\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    /*showDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}*/\n                />\n                {this.state.selectionDetail?<OperaAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\n\nclass Statistics extends React.Component{\n    render(){\n        return <div>\n            <div>\n                <Pie />\n            </div>\n        </div>\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"updateOpera\"\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"updateOpera\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Damit Änderungen in den <i>opera</i>-Listen oder Änderungen in den Ressourcen in den Listen sichtbar werden, müssen sie auf dem Server aktualisiert werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"opera-Listen aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        const reStatus = await arachne.exec(\"opera_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"updateOpera\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateOpera\"})}}>Opera-Listen</div>\n                {/*<div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>*/}\n            </div>\n            {mainBody}\n        </div>);\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            editionLst: [],\n            scanWork: 1,\n            scanType: 1,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                /*comment,*/\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.editionLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLnks = await arachne.scan_lnk.get({edition_id: this.state.ocrRessource});\n                            let scanLst = [];\n                            for(const scanLnk of scanLnks){\n                                const nScan = await arachne.scan.get({id: scanLnk.scan_id})\n                                scanLst.push(nScan[0]);\n                            }\n                            let missLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    await arachne.scan.save({id: cScan.id, full_text: fileTxt})\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                break;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.getAll({select: [\"id\", \"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const editions = await arachne.edition.getAll({select: [\"id\", \"label\"]});\n            let newEditionLst = [];\n            for(const edition of editions){\n                newEditionLst.push([edition.id, edition.label]);\n            }\n            this.setState({editionLst: newEditionLst});\n\n        }\n        loadOptions();\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Help, Import, Server, Statistics };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"lemma\">Lemma</option>\n                <option value=\"type\">Typ</option>\n                <option value=\"id\">ID</option>\n                <option value=\"opus\">Werk</option>\n                <option value=\"date_type\">Datum-Typ</option>\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n        this.sOrder = null;\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]} onChange={event=>{this.sOrder = JSON.parse(event.target.value)}} />\n            </div>\n        </div>\n    }\n\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF, this.sOrder)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox searchQuery={(q,order) => {this.searchQuery(q,order)}}\n            gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"} />\n            <ZettelBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n        </div>\n        );\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n                            /*\n            let imgMSG = document.createElement(\"DIV\");\n            imgMSG.classList.add(\"zettel_msg\");\n            if(zettel.sibling>0){\n                imgMSG.innerHTML = \"<span style='color: var(--contraColor);' title='Geschwisterzettel'>&#x273F;</span>\"\n            }\n            if(zettel.date_sort===9 && zettel.date_own === null){\n                imgMSG.innerHTML +=\"<span style='color: var(--errorStat);' title='Datierung erforderlich'>&#x0021;</span>\";\n            }\n            box.appendChild(imgMSG);\n            */\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img className={classList} src={zettel.img_path+\".jpg\"}></img>\n                <div className=\"zettel_msg\"></div>\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            /*item: this.props.item,*/\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            /*backgroundColor: \"white\",*/\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style} className=\"mainColors\">\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(!isNaN(e.target.value)&&e.target.value!==\"\"&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            return (\n    <div style={style} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" col=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id})}} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                if(this.state.date_type===9&&!Number.isInteger(this.state.date_own)){\n                    this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                } else {\n                    let nVals = {\n                        id: this.state.id,\n                        type: this.state.type,\n                        work_id: this.state.work_id,\n                        user_id: arachne.user.id\n                    };\n                    this.props.status(\"saving\");\n                    if(this.state.lemma_id==null&&this.state.newLemma_Lemma!=\"\"){this.setState({addLemma: true})}\n                    else {nVals.lemma_id = this.state.lemma_id}\n                    if(this.state.date_type===9&&Number.isInteger(this.state.date_own)){\n                        nVals.date_own = this.state.date_own;\n                        nVals.date_own_display = this.state.date_own_display;\n                    }\n                    await arachne.zettel.save(nVals)\n                    this.props.status(\"saved\");\n                    this.props.onUpdate([this.state.id]);\n                }\n                }} /></div>\n        </div>\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\" col=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                /*case 4:\n                    inputType = <input type=\"text\" value=\"lemma\" />;\n                    break;*/                \n            }\n            return <div style={style} className=\"mainColors\">\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={[[1, \"Lemma\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]/*,[4,\"Projekt\"]*/]} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.user.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Opera } from \"./opera.js\";\nimport { Help, Import, Server, Statistics } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {\n    shadow: \"#3c6e71\"\n}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\"Zettel-Datenbank\": \"zettel\"/*,\n                \"Lemmaliste\": \"lemma\",\n                \"Volltext-Suche\": \"fulltext\"*/}\n            },\n            \"Verzeichnisse\": {\n                visible: false, \n                items: {\n                \"opera-maiora\":\"maiora\",\n                \"opera-minora\":\"minora\",\n                /*\"Ressourcen\":\"ressources\",\n                \"Sekundärliteratur\":\"seklit\"*/\n            }},\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                \"Hilfe\":\"help\",\n                \"Server\": \"server\",\n                \"Import\": \"import\",\n                /*\"Konto\":\"account\",*/\n                /*\"Statistiken\":\"stats\",*/\n                \"abmelden\":\"logout\"\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries}  className=\"mainColors\" style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainColors\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"stats\":\n                    main = <Statistics status={(type,value)=>{this.newStatus(type, value)}} />\n                    break;\n                case \"server\":\n                    main = <Server status={(type,value)=>{this.newStatus(type, value)}} />\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" status={(type,value)=>{this.newStatus(type, value)}} />\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" status={(type,value)=>{this.newStatus(type, value)}} />\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    throw new Error(`ARGOS: unknown res in 'loadMain': ${this.state.res}`);\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        const tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\"];\n        if(email!==\"\"&&password!==\"\"&&await arachne.open(email, password, tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}