{"version":3,"sources":["arachne.js","elements.js","lemma.js","opera.js","ressources.js","settings.js","zettel.js","editor.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","rowId","data","Array","isArray","body","response","newValues","rId","id","parseInt","text","arachne","location","origin","me","localOptions","localStorage","getItem","parse","z_width","z_height","console","log","name","value","setItem","user","password","tbls","open","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","newForm","alert","mode","rights","every","r","access","includes","scanId","blob","newImg","nURL","URL","createObjectURL","SearchInput","props","state","itemId","item","searchOptions","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","onChange","e","setState","target","type","placeholder","onKeyUp","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","prevProps","prevState","changeItem","React","Component","SearchBox","queryTxt","sOrder","nextID","searchFields","cSF","sF","sendQuery","map","s","gridArea","faPlusCircle","position","top","fontSize","addSearchFields","float","marginTop","marginLeft","display","sortOptions","event","storedItems","sessionStorage","boxName","setupItems","forceSearch","length","newNextID","newItems","i","nSearchFields","filter","exportSF","document","querySelectorAll","children","searchQuery","Navigator","currentPage","scrollTo","faAngleUp","loadPage","margin","textAlign","onBlur","isNaN","maxPage","move","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","backgroundColor","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faRecycle","faTrashAlt","faCloudMoon","ref","bottom","left","transition","borderRadius","overflow","zIndex","SelectMenu","op","classList","pointerEvents","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","option","returnCol","dataset","cursor","changeInputValue","onKeyDown","changeSelectedOption","newValue","searchCol","get","newOptions","SelectorWrapper","isSelected","height","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","child","keys","selectCallback","targetId","inRange","newIds","forEach","preset","el","querySelector","scrollIntoView","behavior","block","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","Lemma","newItemCreated","gridTemplateColumns","gridTemplateRows","rowGap","q","newPage","currentElements","showDetail","onUpdate","reloadEntry","onClose","right","confirm","lemma","save","lemma_display","newId","newItem","indexOfNewItem","findIndex","newQuery","queryOrder","Math","floor","selectionDetail","LemmaBox","selection","cEls","cEl","onDoubleClick","find","closest","title","dangerouslySetInnerHTML","dicts","comment","LemmaAside","homonym","MLW","Stern","Fragezeichen","newLemmaValue","lemma_nr","zettel","lemma_id","allZettel","zettelRemoveList","delete","OperaAside","author","work","authorLst","full","nAuthor","abbr","abbr_sort","date_display","date_sort","date_type","in_use","works","workLst","nWork","author_display","author_id","citation","bibliography_cit","reference","txt_info","bibliography","worksDict","getAll","authors","newAuthorLst","loadOptions","newAuthor","getAuthor","work_id","newWork","getWork","OperaBox","oLst","cTrLst","resultsOnPage","modeName","trLst","tblLst","j","cHitId","hits","hitIndex","scrollRef","cTr","hitStyle","some","borderBottom","paddingBottom","cSearch","listName","maxHits","gotoSearchResult","faBackward","faForward","box","editionLst","editions_id","editionsId","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","arrow","faExternalLinkAlt","cLabel","href","rel","oMax","createOperaLists","getLst","Opera","pageMax","is_maior","SekLit","seklit","titel","SekLitBox","kennziffer","signatur","alte_signatur","vorname","reihe","ort","jahr","weitere_angaben","zusatz","SekLitAside","signature","Ressource","edition","ressource","editor","year","RessourceBox","resTypes","label","opus","RessourceAside","ac_web","volume","volumeContent","serie","library","path","bibliography_preview","dir_name","updateBibliography","vol_cont","Account","firstName","first_name","lastName","last_name","eMail","email","oldPassword","newPassword","old_password","new_password","min","max","setOptions","Statistics","tab","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","datasets","borderColor","borderWidth","plugins","legend","zettel_types_data","zettel_types","zettel_created_data","zettel_changed","zettel_created","aspectRatio","zettel_created_current_data","zettel_changed_current","zettel_created_current","lemmaBox","lemmaCharts","lemma_letters_data","lemma_mlw_data","lemma_mlw","flexWrap","ressourceBox","ressourceCharts","ressource_work_data","styleBody","mainBody","styleTab","styleTabActive","justifyContent","last_updated","statistics","numbers","getNumbers","Server","ocrJobs","faszikelJobs","users","gridGap","exec","faszikelRows","faszikel","dateArray","date","split","createdDate","join","substring","borderTop","timeElapsed","Date","now","ocrRows","row","c_date","source","finished","total","round","userRows","agent","session_last_active","faSun","faMoon","newUsers","ocr_jobs","newOcrJobs","allFaszikelJobs","sort","b","splice","loadUsers","ServerAside","rightList","description","marked","nAccess","Object","entries","Import","pathLst","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","zettelLetter","zettelType","zettelFiles","zettelEditors","zettelEditorSelected","scanPath","accept","multiple","files","newEditionId","uploadForm","FormData","append","fLength","importScans","scan","scanLst","missLst","saveLst","file","fName","cScan","filename","fileTxt","full_text","cItemCount","cUploadIndex","uploadGroup","uItem","importZettel","newWorkLst","scan_paths","paths","newPathLst","userLst","catch","Help","Zettel","showDate","activeProjects","presetSelection","itemDetail","reloadZettel","openNextItem","toggleShowDate","lastIndex","project","projects","projectLst","ZettelBox","testProp","ZettelCard","img_path","alt","objectFit","src","date_own_display","txt","ZettelAside","comments","addLemma","ressources","batchType","lemma_ac","date_own","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","batch_project","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","cRes","keyCount","dateOwn","dateStyle","paddingTop","commentBox","commentList","newDateType","saveDetail","inputType","batch_options","skipSave","newKey","newValueLst","cId","newValueObj","user_id","article","sort_nr","parent_id","defaultArticle","newLinks","zettel_id","article_id","zettel_lnk","res","next","Number","isInteger","nVals","focus","Editor","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","addEventListener","newStatus","close","main","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","createAccount","login","checkSession","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.165d09b1.chunk.js","sourcesContent":["// VERSION 1.1 - 04.11.2021\n\nclass ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n            }\n        });\n    }\n    async delete(rowId){\n        let url = `${this.url}/data/${this.tblName}/${rowId}`;\n        let data = null;\n        if(Array.isArray(rowId)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n            data = JSON.stringify(rowId);\n        }\n        const response = await fetch(url, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Bearer ${this.key}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: data\n        });\n        if(response.status===200){\n            return true;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"delete\", status: response.status}});\n            window.dispatchEvent(errorEvent);\n        }\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        if(url===\"\"&&window.location.origin===\"http://localhost:3000\"){this.url = \"http://localhost:8080\"}\n        else{this.url=url}\n        this.key = null;\n        this.me = null;\n        \n        // load local options for displaying in current browser\n        let localOptions = localStorage.getItem(\"dmlwOptions\");\n        if(localOptions){\n            localOptions = JSON.parse(localOptions);\n            this.options = {\n                z_width: localOptions.z_width?localOptions.z_width:500,\n                z_height: localOptions.z_height?localOptions.z_height:350\n            };\n        } else {\n            this.options = {z_width: 500, z_height: 350};\n        }\n        console.log(this.options);\n    }\n    setOptions(name, value){\n        this.options[name] = value;\n        localStorage.setItem(\"dmlwOptions\", JSON.stringify(this.options))\n    }\n    async login(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            return this.open(tbls);\n        }else{\n            return false;\n        }\n    }\n    async open(tbls=null){\n        const reUser = await this.getUser();\n        if(reUser){\n            this.me = reUser;\n            this.me.selectKey = 'ctrl';\n            if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n        }\n        else {return false;}\n\n        if(tbls == null){tbls = await this.tables()}\n        for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n        return true;\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async importZettel(newForm){\n        const re = await fetch(this.url+\"/file/zettel\", {method: \"POST\", body: newForm,\n            headers: {\"Authorization\": `Bearer ${this.key}`}});\n        if(re.status != 201){\n            alert(\"Ein Fehler ist aufgetreten! Bitte überprüfen Sie die hochgeladenen Zettel.\");\n            throw \"Error: Fehler beim Zettel-Upload!\";\n        }\n    }\n    async exec(mode, body=false){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        if(body){return await re.json()}\n        else{return re.status;}\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n    async getScan(scanId){\n        const newImg = await fetch(`${this.url}/file/scan/${scanId}`, {headers: {\"Authorization\": `Bearer ${this.key}`}}).then(re => re.blob());\n        let nURL = URL.createObjectURL(newImg);\n        return nURL;\n    }\n}\n\nlet arachne = new Arachne();\n\nexport { arachne };","// Version 1 - 9.11.2021\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog, faRecycle, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.itemId,\n            c:  this.props.c,\n            o:  this.props.o,\n            v: this.props.v,\n        }\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.c} onChange={e=>{this.setState({c: e.target.value})}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.o} onChange={e=>{this.setState({o: e.target.value})}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} value={this.state.v} onChange={e=>{this.setState({v: e.target.value})}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.itemId)}} />\n        </div>\n        );\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.c!=this.state.c||prevState.o!=this.state.o||prevState.v!=this.state.v){\n            this.props.changeItem(this.state);\n        }\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {sOrder: null, nextID: 1, searchFields: []};\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} itemId={sF.id} key={sF.id} c={sF.c} o={sF.o} v={sF.v} clickButton={()=>{this.sendQuery()}} changeItem={item=>{\n                this.setState({searchFields: this.state.searchFields.map(s=>{\n                    if(s.id===item.id){return item}else{return s}\n                })});\n            }} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={this.props.sortOptions} onChange={event=>{this.setState({sOrder: JSON.parse(event.target.value)})}} />\n            </div>\n        </div>\n    }\n    componentDidMount(){\n        let storedItems = sessionStorage.getItem(\"searchBox_\"+this.props.boxName);\n        if(this.props.setupItems){\n            this.setState({forceSearch: true, searchFields: this.props.setupItems, nextID: this.props.setupItems.length});\n        } else if(storedItems){\n            storedItems = JSON.parse(storedItems);\n            this.setState({forceSearch: true, searchFields: storedItems[0], nextID: storedItems[1] , sOrder: storedItems[2]});\n        } else {\n            this.setState({searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]});\n        }\n\n    }\n    componentDidUpdate(prevProps){\n        if(this.state.forceSearch){\n            this.sendQuery();\n            this.setState({forceSearch: false});\n        } else if (prevProps.setupItems!=this.props.setupItems){\n            let newNextID = this.state.nextID;\n            const newItems = this.props.setupItems.map(i => {i[\"id\"]=newNextID;newNextID++;return i;})\n            this.setState({forceSearch: true, searchFields: newItems, nextID: newNextID+1});\n        }\n    }\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){\n            sessionStorage.setItem(\"searchBox_\"+this.props.boxName, JSON.stringify([this.state.searchFields, this.state.nextID, this.state.sOrder]));\n            this.props.searchQuery(exportSF, this.state.sOrder)\n        } else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleting\":\n                    statusTxt = \"Eintrag wird gelöscht.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faRecycle} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleted\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTrashAlt} />;\n                    statusTxt = \"Löschen erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.returnCol]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.returnCol]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.searchCol] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.returnCol], limit:10, order: [this.props.searchCol]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.returnCol], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{display:\"block\", transition:\"box-shadow 0.3s\", margin: \"10px 5px\", marginLeft: \"auto\", marginRight: \"auto\", width: arachne.options.z_width+\"px\", height: arachne.options.z_height+\"px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {display: \"block\", textAlign: \"center\"}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                });\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            setTimeout(()=>{\n                let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView({behavior: \"smooth\", block: \"center\"})};\n            }, 300);\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu } from \"./elements.js\";\n\nimport { faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null, newItemCreated: null};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"lemma\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"],\n                    [\"lemma_ac\", \"Lemma-Anzeige\"],\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Lemma\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <LemmaBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<LemmaAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n            {arachne.access(\"l_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neues Lemma erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.lemma.save({lemma_display:\"Neues Lemma\", lemma:\"Neues Lemma\"});\n                    console.log(\"new ID:\", newId)\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neuer Eintrag erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id} dangerouslySetInnerHTML={parseHTML(cEl.lemma_display)}></td><td>{cEl.dicts}</td><td dangerouslySetInnerHTML={parseHTML(cEl.comment)}></td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Lemmaansatz</th><th>Wörterbücher</th><th>Kommentar</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            lemma: this.props.item.lemma,\n            lemma_display: this.props.item.lemma_display,\n            homonym: this.props.item.homonym,\n            MLW: this.props.item.MLW,\n            Stern: this.props.item.Stern,\n            Fragezeichen: this.props.item.Fragezeichen,\n        };\n    }\n    render(){\n        return (\n        <div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.lemma} onChange={event=>{this.setState({lemma: event.target.value})}} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma-Anzeige:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={parseHTMLPreview(this.state.lemma_display)} onChange={event=>{this.setState({lemma_display: event.target.value})}} /></div>\n        </div>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({homonym: event.target.value})}} value={this.state.homonym} /></div>\n            <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n            <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({MLW: event.target.value})}} value={this.state.MLW} /></div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Stern: event.target.value})}} value={this.state.Stern} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Fragezeichen: event.target.value})}} value={this.state.Fragezeichen} /></div>\n            <div style={{gridArea: \"6/2/6/3\"}}>\n                <input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    if(this.state.lemma===\"\" || this.state.lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.lemma_display===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            id: this.state.id,\n                            lemma: this.state.lemma,\n                            lemma_display: this.state.lemma_display,\n                            MLW: this.state.MLW,\n                            Fragezeichen: this.state.Fragezeichen,\n                            Stern: this.state.Stern,\n                        };\n                        if(this.state.homonym>0){newLemmaValue.lemma_nr=this.state.homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\");\n                        this.props.onUpdate(this.state.id);\n                    }\n                }} />\n                {arachne.access(\"l_edit\")?<input type=\"button\" value=\"löschen\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    if(window.confirm(\"Soll das Lemma gelöscht werden? Das Lemma wird von allen verknüpften Zettel entfernt. Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                        this.props.status(\"deleting\");\n                        const allZettel = await arachne.zettel.get({lemma_id: this.state.id});\n                        let zettelRemoveList = [];\n                        for(const zettel of allZettel){\n                            zettelRemoveList.push({id: zettel.id, lemma_id: null});\n                        }\n                        await arachne.zettel.save(zettelRemoveList);\n                        await arachne.lemma.delete(this.state.id);\n                        this.props.status(\"deleted\");\n                    }\n                }} />:null}\n            </div>\n        </div>\n    </div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            console.log(\"NOW!\");\n            this.setState({\n                id: this.props.item.id,\n                lemma: this.props.item.lemma,\n                lemma_display: this.props.item.lemma_display,\n                homonym: this.props.item.homonym,\n                MLW: this.props.item.MLW,\n                Stern: this.props.item.Stern,\n                Fragezeichen: this.props.item.Fragezeichen,\n            });\n        }\n    }\n}\n\nexport { Lemma };","import React from \"react\";\nimport { faExternalLinkAlt, faForward, faBackward, faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { parseHTML, SelectMenu } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {author: null, work: null, authorLst: []};\n    }\n    render(){\n        return <div style={{\n            position: \"fixed\",\n            overflow: \"scroll\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n            <div style={{position: \"absolute\", top: \"50px\", right: \"10px\"}}><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} /></div>\n            \n            {this.state.author&&<div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <h3>Autor <i style={{fontSize: \"60%\"}}>ID: {this.state.author.id})</i></h3><div></div>\n                <div>Name:</div><div><input type=\"text\" value={this.state.author.full?this.state.author.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nAuthor = this.state.author;nAuthor.full = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Abkürzung:</div><div><input type=\"text\" value={this.state.author.abbr} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.author.abbr_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.author.date_display} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_display = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.author.date_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.author.date_type} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_type = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.author.in_use} onChange={e=>{let nAuthor = this.state.author;nAuthor.in_use = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div></div><div>\n                    <input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.author.save(this.state.author);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate();\n                }} />\n                    <input type=\"button\" value=\"löschen\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                        const works = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.author.id}], {select: [\"id\"]});\n                        let workLst = [];\n                        for(const work of works){\n                            workLst.push(work.id);\n                        }\n                        if(window.confirm(`Soll der Autor wirklich gelöscht werden? ${workLst.length} damit ${workLst.length>1?\"verknüpfte Werke werden\":\"verknüpftes Werk wird\"} ebenfalls gelöscht. Dieser Schritt kann nicht mehr rückgängig gemacht werden!`)){\n                            this.props.status(\"deleting\");\n                            if(workLst.length>0){await arachne.work.delete(workLst)};\n                            await arachne.author.delete(this.state.author.id);\n                            this.props.status(\"deleted\");\n                            this.props.onUpdate();\n                        }\n                    }} />\n                </div>\n            </div>\n        }\n            {this.state.work&&<div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <h3>Werk <i style={{fontSize: \"60%\"}}>(ID: {this.state.work.id})</i></h3><div></div>\n                <div>Werktitel:</div><div><input type=\"text\" value={this.state.work.full?this.state.work.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nWork = this.state.work;nWork.full = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abkürzung:</div><div><input type=\"text\" value={this.state.work.abbr} onChange={e=>{let nWork = this.state.work;nWork.abbr = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.work.abbr_sort} onChange={e=>{let nWork = this.state.work;nWork.abbr_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.work.date_display} onChange={e=>{let nWork = this.state.work;nWork.date_display = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.work.date_sort} onChange={e=>{let nWork = this.state.work;nWork.date_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.work.date_type} onChange={e=>{let nWork = this.state.work;nWork.date_type = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abweichender Autorenname\n                (z.B. bei <aut>Vita</aut>):</div><div><input type=\"text\" value={this.state.work.author_display} onChange={e=>{let nWork = this.state.work;nWork.author_display = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>verknpft. Autor:</div><div><SelectMenu style={{width: \"86%\"}} options={this.state.authorLst} value={this.state.work.author_id} onChange={e=>{let nWork = this.state.work;nWork.author_id = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Stellenangabe: <span className=\"minorTxt\">(Bsp.)</span></div><div><input type=\"text\" value={this.state.work.citation} onChange={e=>{let nWork = this.state.work;nWork.citation = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Stellenangabe Bibliographie: <i className=\"minorTxt\">(nur minora)</i></div><div><input type=\"text\" value={this.state.work.bibliography_cit} onChange={e=>{let nWork = this.state.work;nWork.bibliography_cit = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Referenz:</div><div><input type=\"text\" value={this.state.work.reference} onChange={e=>{let nWork = this.state.work;nWork.reference = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.work.in_use} onChange={e=>{let nWork = this.state.work;nWork.in_use = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Kommentar:</div><div><textarea value={this.state.work.txt_info} onChange={e=>{let nWork = this.state.work;nWork.txt_info = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                <div>Bibliographie:</div><div><textarea value={this.state.work.bibliography} onChange={e=>{let nWork = this.state.work;nWork.bibliography = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                <div></div><div>\n                    <input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.work.save(this.state.work);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate();\n                }} />\n                <input type=\"button\" value=\"löschen\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    const worksDict = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.work.author_id}], {count: true});\n                    const works = worksDict[0].count;\n                    if(works<2){\n                        alert(\"Das Werk kann nicht gelöscht werden, da es das lezte Werk des Autors ist. Um dieses Werk zu löschen, müssen Sie ein neues Werk erstellen und dem Autor zuweisen.\");\n                    } else if(window.confirm(\"Soll das Werk wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                        this.props.status(\"deleting\");\n                        await arachne.work.delete(this.state.work.id);\n                        this.props.status(\"deleted\");\n                        this.props.onUpdate();\n                    }\n                }} />\n                </div>\n            </div>}\n        </div>;\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const authors = await arachne.author.getAll({select: [\"id\", \"abbr\"], order: [\"abbr_sort\"]});\n            let newAuthorLst = [];\n            for(const author of authors){\n                newAuthorLst.push([author.id, author.abbr]);\n            }\n            this.setState({authorLst: newAuthorLst});\n        }\n        loadOptions();\n        if(this.props.item.author_id>0){\n            const getAuthor = async () => {\n                const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                this.setState({author: newAuthor[0]});\n            }\n            getAuthor();\n        }\n        if(this.props.item.work_id>0){\n            const getWork = async () => {\n                const newWork = await arachne.work.get({id: this.props.item.work_id});\n                this.setState({work: newWork[0]});\n            }\n            getWork();\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.author_id!=this.props.item.author_id){\n            if(this.props.item.author_id>0){\n                const getAuthor = async () => {\n                    const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                    this.setState({author: newAuthor[0]});\n                }\n                getAuthor();\n            }else{this.setState({author: null})}\n        }\n        if(prevProps.item.work_id!=this.props.item.work_id){\n            if(this.props.item.work_id>0){\n                const getWork = async () => {\n                    const newWork = await arachne.work.get({id: this.props.item.work_id});\n                    this.setState({work: newWork[0]});\n                }\n                getWork();\n            }else{this.setState({work: null})}\n        }\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: [], cTrLst: []};\n        this.resultsOnPage = 18;\n        this.modeName = \"opera\"\n    }\n    render(){\n        let trLst = [];\n        let tblLst = [];\n        let i = 0;\n        let j = 0;\n        const cHitId = (this.state.hits&&this.state.hits.length>0)?this.state.hits[this.state.hitIndex].id:0;\n        this.scrollRef = null;\n        for(const cTr of this.state.cTrLst){\n            i++;\n            let hitStyle = {};\n            if(cTr.o.id===cHitId){hitStyle = \"searchHit\"; this.scrollRef = React.createRef()}\n            else if(cHitId>0&&this.state.hits.some(i=>i.id===cTr.o.id)){hitStyle = \"searchAllHits\"}\n            trLst.push(<tr className={hitStyle} ref={cTr.o.id===cHitId?this.scrollRef:null} key={i} onDoubleClick={e=>{e.stopPropagation();this.props.showDetail(cTr.o)}}>{cTr.data}</tr>);\n            if(trLst.length >= this.resultsOnPage){\n                j++;\n                tblLst.push(<div key={j} id={\"operaBox_\"+j} style={{borderBottom: \"1px dotted black\", paddingBottom: \"15px\", margin: \"10px\"}}><table><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j}</div></div>);\n                trLst = [];\n            }\n        }\n        if(j>0){tblLst.push(<div key={j+1} id={\"operaBox_\"+(j+1)} style={{margin: \"10px\"}}><table><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j+1}</div></div>);}\n        return <div style={{gridArea: this.props.gridArea}}>\n                {tblLst.length===0?null:\n                <div className=\"operaBox\">{tblLst}</div>}\n                <div className=\"SearchBar mainColors\">\n                    <input type=\"text\" style={{boxShadow: \"none\", padding: \"0px\"}} placeholder=\"Suche nach Zitiertitel...\" onKeyUp={async e=>{\n                    if(e.keyCode === 13){\n                        if(e.target.value!=\"\"&&this.state.cSearch!=e.target.value){\n                            const hits = await arachne[this.props.listName].search([{c: \"search\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                            if(hits.length>0){\n                                this.setState({hitIndex: 0, cSearch: e.target.value, maxHits: hits.length, hits: hits});\n                            } else {\n                                this.setState({cSearch: e.target.value, maxHits: 0, hits: []});\n                            }\n                        } else if(this.state.maxHits>0){this.gotoSearchResult(1)}\n                    }\n                }} />\n                {this.state.maxHits>0&&<div style={{display:\"inline\", marginLeft: \"20px\"}}>\n                    <FontAwesomeIcon icon={faBackward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(-1)}} /> <span>{this.state.hitIndex+1}</span>/<span>{this.state.maxHits}</span> <FontAwesomeIcon icon={faForward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(1)}} />\n                </div>}\n                <div style={{float: \"right\"}}>\n                <input type=\"text\"  style={{textAlign: \"right\", width: \"60px\", boxShadow: \"none\", padding: \"0px\"}} placeholder=\"Seite...\" onKeyUp={e=>{\n                    if(e.keyCode===13){\n                        const box = document.querySelector(\"div#operaBox_\"+e.target.value);\n                        if(box){box.scrollIntoView({behavior: \"smooth\"});}   \n                    }\n                }} />\n                </div>\n                \n                </div>\n            </div>;\n    }\n    createOperaLists(oLst, listName){\n        let trLst = [];\n        let i = 0;\n        for(const o of oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    let arrow = \"\";\n                    if(editionsURL&&editionsURL[iE]!=\"\"){\n                        cURL=editionsURL[iE];\n                        arrow = <span> <FontAwesomeIcon style={{fontSize:\"14px\"}} icon={faExternalLinkAlt} /></span>\n                    }\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\" rel=\"noreferrer\">{cLabel}{arrow}</a></li>);\n                }\n            }\n            i++;\n            if(listName==\"opera_maiora\"){\n                let abbr = `<aut>${o.abbr}</aut>`;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr= `<span>&nbsp;&nbsp;&nbsp;${o.abbr}</span>`;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2\" dangerouslySetInnerHTML={parseHTML(abbr)}></td>,\n                <td key=\"2\" className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td>,\n                <td key=\"3\" className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td>,\n                <td key=\"4\" className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td>\n            ]});\n            } else if(listName===\"opera_minora\"){\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td>,\n                <td key=\"2\" className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td>\n            ]});\n            }\n        }\n        return trLst;\n    }\n    gotoSearchResult(move){\n        if(move===1&&this.state.hitIndex<this.state.maxHits-1){\n            this.setState({hitIndex: this.state.hitIndex+1});\n        } else if (move===1){\n            this.setState({hitIndex: 0});\n        } else if (move===-1&&this.state.hitIndex>0){\n            this.setState({hitIndex: this.state.hitIndex-1});\n        } else if (move===-1){\n            this.setState({hitIndex: this.state.maxHits-1});\n        }\n    }\n    async loadPage(newPage){\n        /*\n        const oLst = await arachne[this.props.listName].getAll({limit: this.resultsOnPage, offset: (newPage-1)*this.resultsOnPage});\n        this.setState({oLst: oLst, currentPage: newPage});\n        */\n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll();\n            const trLst = this.createOperaLists(oLst, this.props.listName);\n            this.setState({listName: this.props.listName, cTrLst: trLst, oMax: Math.floor(oMax[0][\"count\"]/this.resultsOnPage)+1, currentPage: 1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oMax = await arachne[this.props.listName].getAll({count: true});\n                const oLst = await arachne[this.props.listName].getAll();\n                const trLst = this.createOperaLists(oLst, this.props.listName);\n                this.setState({cTrLst: trLst, listName: this.props.listName, oMax: Math.floor(oMax[0][\"count\"]/this.resultsOnPage)+1, currentPage: 1});\n            };\n            this.setState({cTrLst: []});\n            getLst();\n        }\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n                {this.state.item?<OperaAside status={this.props.status}  item={this.state.item} onUpdate={()=>{this.setState({item: null})}} onClose={()=>{this.setState({item: null})}} />:null}\n\n                {arachne.access(\"o_edit\")&&<div style={{position: \"fixed\", bottom: \"40px\", right: \"15px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neues Werk erstellt werden? (Das Werk wird ABBO FLOR. zugewiesen.\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: 1, is_maior: 1, in_use: 1});\n                    this.props.status(\"saved\", \"Neues Werk erstellt.\");\n                } else if(window.confirm(\"Soll ein neuer Autor erstellt werden? Er heisst '+NEUER AUTOR'\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.author.save({full:\"+Neuer Autor\", abbr:\"+Neuer Autor\", abbr_sort: \"+Neuer Autor\", in_use: 1});\n                    await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: newId, is_maior: 1, in_use: 1});\n                    this.props.status(\"saved\", \"Neuer Autor erstellt.\");\n                }\n            }} /></div>}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\nimport { faExternalLinkAlt, faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { AutoComplete, Navigator, parseHTML, SearchBox, SelectMenu } from \"./elements.js\";\n\nclass SekLit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"seklit\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <SekLitBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<SekLitAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n\n            {arachne.access(\"e_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.seklit.save({titel: \"neues Werk\"});\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neuer Eintrag erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.seklit.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            this.setState({currentElements: [], item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.seklit.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.seklit.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.seklit.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass SekLitBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.kennziffer}</td><td>{cEl.signatur} {cEl.alte_signatur?`(${cEl.alte_signatur})`:null}</td><td>\n                    {cEl.name}, {cEl.vorname}, <b>{cEl.titel}</b>, {cEl.reihe}, {cEl.ort} {cEl.jahr}\n                    </td>\n                    <td>{cEl.weitere_angaben}{cEl.zusatz?\" - \"+cEl.zusatz:null}</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kennziffer</th><th>Signatur</th><th>Werkbezeichnung</th><th>weitere Angaben</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass SekLitAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            kennziffer: this.props.item.kennziffer,\n            signatur: this.props.item.signatur,\n            alte_signatur: this.props.item.alte_signatur,\n            name: this.props.item.name,\n            vorname: this.props.item.vorname,\n            titel: this.props.item.titel,\n            reihe: this.props.item.reihe,\n            weitere_angaben: this.props.item.weitere_angaben,\n            ort: this.props.item.ort,\n            jahr: this.props.item.jahr,\n            zusatz: this.props.item.zusatz,\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n        </div>\n        <div></div><div></div>\n\n        <div>Kennziffer:</div>\n        <div><input type=\"text\" value={this.state.kennziffer?this.state.kennziffer:\"\"} onChange={e=>{this.setState({kennziffer: e.target.value})}} /></div>\n        <div>Signatur:</div>\n        <div><input type=\"text\" value={this.state.signatur?this.state.signatur:\"\"} onChange={e=>{this.setState({signatur: e.target.value})}} /></div>\n        <div>alte Signatur:</div><div><input type=\"text\" value={this.state.alte_signatur?this.state.alte_signatur:\"\"} onChange={e=>{this.setState({alte_signatur: e.target.value})}} /></div>\n        <div>Name:</div><div><input type=\"text\" value={this.state.name?this.state.name:\"\"} onChange={e=>{this.setState({name: e.target.value})}} /></div>\n        <div>Vorname:</div><div><input type=\"text\" value={this.state.vorname?this.state.vorname:\"\"} onChange={e=>{this.setState({vorname: e.target.value})}} /></div>\n        <div>Titel:</div><div><input type=\"text\" value={this.state.titel?this.state.titel:\"\"} onChange={e=>{this.setState({titel: e.target.value})}} /></div>\n        <div>Reihe</div><div><input type=\"text\" value={this.state.reihe?this.state.reihe:\"\"} onChange={e=>{this.setState({reihe: e.target.value})}} /></div>\n        <div>Ort:</div><div><input type=\"text\" value={this.state.ort?this.state.ort:\"\"} onChange={e=>{this.setState({ort: e.target.value})}} /></div>\n        <div>Jahr:</div><div><input type=\"text\" value={this.state.jahr?this.state.jahr:\"\"} onChange={e=>{this.setState({jahr: e.target.value})}} /></div>\n        <div>weitere Angaben:</div><div><input type=\"text\" value={this.state.weitere_angaben?this.state.weitere_angaben:\"\"} onChange={e=>{this.setState({weitere_angaben: e.target.value})}} /></div>\n        <div>Zusatz:</div><div><input type=\"text\" value={this.state.zusatz?this.state.zusatz:\"\"} onChange={e=>{this.setState({zusatz: e.target.value})}} /></div>\n        <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            this.props.status(\"saving\");\n            await arachne.seklit.save({\n                id: this.state.id,\n                kennziffer: this.state.kennziffer,\n                signatur: this.state.signature,\n                alte_signatur: this.state.alte_signatur,\n                name: this.state.name,\n                vorname: this.state.vorname,\n                titel: this.state.titel,\n                reihe: this.state.reihe,\n                weitere_angaben: this.state.weitere_angaben,\n                ort: this.state.ort,\n                jahr: this.state.jahr,\n                zusatz: this.state.zusatz,\n            });\n            this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n            this.props.onUpdate(this.state.id);\n        }} /></div>\n    </div>\n</div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                kennziffer: this.props.item.kennziffer,\n                signatur: this.props.item.signatur,\n                alte_signatur: this.props.item.alte_signatur,\n                name: this.props.item.name,\n                vorname: this.props.item.vorname,\n                titel: this.props.item.titel,\n                reihe: this.props.item.reihe,\n                weitere_angaben: this.props.item.weitere_angaben,\n                ort: this.props.item.ort,\n                jahr: this.props.item.jahr,\n                zusatz: this.props.item.zusatz,\n            });\n        }\n    }\n}\n\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null,\n            offset: 0,\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"ressources\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"ac_web\", \"Werk\"],\n                    [\"work_id\", \"Werk-ID\"],\n                    [\"ressource\", \"Ressource-Typ\"],\n                    [\"id\", \"ID\"],\n                    [\"path\", \"Dateipfad\"],\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <RessourceBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<RessourceAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n\n            {arachne.access(\"e_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll eine neue Ressource erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.edition.save({ressource: 0, editor: \"Neue Edition\", year: 2021});\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neue Ressource erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:this.state.offset, order:this.state.queryOrder});\n            this.setState({currentElements: currentElements, item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                offset: ((newPage-1)*50),\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                let url = cEl.url;\n                if(url===\"\"||url===null){url = \"/site/viewer/\"+cEl.id}\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a href={url} target=\"_blank\">öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kürzel</th><th>Typ</th><th>vrkn. Werk</th><th>Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            volumeContent: this.props.item.volumeContent,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature,\n            comment: this.props.item.comment,\n            path: this.props.item.path,\n            url: this.props.item.url,\n            bibliography_preview: null,\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n            overflow: \"scroll\",\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n        </div>\n\n        <div style={{gridArea: \"3/1/3/2\"}}><span title={this.props.item.dir_name}>Werk:</span></div>\n        <div style={{gridArea: \"3/2/3/3\"}}>\n            <AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id});this.updateBibliography(id)}} />\n        </div>\n        <div style={{gridArea: \"4/1/4/2\"}}>Alter Dateiname:</div>\n        <div style={{gridArea: \"4/2/4/3\"}}>{this.props.item.dir_name}</div>\n        {this.state.bibliography_preview?<div className=\"minorTxt\" style={{gridArea: \"5/1/5/2\"}}>Biblio-graphische Angaben:</div>:null}\n        {this.state.bibliography_preview?<div className=\"minorTxt\" style={{gridArea: \"5/2/5/3\", boxShadow: \"0 1px 2px lightgray\", backgroundColor: \"#F4F4F4\", padding: \"5px 10px\"}}>{this.state.bibliography_preview}</div>:null}\n        <div style={{gridArea: \"6/1/6/2\"}}>Ressource:</div>\n        <div style={{gridArea: \"6/2/6/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource?this.state.ressource:\"\"} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></div>\n        {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n            <div key=\"0\" style={{gridArea: \"7/1/7/2\"}}>Editor:</div>,\n            <div key=\"1\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"8/1/8/2\"}}>Jahr:</div>,\n            <div key=\"3\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"9/1/9/2\"}}>Band:</div>,\n            <div key=\"5\" style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volume?this.state.volume:\"\"} onChange={e=>{this.setState({volume: e.target.value})}} /></div>,\n            <div key=\"6\" style={{gridArea: \"10/1/10/2\"}}>Bandinhalt:</div>,\n            <div key=\"7\" style={{gridArea: \"10/2/10/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volumeContent?this.state.volumeContent:\"\"} onChange={e=>{this.setState({volumeContent: e.target.value})}} /></div>,\n            <div key=\"8\" style={{gridArea: \"11/1/11/2\"}}>Reihe:</div>,\n            <div key=\"9\" style={{gridArea: \"11/2/11/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie?this.state.serie:\"\"} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></div>\n        ]:null}\n        {this.state.ressource===2?[\n            <div key=\"0\" style={{gridArea: \"7/1/7/2\"}}>Stadt:</div>,\n            <div key=\"1\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"8/1/8/2\"}}>Bibliothek:</div>,\n            <div key=\"3\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.library?this.state.library:\"\"} onChange={e=>{this.setState({library: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"9/1/9/2\"}}>Signatur:</div>,\n            <div key=\"5\" style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.signature?this.state.signature:\"\"} onChange={e=>{this.setState({signature: e.target.value})}} /></div>\n        ]:null}\n        {this.state.ressource===3||this.state.ressource===4?[\n            <div key=\"0\" style={{gridArea: \"7/1/7/2\"}}>Drucker:</div>,\n            <div key=\"1\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"8/1/8/2\"}}>Ort:</div>,\n            <div key=\"3\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"9/1/9/2\"}}>Jahr:</div>,\n            <div key=\"5\" style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n        ]:null}\n        <div style={{gridArea: \"13/1/13/2\"}}>Kommentar:</div><div style={{gridArea: \"13/2/13/3\"}}><textarea style={{width: \"270px\", height: \"100px\"}} value={this.state.comment?this.state.comment:\"\"} onChange={e=>{this.setState({comment: e.target.value})}}></textarea></div>\n        <div style={{gridArea: \"14/1/14/2\"}}><span title={this.props.item.dir_name}>Dateipfad:</span></div>\n        <div style={{gridArea: \"14/2/14/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.path?this.state.path:\"\"} onChange={e=>{this.setState({path: e.target.value})}} /></div>\n        <div style={{gridArea: \"15/1/15/2\"}}><span title={this.props.item.dir_name}>Link <i className=\"minorTxt\">(nur externe Quellen)</i>:</span></div>\n        <div style={{gridArea: \"15/2/15/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.url?this.state.url:\"\"} onChange={e=>{this.setState({url: e.target.value})}} /></div>\n        <div style={{gridArea: \"16/2/16/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            if((this.state.type===0||this.state.type===1||this.state.type===5)&&(!this.state.editor||!this.state.year)){\n                this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n            } else {\n                this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                console.log(\"beep\",{\n                    id: this.state.id,\n                    work_id: this.state.work_id,\n                    ressource: this.state.ressource,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.volumeContent,\n                    serie: this.state.serie,\n                    comment: this.state.comment,\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature,\n                    path: this.props.item.path,\n                    url: this.props.item.url,\n                });\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work_id,\n                    ressource: this.state.ressource,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.volumeContent,\n                    serie: this.state.serie,\n                    comment: this.state.comment,\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature,\n                    path: this.props.item.path,\n                    url: this.props.item.url,\n                });\n                this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n                this.props.onUpdate(this.state.id);\n            }\n        }} />\n        <input type=\"button\" value=\"löschen\" style={{marginLeft: \"20px\"}} onClick={async ()=>{\n            if(window.confirm(\"Soll die Ressource wirklich gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                this.props.status(\"deleting\");\n                await arachne.edition.delete(this.state.id);\n                this.props.status(\"deleted\", \"Der Eintrag wurde gelöscht.\");\n                this.props.onUpdate(null);\n            }\n        }} />\n        </div>\n    </div>\n</div>\n        );\n    }\n    componentDidMount(){\n        this.updateBibliography(this.props.item.work_id);\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.updateBibliography(this.props.item.work_id);\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature,\n                comment: this.props.item.comment,\n                path: this.props.item.path,\n                url: this.props.item.url,\n            });\n        }\n    }\n    async updateBibliography(work_id){\n        if(work_id>0){\n            let bibliography = await arachne.work.get({id: work_id}, {select: [\"bibliography\"]});\n            if(bibliography.length > 0){\n                this.setState({bibliography_preview: bibliography[0].bibliography});\n            } else {\n                this.setState({bibliography_preview: null});\n            }\n        }\n    }\n}\n\nexport { Ressource, SekLit };","import React from \"react\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\nimport { render } from \"@testing-library/react\";\n\nclass Account extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName: arachne.me.first_name,\n            lastName: arachne.me.last_name,\n            eMail: arachne.me.email,\n            user: arachne.me,\n            oldPassword: null,\n            newPassword: null,\n            z_width: arachne.options.z_width,\n            };\n    }\n    render(){\n        return <div style={{margin: \"0 20px\"}}>\n            <h3>Persönliche Daten</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>Vorname:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.firstName} onChange={e=>{this.setState({firstName:e.target.value})}}/></div>\n                <div>Nachname:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.lastName} onChange={e=>{this.setState({lastName:e.target.value})}}/></div>\n                <div>Email-Adresse:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.user.email} onChange={e=>{this.setState({eMail:e.target.value})}}/></div>\n                <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: this.state.firstName,\n                        last_name: this.state.lastName,\n                        email: this.state.eMail,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    this.props.status(\"saved\");\n        \n                }} /></div>\n            </div>\n            <h3>Passwort</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>altes Passwort:</div><div><input style={{width: \"100%\"}} type=\"password\" onChange={e=>{this.setState({oldPassword:e.target.value})}}/></div>\n                <div>neues Passwort:</div><div><input style={{width: \"100%\"}} type=\"password\" onChange={e=>{this.setState({newPassword:e.target.value})}}/></div>\n                <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: this.state.oldPassword,\n                        new_password: this.state.newPassword\n                    });\n                    this.props.status(\"saved\");\n        \n                }} /></div>\n            </div>\n            <h3>Darstellung der Webseite</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>Breite der Zettel:</div>\n                <div>\n                    <input type=\"range\" min=\"400\" max=\"600\" value={this.state.z_width} className=\"slider\" id=\"zettelWidthRange\" onChange={e=>{arachne.setOptions(\"z_width\", e.target.value);arachne.setOptions(\"z_height\", 350/500*parseInt(e.target.value));this.setState({z_width: e.target.value})}} />\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"lemma\",\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // process\n            const zettel_process_data = {\n                labels: [\"abgeschlossen\", \"nur Lemma\", \"unbearbeitet\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_process,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            \n            zettelCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltype\n            const zettel_types_data = {\n                labels: [\"verzetteltes Material\", \"Exzerpt\", \"Index\", \"Literatur\", \"Index (unkl. Werk)\", \"Notiz\", \"kein Typ\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_types,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3', '#EFEFEF', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2', '#EEEEEE', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // created in years\n            const zettel_created_data = {\n                labels: [\"2020\", \"2021\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>nach Jahren</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_data} /></div>);\n\n            // created in current year\n            const zettel_created_current_data = {\n                labels: [\"Jan.\", \"Feb.\", \"Mär.\", \"Apr.\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Okt.\", \"Nov.\", \"Dez.\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed_current,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'bearbeitet',\n                        data: this.state.zettel_created_current,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>in diesem Jahr</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_current_data} /></div>);\n            \n            zettelBox = <div>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_letters,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false, position: \"bottom\"}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (in MLW)\n            const lemma_mlw_data = {\n                labels: [\"relevant\", \"nicht relevant\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_mlw,\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Relevanz fürs Wörterbuch</h4><Pie options={{plugins: {legend:{display: true, position: \"bottom\"}}}} data={lemma_mlw_data} /></div>);\n\n            lemmaBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            console.log(this.state.ressource_work);\n            const ressource_work_data = {\n                labels: [\"mit Volltext und pdf\", \"nur mit pdf\", \"ohne pdf und Volltext\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.ressource_work,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>Werke nach Volltext und pdfs</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_work_data} /></div>);\n\n            ressourceBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{ressourceCharts}</div>;\n        }\n        \n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"block\",\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"lemma\":\n                mainBody = <div style={styleBody}>{lemmaBox}</div>;\n                break;\n            case \"zettel\":\n                mainBody = <div style={styleBody}>{zettelBox}</div>;\n                break;\n                case \"ressource\":\n                    mainBody = <div style={styleBody}>{ressourceBox}</div>;\n                    break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 10% 0 10%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {padding: \"5px 10px\", cursor: \"default\"};\n        const styleTabActive = {padding: \"5px 10px\", borderBottom: \"1px solid red\", cursor: \"default\"};\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"lemma\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"lemma\"})}}>Lemma</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n                <div style={this.state.tab===\"ressource\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ressource\"})}}>Werke und Ressourcen</div>\n            </div>\n            {mainBody}\n            <div style={{color: \"lightgray\", float: \"right\", marginTop: \"20px\", fontSize: \"14px\"}}>Stand: {this.state.last_updated}</div>\n        </div>);\n    }\n    componentDidMount(){\n        const getNumbers = async () => {\n            const numbers = await arachne.statistics.getAll();\n            console.log(numbers);\n            this.setState({\n                last_updated: JSON.parse(numbers.find(i => i.name === \"last_updated\").data),\n                zettel_process: JSON.parse(numbers.find(i => i.name === \"zettel_process\").data),\n                zettel_types: JSON.parse(numbers.find(i => i.name === \"zettel_type\").data),\n                zettel_created: JSON.parse(numbers.find(i => i.name === \"zettel_created\").data),\n                zettel_changed: JSON.parse(numbers.find(i => i.name === \"zettel_changed\").data),\n                zettel_created_current: JSON.parse(numbers.find(i => i.name === \"zettel_created_current\").data),\n                zettel_changed_current: JSON.parse(numbers.find(i => i.name === \"zettel_changed_current\").data),\n                lemma_letters: JSON.parse(numbers.find(i => i.name === \"lemma_letter\").data),\n                lemma_mlw: JSON.parse(numbers.find(i => i.name === \"lemma_mlw\").data),\n                ressource_work: JSON.parse(numbers.find(i => i.name === \"ressource_work\").data)\n            });\n        }\n        getNumbers();\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"updateOpera\",\n            ocrJobs: [],\n            faszikelJobs: [],\n            users: []\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"updateOpera\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Damit Änderungen in den <i>opera</i>-Listen oder Änderungen in den Ressourcen in den Listen sichtbar werden, müssen sie auf dem Server aktualisiert werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"opera-Listen aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        //const reStatus = await arachne.exec(\"opera_maiora_update\");\n                        const reStatus = await arachne.exec(\"opera_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"updateStatistics\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Um die Zahlen in der Statistik-Ansicht zu aktualisieren, müssen sie auf dem Server neu berechnet werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"Statistik aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        const reStatus = await arachne.exec(\"statistics_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"showFaszikel\":\n                let faszikelRows = [];\n                for(const faszikel of this.state.faszikelJobs){\n                    if(faszikel.log){\n                        let dateArray = faszikel.date.split(\"\")\n                        dateArray[10] = \" \";\n                        dateArray[13] = \":\";\n                        dateArray[16] = \":\";\n                        let createdDate = dateArray.join(\"\").substring(0, 19);\n                        faszikelRows.push(<tr style={{margin: \"5px 2px\", borderTop: \"0.5px solid aliceblue\"}}><td><b>{faszikel.name.substring(0, faszikel.name.length-4)}</b><br /><i className=\"minorTxt\">{createdDate}</i></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/${faszikel.name}`}>pdf</a></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/zip`}>Artikel</a></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/log`}>log-Datei</a></td></tr>);\n                    } else {\n                        let dateArray = faszikel.date.split(\"\")\n                        dateArray[10] = \"T\";\n                        dateArray[13] = \":\";\n                        dateArray[16] = \":\";\n                        const timeElapsed = Math.floor((Date.now() - new Date(dateArray.join(\"\").substring(0, 19)))/1000/60);\n                        faszikelRows.push(<tr style={{margin: \"5px 2px\", borderTop: \"0.5px solid aliceblue\"}}><td><b>Neuer Auftrag in Bearbeitung</b><br /><i className=\"minorTxt\">{timeElapsed} Minuten vergangen.</i></td><td></td><td></td></tr>);\n                    }\n                }\n                styleBody.gridTemplateRows = \"1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zum Erstellen der Faszikel.</div>\n                    <div style={{gridArea:\"2/1/2/3\", textAlign:\"justify\"}}>\n                        <table style={{width: \"100%\"}}>\n                            <tbody>\n                                {faszikelRows}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>;\n                break;\n            case \"showOcrJobs\":\n                let ocrRows = []\n                for(const row of this.state.ocrJobs){\n                    ocrRows.push(<tr key={row.id}><td>{row.c_date.substring(0, 10)}</td><td>{row.source}</td><td>{row.finished===1?\"beendet\":\"offen\"}</td><td>{row.total}</td><td>{Math.round(1000/row.total*row.count)/10}%</td></tr>)\n                }\n                styleBody.gridTemplateRows = \"1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zur ocr-Erkennung.</div>\n                    <div style={{gridArea:\"2/1/2/3\", textAlign:\"right\"}}>\n                        <table style={{width: \"100%\"}}>\n                            <thead>\n                                <tr key={0}>\n                                    <th>Datum</th>\n                                    <th>Objekte</th>\n                                    <th>Status</th>\n                                    <th>Gesamtauftrag</th>\n                                    <th>bearbeitet</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {ocrRows}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>;\n                break;\n            case \"accounts\":\n                styleBody.display = \"block\";\n                let userRows = [];\n                // online: 30*60*1000 = 1800000\n                for(const user of this.state.users){\n                    userRows.push(<tr key={user.id} onDoubleClick={e=>{e.stopPropagation();this.setState({item: user})}}><td>{user.first_name} {user.last_name}</td><td>{JSON.parse(user.access).join(\", \")}</td><td>{user.agent}</td><td>{Date.now()-new Date(user.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td></tr>)\n                }\n                mainBody = <div style={styleBody}><table className=\"minorTxt\" width=\"100%\"><tbody>{userRows}</tbody></table></div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox} onDoubleClick={()=>{this.setState({item: null})}}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"updateOpera\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateOpera\"})}}>Opera-Listen</div>\n                <div style={this.state.tab===\"updateStatistics\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateStatistics\"})}}>Statistiken</div>\n                <div style={this.state.tab===\"showOcrJobs\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"showOcrJobs\"})}}>ocr-Aufträge</div>\n                {arachne.access(\"faszikel\")?<div style={this.state.tab===\"showFaszikel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"showFaszikel\"})}}>Faszikel</div>:null}\n                {arachne.access(\"admin\")?<div style={this.state.tab===\"accounts\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"accounts\"})}}>Kontenverwaltung</div>:null}\n            </div>\n            {mainBody}\n            {this.state.item?<ServerAside status={this.props.status}  item={this.state.item} onUpdate={ids=>{alert(\"Ansicht updaten!\")}} />:null}\n        </div>);\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){\n            const loadUsers = async () => {\n                const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n                this.setState({users: newUsers});\n                const newOcrJobs = await arachne.ocr_jobs.getAll();\n                this.setState({ocrJobs: newOcrJobs});\n                if(arachne.access(\"faszikel\")){\n                    const allFaszikelJobs = await arachne.exec(\"get_faszikel_jobs\", true);\n                    allFaszikelJobs.sort((a,b)=>a.date<b.date);\n                    this.setState({faszikelJobs: allFaszikelJobs.splice(0,50)});\n                }\n            };\n            loadUsers();\n        }\n    }\n}\nclass ServerAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {access: JSON.parse(this.props.item.access)};\n    }\n    render(){\n        const rights = {\n            \"auth\": \"Profil aktiviert\",\n            \"admin\": \"Adminrechte\",\n            \"o_view\": \"Kommentarspalte (opera-Listen)\",\n            \"o_edit\": \"opera-Listen bearbeiten\",\n            \"z_add\": \"Zettel importieren\",\n            \"z_edit\": \"Zettel bearbeiten\",\n            \"l_edit\": \"Lemma-Liste bearbeiten\",\n            \"library\": \"Zugriff auf Bibliothek\",\n            \"e_edit\": \"Bibliothek bearbeiten\",\n            \"setup\": \"Zugriff auf Datenbanksetup\",\n            \"module\": \"Zugriff über Python-Modul\",\n            \"editor\": \"Zugriff auf Lemmastrecken-Editor\",\n            \"comment\": \"Zugriff auf Kommentarfunktion\",\n            \"comment_moderator\": \"Kommentare moderieren\",\n            \"faszikel\": \"Faszikel konvertieren\",\n        };\n        let rightList = [];\n        for(const [right, description] of Object.entries(rights)){\n            let marked = \"\";\n            if(this.state.access.includes(right)){marked = \"accessMarked\"}\n            rightList.push(<div key={right} className={marked} onClick={()=>{\n                let nAccess = this.state.access;\n                if(nAccess.includes(right)){\n                    nAccess = nAccess.map(i => {if(i!=right){return i}});\n                } else {\n                    nAccess.push(right);\n                }\n                this.setState({access: nAccess});\n            }}>{description}</div>);\n        }\n\n        return <div style={{\n            position: \"fixed\",\n            overflow: \"scroll\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"25px 15px 10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n            <h3>{this.props.item.first_name} {this.props.item.last_name}</h3>\n            <div>Am {this.props.item.session_last_active} zuletzt online.</div>\n            <div style={{border: \"1px solid black\", margin: \"10px 0\", padding: \"10px\"}}>{this.props.item.agent}</div>\n            <h4>Rechte</h4>\n            <div className=\"accessBox\">{rightList}</div>\n            <div><input type=\"button\" style={{float: \"right\", marginTop: \"20px\"}} value=\"speichern\" onClick={()=>{\n                this.props.status(\"saving\");\n                arachne.user.save({\n                    id: this.props.item.id,\n                    access: JSON.stringify(this.state.access)\n                })\n                this.props.status(\"saved\");\n            }} /></div>\n        </div>;\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.id!=this.props.item.id){\n            this.setState({access: JSON.parse(this.props.item.access)});\n        }\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            pathLst: [],\n            scanWork: 1,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null,\n            zettelLetter: \"A\",\n            zettelType: 0,\n            zettelFiles: null,\n            zettelEditors: [[arachne.me.id, arachne.me.last_name]],\n            zettelEditorSelected: arachne.me.id,\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature,\n                                path: this.state.scanPath,\n                                url: \"\",\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.pathLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else if(this.state.ocrRessource==null){\n                            this.props.status(\"error\", \"Wählen Sie einen Ordner aus.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLst = await arachne.scan.get({path: this.state.ocrRessource}, {select: [\"id\", \"filename\"]});\n                            console.log(scanLst);\n                            let missLst = [];\n                            let saveLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    saveLst.push({id: cScan.id, full_text: fileTxt});\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(saveLst.length>0){await arachne.scan.save(saveLst)}\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Buchstabe:</div>\n                    <div><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I\"], [\"J\", \"J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U\"], [\"V\", \"V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></div>\n                    <div>erstellt von:</div>\n                    <div><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></div>\n                    <div>Zettel-Typ:</div><div><SelectMenu options={[[0, \"Index-/Exzerpt-Zettel\"], [1, \"verzetteltes Material\"], [4, \"Literatur\"]]} onChange={e=>{this.setState({zettelType: e.target.value})}} /></div>\n                    <div>Dateien:</div>\n                    <div><input type=\"file\" accept=\"image/jpeg\" multiple onChange={e=>{this.setState({zettelFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"5/2/5/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.zettelFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden vorbereitet.\");\n                            const maxItem= 100;\n                            let cItemCount = maxItem;\n                            let cUploadIndex = -1;\n                            let uploadGroup = [];\n                            const fLength = this.state.zettelFiles.length;\n                            // prepare upload groups\n                            for(let i=0; i<fLength; i++){\n                                if(cItemCount >= maxItem){\n                                    cItemCount = 0;\n                                    cUploadIndex ++;\n                                    uploadGroup.push(new FormData());\n                                    uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                    uploadGroup[cUploadIndex].append(\"type\", this.state.zettelType);\n                                    uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                }\n                                cItemCount ++;\n                                uploadGroup[cUploadIndex].append(\"files\", this.state.zettelFiles[i]);\n                            }\n                            // loop through groups and upload!\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            for(const uItem of uploadGroup){\n                                await arachne.importZettel(uItem);\n                            }\n\n                            this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht gefunden.</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const paths = await arachne.scan_paths.getAll({select: [\"path\"], order: [\"path\"]});\n            let newPathLst = [];\n            for(const path of paths){\n                newPathLst.push([path.path, path.path]);\n            }\n            this.setState({pathLst: newPathLst, ocrRessource: newPathLst[0][0]});\n\n        }\n        loadOptions();\n\n        if(arachne.access(\"admin\")){\n            arachne.user.getAll({order: [\"last_name\"]}).then(users=>{\n                let userLst = [];\n                for(const user of users){\n                    userLst.push([user.id, user.last_name]);\n                }\n                this.setState({zettelEditors: userLst});\n            }).catch(e=>{throw e});\n        }\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Account, Help, Import, Server, Statistics };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {showDate: true, count:0, selectionDetail:{ids:[], currentId:null, activeProjects: []}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                boxName=\"zettel\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"],\n                    [\"type\", \"Typ\"],\n                    [\"id\", \"ID\"],\n                    [\"opus\", \"Werk\"],\n                    [\"date_type\", \"Datum-Typ\"],\n                    [\"date_own\", \"eigenes Sortierdatum\"],\n                    [\"date_own_display\", \"eigenes Anzeigedatum\"],\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <ZettelBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                presetSelection={this.state.presetSelection}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n                showDate={this.state.showDate}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside activeProjects={this.state.activeProjects} status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} openNextItem={()=>{this.openNextItem()}} toggleShowDate={()=>{\n                if(this.state.showDate){this.setState({showDate: false})}\n                else{this.setState({showDate: true})}\n                \n                }} />:\"\"}\n        </div>\n        );\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n    componentDidMount(){\n        if(arachne.access(\"editor\")){\n            arachne.project.get({status: 1})\n            .then(projects => {\n                let projectLst = [];\n                for(const project of projects){\n                    projectLst.push([project.id, project.name]);\n                }\n                this.setState({activeProjects: projectLst});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard showDate={this.props.showDate} testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {height: arachne.options.z_height+\"px\", width: arachne.options.z_width+\"px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img alt=\"\" style={{objectFit: \"fill\", borderRadius: \"7px\"}} className={classList} src={zettel.img_path+\".jpg\"}></img>\n                {this.props.showDate?<div className=\"zettel_msg\" dangerouslySetInnerHTML={parseHTML(zettel.date_own_display?zettel.date_own_display:zettel.date_display)}></div>:null}\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            comments: [],\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_display: this.props.item.date_display,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null,\n            batch_project: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n            overflow: \"scroll\",\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style} className=\"mainColors\">\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(e.target.value===\"\"){\n                        this.setState({date_own: null});\n                    } else if(!isNaN(e.target.value)&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            let commentBox = null;\n            if(this.state.comments.length>0){\n                let commentList = [];\n                for(const comment of this.state.comments){\n                    commentList.push(<div key={comment.id}>{comment.comment}</div>);\n                }\n                commentBox = <div>{commentList}</div>;\n            }\n            return (\n    <div style={style} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} classList=\"zettel_type\" />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" searchCol=\"lemma\" returnCol=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{\n                this.setState({ac_web: value, work_id: id});\n                const newDateType = await arachne.work.get({id: id}, {select: [\"date_type\"]});\n                if(newDateType.length>0){\n                    this.setState({date_type: newDateType[0].date_type});\n                }\n            }} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n            <div style={{textAlign: \"right\", marginBottom: \"20px\"}}><a className=\"minorTxt\" onClick={this.props.toggleShowDate}>Datierung ein-/ausblenden</a></div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}>\n                <input type=\"button\" value=\"speichern&weiter\" style={{marginBottom: \"10px\"}} onClick={()=>{this.saveDetail(true)}} />\n                <input type=\"button\" value=\"speichern\" onClick={()=>{this.saveDetail()}} />\n            </div>\n        </div>\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        {arachne.access(\"admin\")?\n        <div style={{textAlign: \"right\", fontSize:\"25px\", marginRight: \"10px\"}}><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{\n            if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                this.props.status(\"deleting\");\n                arachne.zettel.delete(this.state.id);\n                this.props.status(\"deleted\");\n            }\n        }} /></div>\n        :null}\n        {commentBox}\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\"  searchCol=\"lemma\" returnCol=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                case 4:\n                    //inputType = <SelectMenu style={{width: \"86%\"}} options={this.props.activeProjects} onChange={event=>{this.setState({batch_project: event.target.value})}} />;\n                    break;\n                default:\n                    inputType = <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n            }\n            let batch_options = [[1, \"Lemma\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]];\n            if(arachne.access(\"editor\")){batch_options.push([4,\"Projekt\"])}\n            return <div style={style} className=\"mainColors\">\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={batch_options} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else if(this.state.batchType===4&&this.state.batch_project!=null){newKey=\"project\";newValue=this.state.batch_project}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false&&this.state.batchType<4){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.me.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }else if(skipSave===false&&this.state.batchType===4){\n                            const defaultArticle = await arachne.article.get({\"project_id\": this.state.batch_project, sort_nr: 0, parent_id: 0});\n                            if(defaultArticle.length!=1){alert(\"Ein Fehler ist aufgetreten: Die Zettel können dem Projekt nicht zugewiesen werden!\")}\n                            else{\n                                const newLinks = this.props.selection.ids.map(i=>{return {zettel_id: i, article_id: defaultArticle[0].id};});\n                                this.props.status(\"saving\");\n                                await arachne.zettel_lnk.save(newLinks);\n                                this.props.status(\"saved\");   \n                            }\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n        // loading comments\n        if(arachne.access(\"comment\")){\n            arachne.comment.get({zettel_id: this.state.id})\n            .then(comments=>{\n                console.log(comments);\n                this.setState({comments: comments});\n            })\n            .catch(e=>{throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_display: this.props.item.date_display,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_display: this.props.item.date_display,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})\n            }\n            // loading comments\n            if(arachne.access(\"comment\")){\n                arachne.comment.get({zettel_id: this.state.id})\n                .then(comments=>{\n                    console.log(comments);\n                    this.setState({comments: comments});\n                })\n                .catch(e=>{throw e;});\n            }\n        }\n    }\n    async saveDetail(next=false){\n        console.log(this.state.date_own);\n        if(!(this.state.date_own_display===null||this.state.date_own_display===\"\")&&(this.state.date_own===null||this.state.date_own===\"\")){\n            this.props.status(\"error\", \"Sie dürfen kein Anzeigedatum setzen, ohne ein Sortierdatum anzugeben!\");\n        } else if(this.state.work_id>0&&this.state.date_type===9&&((this.state.date_own!=\"\"&&this.state.date_own!=null&&!Number.isInteger(this.state.date_own))||((this.state.date_own===\"\"||this.state.date_own===null)&&!window.confirm(\"Achtung: Dieser Zettel benötigt eine Datierung! Soll er trotzdem ohne Datierung gespeichert werden?\")))){\n            this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n        } else if (!(this.state.date_own===null||this.state.date_own===\"\")&&(this.state.date_own_display===null||this.state.date_own_display===\"\")){\n            this.props.status(\"error\", \"Setzen Sie ein Anzeigedatum für den Zettel!\");\n        } else {\n            let nVals = {\n                id: this.state.id,\n                type: this.state.type,\n                user_id: arachne.me.id\n            };\n            if(this.state.work_id>0){nVals.work_id = this.state.work_id}\n            else{nVals.work_id = null}\n\n            this.props.status(\"saving\");\n            if(this.state.lemma_id===null&&this.state.newLemma_Lemma!==\"\"){this.setState({addLemma: true})}\n            else if(this.state.lemma_id>0){nVals.lemma_id = this.state.lemma_id}\n            else {nVals.lemma_id = null}\n            if(this.state.date_type===9&&this.state.date_own!=\"\"&&Number.isInteger(this.state.date_own)){\n                nVals.date_own = this.state.date_own;\n                nVals.date_own_display = this.state.date_own_display;\n            } else {\n                nVals.date_own = null;\n                nVals.date_own_display = null;\n            }\n            await arachne.zettel.save(nVals)\n            this.props.status(\"saved\");\n            if(next){\n                document.querySelector(\"select.zettel_type\").focus();\n                this.props.openNextItem();\n            }else{this.props.onUpdate([this.state.id]);}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\n\nclass Editor extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div>Der Lemmastrecken-Editor ist nur in der alten Version verfügbar. Klicken Sie <a href=\"/site\">hier</a> um ihn zu öffnen.</div>;\n    }\n}\n\nexport { Editor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./opera.js\";\nimport { Ressource, SekLit } from \"./ressources.js\";\nimport { Account, Help, Import, Server, Statistics } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\nimport { Editor } from \"./editor.js\";\n\nconst colors = {shadow: \"#3c6e71\"}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\n                    \"Zettel-Datenbank\": \"zettel\",\n                    \"Lemmaliste\": \"lemma\",\n                    /*\"Volltext-Suche\": \"fulltext\",*/\n            }},\n            \"Verzeichnisse\": {\n                visible: false, \n                items: {\n                    \"opera-maiora\":\"maiora\",\n                    \"opera-minora\":\"minora\",\n                    \"Ressourcen\":\"ressources\",\n                    \"Sekundärliteratur\":\"seklit\",\n            }},\n            \"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                    \"Hilfe\":\"help\",\n                    \"Konto\":\"account\",\n                    \"Server\": \"server\",\n                    \"Import\": \"import\",\n                    \"Statistiken\":\"stats\",\n                    \"abmelden\":\"logout\",\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 2000000,\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries}  className=\"mainColors\" style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {\n                        if(this.state.currentSubmenu === mainEntry){this.setState({currentSubmenu: null})}\n                        else{this.setState({currentSubmenu: mainEntry})}\n                    }}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainColors\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n        this.tbls = [\"author\", \"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\", \"seklit\", \"project\", \"article\", \"zettel_lnk\", \"statistics\", \"scan_paths\", \"ocr_jobs\", \"comment\"];\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"overview\":\n                    main = <Editor status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"ressources\":\n                    main = <Ressource status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"seklit\":\n                    main = <SekLit status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"stats\":\n                    main = <Statistics status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"server\":\n                    main = <Server status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"lemma\":\n                    main = <Lemma status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"account\":\n                    main = <Account status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    main = <div>Unbekannter Menü-Punkt {this.state.res}</div>;\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){\n                await arachne.open(this.tbls);\n                this.setState({mode: \"main\"});\n            }\n        }\n        checkSession();\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        if(email!==\"\"&&password!==\"\"&&await arachne.login(email, password, this.tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}