{"version":3,"sources":["arachne.js","elements.js","lemma.js","opera.js","ressources.js","settings.js","zettel.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","rowId","data","Array","isArray","body","response","newValues","rId","id","parseInt","text","arachne","me","user","password","tbls","open","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","newForm","mode","rights","parse","every","r","access","includes","SearchInput","props","state","itemId","item","searchOptions","value","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","onChange","e","setState","target","type","placeholder","onKeyUp","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","prevProps","prevState","changeItem","React","Component","SearchBox","queryTxt","sOrder","nextID","searchFields","cSF","sF","sendQuery","map","s","gridArea","faPlusCircle","position","top","fontSize","addSearchFields","float","marginTop","marginLeft","display","sortOptions","event","storedItems","sessionStorage","getItem","boxName","setupItems","forceSearch","length","nSearchFields","filter","exportSF","document","querySelectorAll","children","setItem","searchQuery","alert","Navigator","currentPage","scrollTo","faAngleUp","loadPage","margin","textAlign","onBlur","isNaN","maxPage","move","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","backgroundColor","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faRecycle","faTrashAlt","faCloudMoon","ref","bottom","left","transition","borderRadius","overflow","zIndex","SelectMenu","op","classList","pointerEvents","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","i","option","col","dataset","cursor","changeInputValue","onKeyDown","changeSelectedOption","newValue","get","newOptions","SelectorWrapper","isSelected","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","child","keys","selectCallback","targetId","inRange","newIds","forEach","preset","el","querySelector","scrollIntoView","behavior","block","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","Lemma","gridTemplateColumns","gridTemplateRows","rowGap","q","newPage","currentElements","showDetail","onUpdate","reloadEntry","right","confirm","lemma","newItem","indexOfNewItem","findIndex","newQuery","console","log","queryOrder","Math","floor","selectionDetail","LemmaBox","selection","cEls","cEl","onDoubleClick","find","closest","title","dangerouslySetInnerHTML","lemma_display","dicts","comment","LemmaAside","homonym","MLW","Stern","Fragezeichen","newLemmaValue","lemma_nr","save","ressource","work_id","editor","year","volume","volumeContent","serie","location","library","signature","OperaAside","OperaBox","oLst","trLst","cHitId","hits","hitIndex","scrollRef","editionLst","editions_id","editionsId","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","arrow","faExternalLinkAlt","cLabel","href","rel","hitStyle","some","listName","abbr","full","author_id","date_display","bibliography","citation","oMax","nextPage","cSearch","maxHits","faBackward","gotoSearchResult","faForward","getAll","getLst","Opera","pageMax","itemDetail","reloadZettel","Ressource","workLst","work","in_use","works","newWorkLst","ac_web","getWorks","edition","RessourceBox","resTypes","label","opus","RessourceAside","vol_cont","Account","Statistics","tab","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","Object","datasets","values","borderColor","borderWidth","height","plugins","legend","zettel_types_data","zettel_types","zettel_created_data","zettel_created","aspectRatio","zettel_changed_data","zettel_changed","fill","lemmaBox","lemmaCharts","lemma_letters_data","ressourceBox","ressourceCharts","ressource_fullTexts_data","ressource_fullTexts","styleBody","mainBody","styleTab","styleTabActive","borderBottom","justifyContent","zettel","zettels","process","abgeschlossen","z","lemma_id","unbearbeitet","reduce","previousValue","currentValue","types","verzettelt","Index","Exzerpt","Literatur","created","changed","years","range","start","stop","from","_","Date","now","getFullYear","months","getMonth","month","c_date","u_date","getZettel","lemmata","letters","letter","l","substring","toUpperCase","Rest","getLemmata","scan","scans","fullTexts","full_text","full_tet","getRessources","Server","users","gridGap","exec","userRows","first_name","last_name","join","agent","session_last_active","faSun","faMoon","newUsers","loadUsers","Import","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","zettelLetter","zettelFiles","zettelEditors","zettelEditorSelected","scanPath","name","accept","multiple","files","path","newEditionId","uploadForm","FormData","append","fLength","importScans","scan_lnk","edition_id","scanLnks","scanLst","scanLnk","scan_id","nScan","missLst","file","fName","cScan","filename","fileTxt","cItemCount","cUploadIndex","uploadGroup","uItem","importZettel","editions","newEditionLst","loadOptions","userLst","catch","Help","Zettel","presetSelection","openNextItem","lastIndex","ZettelBox","testProp","ZettelCard","img_path","alt","src","txt","ZettelAside","addLemma","ressources","batchType","date_type","lemma_ac","date_own","date_own_display","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","newId","cRes","keyCount","dateOwn","dateStyle","borderTop","paddingTop","saveDetail","delete","inputType","skipSave","newKey","newValueLst","cId","newValueObj","user_id","res","next","Number","isInteger","nVals","focus","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","addEventListener","newStatus","close","main","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","email","createAccount","login","checkSession","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7d45571a.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n            }\n        });\n    }\n    async delete(rowId){\n        let url = `${this.url}/data/${this.tblName}/${rowId}`;\n        let data = null;\n        if(Array.isArray(rowId)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n            data = JSON.stringify(rowId);\n        }\n        const response = await fetch(url, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Bearer ${this.key}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: data\n        });\n        if(response.status===200){\n            return true;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"delete\", status: response.status}});\n            window.dispatchEvent(errorEvent);\n        }\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        this.url = url;\n        this.key = null;\n        this.me = null;\n    }\n    async login(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            return this.open(tbls);\n        }else{\n            return false;\n        }\n    }\n    async open(tbls=null){\n        const reUser = await this.getUser();\n        if(reUser){\n            this.me = reUser;\n            this.me.selectKey = 'ctrl';\n            if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n        }\n        else {return false;}\n\n        if(tbls == null){tbls = await this.tables()}\n        for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n        return true;\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n}\n\n//let arachne = new Arachne(\"http://localhost:8080\");\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog, faRecycle, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.itemId,\n            c:  this.props.c,\n            o:  this.props.o,\n            v: this.props.v,\n        }\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.c} onChange={e=>{this.setState({c: e.target.value})}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.o} onChange={e=>{this.setState({o: e.target.value})}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} value={this.state.v} onChange={e=>{this.setState({v: e.target.value})}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.itemId)}} />\n        </div>\n        );\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.c!=this.state.c||prevState.o!=this.state.o||prevState.v!=this.state.v){\n            this.props.changeItem(this.state);\n        }\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {sOrder: null, nextID: 1, searchFields: []};\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} itemId={sF.id} key={sF.id} c={sF.c} o={sF.o} v={sF.v} clickButton={()=>{this.sendQuery()}} changeItem={item=>{\n                this.setState({searchFields: this.state.searchFields.map(s=>{\n                    if(s.id===item.id){return item}else{return s}\n                })});\n            }} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={this.props.sortOptions} onChange={event=>{this.setState({sOrder: JSON.parse(event.target.value)})}} />\n            </div>\n        </div>\n    }\n    componentDidMount(){\n        let storedItems = sessionStorage.getItem(\"searchBox_\"+this.props.boxName);\n        if(this.props.setupItems){\n            this.setState({forceSearch: true, searchFields: this.props.setupItems, nextID: this.props.setupItems.length});\n        } else if(storedItems){\n            storedItems = JSON.parse(storedItems);\n            this.setState({forceSearch: true, searchFields: storedItems[0], nextID: storedItems[1] , sOrder: storedItems[2]});\n        } else {\n            this.setState({searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]});\n        }\n\n    }\n    componentDidUpdate(){\n        if(this.state.forceSearch){\n            this.sendQuery();\n            this.setState({forceSearch: false});\n        }\n    }\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){\n            sessionStorage.setItem(\"searchBox_\"+this.props.boxName, JSON.stringify([this.state.searchFields, this.state.nextID, this.state.sOrder]));\n            this.props.searchQuery(exportSF, this.state.sOrder)\n        } else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleting\":\n                    statusTxt = \"Eintrag wird gelöscht.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faRecycle} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleted\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTrashAlt} />;\n                    statusTxt = \"Löschen erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.col]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.col]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.col] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.col], limit:10, order: [this.props.col]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.col], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            setTimeout(()=>{\n                let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView({behavior: \"smooth\", block: \"center\"})};\n            }, 300);\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu } from \"./elements.js\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                boxName=\"lemma\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"], [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Lemma\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <LemmaBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<LemmaAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} />:\"\"}\n            <div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={()=>{\n                if(window.confirm(\"Soll ein neues Lemma erstellt werden?\")){\n\n                }\n            }} /></div>\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id} dangerouslySetInnerHTML={parseHTML(cEl.lemma_display)}></td><td>{cEl.dicts}</td><td dangerouslySetInnerHTML={parseHTML(cEl.comment)}></td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Lemmaansatz</th><th>Wörterbücher</th><th>Kommentar</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            lemma: this.props.item.lemma,\n            lemma_display: this.props.item.lemma_display,\n            homonym: this.props.item.homonym,\n            MLW: this.props.item.MLW,\n            Stern: this.props.item.Stern,\n            Fragezeichen: this.props.item.Fragezeichen\n        };\n    }\n    render(){\n        /*\n        <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        */\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.lemma} onChange={event=>{this.setState({lemma: event.target.value})}} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma-Anzeige:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={parseHTMLPreview(this.state.lemma_display)} onChange={event=>{this.setState({lemma_display: event.target.value})}} /></div>\n        </div>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({homonym: event.target.value})}} value={this.state.homonym} /></div>\n            <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n            <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({MLW: event.target.value})}} value={this.state.MLW} /></div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Stern: event.target.value})}} value={this.state.Stern} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Fragezeichen: event.target.value})}} value={this.state.Fragezeichen} /></div>\n            <div style={{gridArea: \"6/2/6/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                if(this.state.lemma===\"\" || this.state.lemma.indexOf(\" \")>-1){\n                    this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                } else if(this.state.lemma_display===\"\"){\n                    this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                } else {\n                    let newLemmaValue = {\n                        id: this.state.id,\n                        lemma: this.state.lemma,\n                        lemma_display: this.state.lemma_display,\n                        MLW: this.state.MLW,\n                        Fragezeichen: this.state.Fragezeichen,\n                        Stern: this.state.Stern,\n                    };\n                    if(this.state.homonym>0){newLemmaValue.lemma_nr=this.state.homonym}\n                    const newId = await arachne.lemma.save(newLemmaValue);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate(this.state.id);\n                }\n            }} /></div>\n        </div>\n    </div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature\n            });\n        }\n    }\n}\n\nexport { Lemma };","import React from \"react\";\nimport { faExternalLinkAlt, faForward, faBackward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    render(){\n        return <div>Seite</div>;\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: []};\n    }\n    render(){\n        let trLst = [];\n        let i = 0;\n        const cHitId = (this.state.hits&&this.state.hits.length>0)?this.state.hits[this.state.hitIndex].id:0;\n        this.scrollRef = null;\n        for(const o of this.state.oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    let arrow = \"\";\n                    if(editionsURL&&editionsURL[iE]!=\"\"){\n                        cURL=editionsURL[iE];\n                        arrow = <span> <FontAwesomeIcon style={{fontSize:\"14px\"}} icon={faExternalLinkAlt} /></span>\n                    }\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\" rel=\"noreferrer\">{cLabel}{arrow}</a></li>);\n                }\n            }\n            i++;\n            let hitStyle = {};\n            if(o.id===cHitId){hitStyle = \"searchHit\"; this.scrollRef = React.createRef()}\n            else if(cHitId>0&&this.state.hits.some(i=>i.id===o.id)){hitStyle = \"searchAllHits\"}\n            if(this.state.listName==\"opera_maiora\"){\n                let abbr = `<aut>${o.abbr}</aut>`;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr= `<span>&nbsp;&nbsp;&nbsp;${o.abbr}</span>`;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push(<tr className={hitStyle} ref={o.id===cHitId?this.scrollRef:null} key={i}><td className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2\" dangerouslySetInnerHTML={parseHTML(abbr)}></td><td className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td><td className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td><td className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td></tr>);\n            } else if(this.state.listName===\"opera_minora\"){\n                trLst.push(<tr className={hitStyle} ref={o.id===cHitId?this.scrollRef:null} key={i}><td className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td><td className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td><td className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td></tr>);\n            }\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n                <Navigator currentPage={this.state.currentPage} maxPage={this.state.oMax} loadPage={nextPage=>{this.loadPage(nextPage)}} />\n                <div className=\"operaBox\">\n                <table><tbody>{trLst}</tbody></table>\n                </div>\n                <div className=\"SearchBar mainColors\"><input type=\"text\" style={{boxShadow: \"none\", padding: \"0px\"}} placeholder=\"Suche...\" onKeyUp={async e=>{\n                    if(e.keyCode === 13){\n                        if(e.target.value!=\"\"&&this.state.cSearch!=e.target.value){\n                            const hits = await arachne[this.props.listName].search([{c: \"search\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                            if(hits.length>0){\n                                this.setState({hitIndex: 0, cSearch: e.target.value, maxHits: hits.length, hits: hits});\n                                this.loadPage(Math.floor(hits[0].id/30)+1);\n                            } else {\n                                this.setState({cSearch: e.target.value, maxHits: 0, hits: []});\n                            }\n                        }\n                    }\n                }} />\n                {this.state.maxHits>0&&<div style={{display:\"inline\", marginLeft: \"20px\"}}>\n                    <FontAwesomeIcon icon={faBackward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(-1)}} /> <span>{this.state.hitIndex+1}</span>/<span>{this.state.maxHits}</span> <FontAwesomeIcon icon={faForward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(1)}} />\n                </div>}\n                </div>\n            </div>;\n    }\n    gotoSearchResult(move){\n        if(move===1&&this.state.hitIndex<this.state.maxHits-1){\n            this.loadPage(Math.floor(this.state.hits[this.state.hitIndex+1].id/30)+1);\n            this.setState({hitIndex: this.state.hitIndex+1});\n        } else if (move===1){\n            this.loadPage(1);\n            this.setState({hitIndex: 0});\n        } else if (move===-1&&this.state.hitIndex>0){\n            this.loadPage(Math.floor(this.state.hits[this.state.hitIndex-1].id/30)+1);\n            this.setState({hitIndex: this.state.hitIndex-1});\n        } else if (move===-1){\n            this.loadPage(Math.floor(this.state.hits[this.state.maxHits-1].id/30)+1);\n            this.setState({hitIndex: this.state.maxHits-1});\n        }\n    }\n    async loadPage(newPage){\n        const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: (newPage-1)*30});\n        this.setState({oLst: oLst, currentPage: newPage});   \n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n            this.setState({listName: this.props.listName, oLst: oLst, oMax: Math.floor(oMax[0][\"count\"]/30)+1, currentPage: 1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oMax = await arachne[this.props.listName].getAll({count: true});\n                const oLst = await arachne[this.props.listName].getAll({limit: 30, offset: 0});\n                this.setState({oLst: oLst, listName: this.props.listName, oMax: Math.floor(oMax[0][\"count\"]/30)+1, currentPage: 1});\n            };\n            getLst();\n        }\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    /*showDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}*/\n                />\n                {this.state.selectionDetail?<OperaAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} />:\"\"}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu } from \"./elements.js\";\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            workLst: []\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                boxName=\"ressources\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"ac_web\", \"Werk\"],\n                    [\"work_id\", \"Werk-ID\"],\n                    [\"ressource\", \"Ressource\"],\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <RessourceBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<RessourceAside workLst={this.state.workLst} status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} />:\"\"}\n        </div>\n        );\n    }\n    componentDidMount(){\n        const getWorks = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n        }\n        getWorks();\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a>öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kürzel</th><th>Typ</th><th>vrkn. Werk</th><th>Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\n\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            volumeContent: this.props.item.volumeContent,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i>\n        </div>\n\n        <div style={{gridArea: \"3/1/3/2\"}}>Werk:</div>\n        <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={this.props.workLst} value={this.state.work_id} onChange={e=>{this.setState({work_id: e.target.value})}} /></div>\n        <div style={{gridArea: \"4/1/4/2\"}}>Ressource:</div>\n        <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></div>\n        {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Editor:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Jahr:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Band:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volume} onChange={e=>{this.setState({volume: e.target.value})}} /></div>,\n            <div key=\"6\" style={{gridArea: \"8/1/8/2\"}}>Bandinhalt:</div>,\n            <div key=\"7\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volumeContent} onChange={e=>{this.setState({volumeContent: e.target.value})}} /></div>,\n            <div key=\"8\" style={{gridArea: \"9/1/9/2\"}}>Reihe:</div>,\n            <div key=\"9\" style={{gridArea: \"9/2/9/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></div>\n        ]:null}\n        {this.state.ressource===2?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Stadt:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Bibliothek:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.library} onChange={e=>{this.setState({library: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Signatur:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.signature} onChange={e=>{this.setState({signature: e.target.value})}} /></div>\n        ]:null}\n        {this.state.ressource===3||this.state.ressource===4?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Drucker:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Ort:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Jahr:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n        ]:null}\n        <div style={{gridArea: \"11/2/11/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            if((this.state.type===0||this.state.type===1||this.state.type===5)&&(!this.state.editor||!this.state.year)){\n                this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n            } else {\n                this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                // create new edition\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work,\n                    ressource: this.state.type,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.volumeContent,\n                    serie: this.state.serie,\n                    /*comment,*/\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature\n                });\n                this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n                this.props.onUpdate(this.state.id);\n            }\n        }} /></div>\n    </div>\n</div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature\n            });\n        }\n    }\n}\n\nexport { Ressource };","import React from \"react\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\n\nclass Account extends React.Component{\n    render(){\n        return <div>...</div>;\n    }\n}\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"lemma\",\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // bearbeitungsstand\n            const zettel_process_data = {\n                labels: Object.keys(this.state.zettel_process),\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: Object.values(this.state.zettel_process),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltyp\n            const zettel_types_data = {\n                labels: Object.keys(this.state.zettel_types),\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: Object.values(this.state.zettel_types),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // erstelldatum\n            const zettel_created_data = {\n                labels: Object.keys(this.state.zettel_created),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.zettel_created),\n                    backgroundColor: ['#114B79', '#347F9F'],\n                    borderColor: ['#1B3B6F', '#065A82'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{gridArea: \"2/1/2/3\", width: \"100%\", height: \"400px\"}}><h4>nach Erstelldatum</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: false}}}} data={zettel_created_data} /></div>);\n\n            // änderungsdatum\n            const zettel_changed_data = {\n                labels: Object.keys(this.state.zettel_changed),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.zettel_changed),\n                    backgroundColor: ['#D2EFF4'],\n                    borderColor: ['#1B3B6F'],\n                    borderWidth: 1,\n                    fill: true,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{gridArea: \"3/1/3/3\", width: \"100%\", height: \"400px\"}}><h4>nach Änderungsdatum</h4><Line options={{aspectRatio: false, plugins: {legend:{display: false}}}} data={zettel_changed_data} /></div>);\n\n            zettelBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px 500px 500px\"}}>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: Object.keys(this.state.lemma_letters),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.lemma_letters),\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (Sternwort, in MLW, usw.)\n\n\n            lemmaBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            const ressource_fullTexts_data = {\n                labels: Object.keys(this.state.ressource_fullTexts),\n                datasets: [\n                  {\n                    label: '',\n                    data: Object.values(this.state.ressource_fullTexts),\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Volltext</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_fullTexts_data} /></div>);\n\n            ressourceBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{ressourceCharts}</div>;\n        }\n        \n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"block\",\n        }\n        let mainBody = <div style={styleBody}></div>;\n                /*\n            {ressourceBox}\n        </div>;*/\n        switch(this.state.tab){\n            case \"lemma\":\n                mainBody = <div style={styleBody}>{lemmaBox}</div>;\n                break;\n            case \"zettel\":\n                mainBody = <div style={styleBody}>{zettelBox}</div>;\n                break;\n                case \"ressource\":\n                    mainBody = <div style={styleBody}>{ressourceBox}</div>;\n                    break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 10% 0 10%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {padding: \"5px 10px\", cursor: \"default\"};\n        const styleTabActive = {padding: \"5px 10px\", borderBottom: \"1px solid red\", cursor: \"default\"};\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"lemma\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"lemma\"})}}>Lemma</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n                <div style={this.state.tab===\"ressource\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ressource\"})}}>Ressourcen</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const getZettel = async () => {\n            const zettels = await arachne.zettel.getAll({select: [\"work_id\", \"lemma_id\", \"type\", \"c_date\", \"u_date\"]});\n            // process\n            let process = {\n                abgeschlossen: zettels.filter(z => (z.work_id>0&&z.lemma_id>0)||(z.type===4)).length,\n                \"nur Werk\":  zettels.filter(z => z.work_id>0&&!(z.lemma_id>0)).length,\n                \"nur Lemma\": zettels.filter(z => !(z.work_id>0)&&z.lemma_id>0).length\n            }\n            process.unbearbeitet = zettels.length - Object.values(process).reduce((previousValue, currentValue) => previousValue+currentValue);\n\n            // types\n            let types = {\n                verzettelt: zettels.filter(z => z.type===1).length,\n                Index: zettels.filter(z => z.type===2).length,\n                Exzerpt: zettels.filter(z => z.type===3).length,\n                Literatur: zettels.filter(z => z.type===4).length,\n            }\n            types[\"ohne Typ\"] = zettels.length-Object.values(types).reduce((previousValue, currentValue)=>previousValue+currentValue);\n            \n            // created + changed\n            const range = (start, stop) => Array.from({ length: (stop-start)+1}, (_, i) => start + (i));\n            let created = {};\n            let changed = {};\n            let years = range(2020, new Date(Date.now()).getFullYear());\n            for(const year of years){\n                let months = range(1,12);\n                if(year===new Date(Date.now()).getFullYear()){\n                    months = range(1, new Date(Date.now()).getMonth()+1);\n                }\n                for(const month of months){\n                    created[`${year}-${month}`] = zettels.filter(z => new Date(z.c_date).getFullYear()===year&&new Date(z.c_date).getMonth()+1===month).length;\n                    changed[`${year}-${month}`] = zettels.filter(z => new Date(z.u_date).getFullYear()===year&&new Date(z.u_date).getMonth()+1===month).length;\n                }\n            }\n            this.setState({zettel_process: process, zettel_types: types, zettel_created: created, zettel_changed: changed});\n        };\n        getZettel();\n\n        const getLemmata = async () => {\n            const lemmata = await arachne.lemma.getAll({select: [\"lemma\"]});\n\n            let letters = {\"A\":0, \"B\":0, \"C\":0, \"D\":0, \"E\":0, \"F\":0, \"G\":0, \"H\":0, \"I\":0, \"K\":0, \"L\":0, \"M\":0, \"N\":0, \"O\":0, \"P\":0, \"Q\":0, \"R\":0, \"S\":0, \"T\":0, \"U\":0, \"V\":0, \"X\":0, \"Y\":0, \"Z\":0};\n            for(const letter of Object.keys(letters)){\n                letters[letter] = lemmata.filter(l => l.lemma.substring(0,1).toUpperCase()===letter).length;\n            }\n            letters.Rest = lemmata.length - Object.values(letters).reduce((previousValue, currentValue) => previousValue+currentValue);\n            this.setState({lemma_letters: letters});\n        };\n        getLemmata();\n\n        const getRessources = async () => {\n            const scans = await arachne.scan.getAll({select: [\"full_text\"]});\n            let fullTexts = {\n                \"mit Volltext\": scans.filter(s => s.full_text!=null&&s.full_tet!=\"\").length\n            }\n            fullTexts[\"ohne Volltext\"] = scans.length - Object.values(fullTexts).reduce((previousValue, currentValue) => previousValue+currentValue);\n            this.setState({ressource_work: 1, ressource_fullTexts: fullTexts});\n        }\n        getRessources();\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"updateOpera\",\n            users: []\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"updateOpera\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Damit Änderungen in den <i>opera</i>-Listen oder Änderungen in den Ressourcen in den Listen sichtbar werden, müssen sie auf dem Server aktualisiert werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"opera-Listen aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        //const reStatus = await arachne.exec(\"opera_maiora_update\");\n                        const reStatus = await arachne.exec(\"opera_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"accounts\":\n                styleBody.display = \"block\";\n                let userRows = [];\n                // online: 30*60*1000 = 1800000\n                for(const user of this.state.users){\n                    userRows.push(<tr key={user.id}><td>{user.first_name} {user.last_name}</td><td>{JSON.parse(user.access).join(\", \")}</td><td>{user.agent}</td><td>{Date.now()-new Date(user.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td></tr>)\n                }\n                mainBody = <div style={styleBody}><table className=\"minorTxt\" width=\"100%\"><tbody>{userRows}</tbody></table></div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"updateOpera\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateOpera\"})}}>Opera-Listen</div>\n                {arachne.access(\"admin\")?<div style={this.state.tab===\"accounts\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"accounts\"})}}>Kontenverwaltung</div>:null}\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){\n            const loadUsers = async () => {\n                const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n                this.setState({users: newUsers});\n            };\n            loadUsers();\n        }\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            editionLst: [],\n            scanWork: 1,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null,\n            zettelLetter: \"A\",\n            zettelFiles: null,\n            zettelEditors: [[arachne.me.id, arachne.me.last_name]],\n            zettelEditorSelected: arachne.me.id,\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature,\n                                path: this.state.scanPath,\n                                url: \"\",\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.editionLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLnks = await arachne.scan_lnk.get({edition_id: this.state.ocrRessource});\n                            let scanLst = [];\n                            for(const scanLnk of scanLnks){\n                                const nScan = await arachne.scan.get({id: scanLnk.scan_id})\n                                scanLst.push(nScan[0]);\n                            }\n                            let missLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    await arachne.scan.save({id: cScan.id, full_text: fileTxt})\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Buchstabe:</div>\n                    <div><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I\"], [\"J\", \"J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U\"], [\"V\", \"V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></div>\n                    <div>erstellt von:</div>\n                    <div><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></div>\n                    <div>Dateien:</div>\n                    <div><input type=\"file\" accept=\"image/jpeg\" multiple onChange={e=>{this.setState({zettelFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.zettelFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden vorbereitet.\");\n                            const maxItem= 100;\n                            let cItemCount = maxItem;\n                            let cUploadIndex = -1;\n                            let uploadGroup = [];\n                            const fLength = this.state.zettelFiles.length;\n                            // prepare upload groups\n                            for(let i=0; i<fLength; i++){\n                                if(cItemCount >= maxItem){\n                                    cItemCount = 0;\n                                    cUploadIndex ++;\n                                    uploadGroup.push(new FormData());\n                                    uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                    uploadGroup[cUploadIndex].append(\"type\", \"0\");\n                                    uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                }\n                                cItemCount ++;\n                                uploadGroup[cUploadIndex].append(\"files\", this.state.zettelFiles[i]);\n                            }\n                            // loop through groups and upload!\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            for(const uItem of uploadGroup){\n                                await arachne.importZettel(uItem);\n                            }\n\n                            this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht gefunden.</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const editions = await arachne.edition.getAll({select: [\"id\", \"label\"], order: [\"label\"]});\n            let newEditionLst = [];\n            for(const edition of editions){\n                newEditionLst.push([edition.id, edition.label]);\n            }\n            this.setState({editionLst: newEditionLst});\n\n        }\n        loadOptions();\n\n        if(arachne.access(\"admin\")){\n            arachne.user.getAll({order: [\"last_name\"]}).then(users=>{\n                let userLst = [];\n                for(const user of users){\n                    userLst.push([user.id, user.last_name]);\n                }\n                this.setState({zettelEditors: userLst});\n            }).catch(e=>{throw e});\n        }\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Account, Help, Import, Server, Statistics };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                boxName=\"zettel\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"],\n                    [\"type\", \"Typ\"],\n                    [\"id\", \"ID\"],\n                    [\"opus\", \"Werk\"],\n                    [\"date_type\", \"Datum-Typ\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <ZettelBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                presetSelection={this.state.presetSelection}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} openNextItem={()=>{this.openNextItem()}} />:\"\"}\n        </div>\n        );\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: \"500px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img alt=\"\" className={classList} src={zettel.img_path+\".jpg\"}></img>\n                <div className=\"zettel_msg\">{zettel.date_display}</div>\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            /*item: this.props.item,*/\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style} className=\"mainColors\">\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(!isNaN(e.target.value)&&e.target.value!==\"\"&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            return (\n    <div style={style} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} classList=\"zettel_type\" />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" col=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id})}} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}>\n                <input type=\"button\" value=\"speichern&weiter\" style={{marginBottom: \"10px\"}} onClick={()=>{this.saveDetail(true)}} />\n                <input type=\"button\" value=\"speichern\" onClick={()=>{this.saveDetail()}} />\n            </div>\n        </div>\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        {arachne.access(\"admin\")?\n        <div style={{textAlign: \"right\", fontSize:\"25px\", marginRight: \"10px\"}}><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{\n            if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                this.props.status(\"deleting\");\n                arachne.zettel.delete(this.state.id);\n                this.props.status(\"deleted\");\n            }\n        }} /></div>\n        :null}\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\" col=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" col=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                /*case 4:\n                    inputType = <input type=\"text\" value=\"lemma\" />;\n                    break;*/\n                default:\n                    inputType = <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n            }\n            return <div style={style} className=\"mainColors\">\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={[[1, \"Lemma\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]/*,[4,\"Projekt\"]*/]} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.user.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})}\n        }\n    }\n    async saveDetail(next=false){\n        if(this.state.date_type===9&&!Number.isInteger(this.state.date_own)){\n            this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n        } else {\n            let nVals = {\n                id: this.state.id,\n                type: this.state.type,\n                work_id: this.state.work_id,\n                user_id: arachne.user.id\n            };\n            this.props.status(\"saving\");\n            if(this.state.lemma_id===null&&this.state.newLemma_Lemma!==\"\"){this.setState({addLemma: true})}\n            else {nVals.lemma_id = this.state.lemma_id}\n            if(this.state.date_type===9&&Number.isInteger(this.state.date_own)){\n                nVals.date_own = this.state.date_own;\n                nVals.date_own_display = this.state.date_own_display;\n            }\n            await arachne.zettel.save(nVals)\n            this.props.status(\"saved\");\n            if(next){\n                document.querySelector(\"select.zettel_type\").focus();\n                this.props.openNextItem();\n            }else{this.props.onUpdate([this.state.id]);}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./opera.js\";\nimport { Ressource } from \"./ressources.js\";\nimport { Account, Help, Import, Server, Statistics } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\n\nconst colors = {shadow: \"#3c6e71\"}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\n                    \"Zettel-Datenbank\": \"zettel\",\n                    \"Lemmaliste\": \"lemma\",\n                    /*\"Volltext-Suche\": \"fulltext\",*/\n            }},\n            \"Verzeichnisse\": {\n                visible: false, \n                items: {\n                    \"opera-maiora\":\"maiora\",\n                    \"opera-minora\":\"minora\",\n                    \"Ressourcen\":\"ressources\",\n                    /*\"Sekundärliteratur\":\"seklit\",*/\n            }},\n            /*\"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },*/\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                    \"Hilfe\":\"help\",\n                    \"Konto\":\"account\",\n                    \"Server\": \"server\",\n                    \"Import\": \"import\",\n                    \"Statistiken\":\"stats\",\n                    \"abmelden\":\"logout\",\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 1000000,\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries}  className=\"mainColors\" style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {this.setState({currentSubmenu: mainEntry})}}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainColors\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n        this.tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\"];\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"ressources\":\n                    main = <Ressource status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"stats\":\n                    main = <Statistics status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"server\":\n                    main = <Server status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"lemma\":\n                    main = <Lemma status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"account\":\n                    main = <Account status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    main = <div>Unbekannter Menü-Punkt {this.state.res}</div>;\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){\n                await arachne.open(this.tbls);\n                this.setState({mode: \"main\"});\n            }\n        }\n        checkSession();\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        if(email!==\"\"&&password!==\"\"&&await arachne.login(email, password, this.tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}