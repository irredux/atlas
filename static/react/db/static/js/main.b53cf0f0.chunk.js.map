{"version":3,"sources":["arachne.js","elements.js","lemma.js","opera.js","ressources.js","settings.js","zettel.js","editor.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","rowId","data","Array","isArray","body","response","newValues","rId","id","parseInt","text","arachne","location","origin","me","localOptions","localStorage","getItem","parse","z_width","name","value","setItem","user","password","tbls","open","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","newForm","mode","rights","every","r","access","includes","SearchInput","props","state","itemId","item","searchOptions","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","onChange","e","setState","target","type","placeholder","onKeyUp","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","prevProps","prevState","changeItem","React","Component","SearchBox","queryTxt","sOrder","nextID","searchFields","cSF","sF","sendQuery","map","s","gridArea","faPlusCircle","position","top","fontSize","addSearchFields","float","marginTop","marginLeft","display","sortOptions","event","storedItems","sessionStorage","boxName","setupItems","forceSearch","length","newNextID","newItems","i","nSearchFields","filter","exportSF","document","querySelectorAll","children","searchQuery","alert","Navigator","currentPage","scrollTo","faAngleUp","loadPage","margin","textAlign","onBlur","isNaN","maxPage","move","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","backgroundColor","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faRecycle","faTrashAlt","faCloudMoon","ref","bottom","left","transition","borderRadius","overflow","zIndex","SelectMenu","op","classList","pointerEvents","faAngleDown","AutoComplete","currentOptionId","userSelected","optionsElement","option","returnCol","dataset","cursor","changeInputValue","onKeyDown","changeSelectedOption","newValue","searchCol","get","newOptions","SelectorWrapper","isSelected","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","child","keys","selectCallback","targetId","inRange","newIds","forEach","preset","el","querySelector","scrollIntoView","behavior","block","parseHTML","__html","DOMPurify","sanitize","replace","ADD_TAGS","Lemma","newItemCreated","gridTemplateColumns","gridTemplateRows","rowGap","q","newPage","currentElements","showDetail","onUpdate","reloadEntry","onClose","right","confirm","lemma","save","lemma_display","newId","console","log","newItem","indexOfNewItem","findIndex","newQuery","queryOrder","Math","floor","selectionDetail","LemmaBox","selection","cEls","cEl","onDoubleClick","find","closest","title","dangerouslySetInnerHTML","dicts","comment","LemmaAside","homonym","MLW","Stern","Fragezeichen","newLemmaValue","lemma_nr","OperaAside","author","work","authorLst","full","nAuthor","abbr","abbr_sort","date_display","date_sort","date_type","in_use","works","workLst","delete","nWork","author_display","author_id","citation","bibliography_cit","reference","txt_info","height","bibliography","worksDict","getAll","authors","newAuthorLst","loadOptions","newAuthor","getAuthor","work_id","newWork","getWork","OperaBox","oLst","cTrLst","resultsOnPage","modeName","trLst","tblLst","j","cHitId","hits","hitIndex","scrollRef","cTr","hitStyle","some","borderBottom","paddingBottom","cSearch","listName","maxHits","gotoSearchResult","faBackward","faForward","box","editionLst","editions_id","editionsId","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","arrow","faExternalLinkAlt","cLabel","href","rel","oMax","createOperaLists","getLst","Opera","pageMax","is_maior","SekLit","seklit","titel","SekLitBox","kennziffer","signatur","alte_signatur","vorname","reihe","ort","jahr","weitere_angaben","zusatz","SekLitAside","signature","Ressource","edition","ressource","editor","year","newWorkLst","ac_web","getWorks","RessourceBox","resTypes","label","opus","RessourceAside","volume","volumeContent","serie","library","vol_cont","Account","firstName","first_name","lastName","last_name","eMail","email","oldPassword","newPassword","old_password","new_password","min","max","setOptions","Statistics","tab","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","datasets","borderColor","borderWidth","plugins","legend","zettel_types_data","zettel_types","zettel_created_data","zettel_changed","zettel_created","aspectRatio","zettel_created_current_data","zettel_changed_current","zettel_created_current","lemmaBox","lemmaCharts","lemma_letters_data","lemma_mlw_data","lemma_mlw","ressourceBox","ressourceCharts","ressource_work_data","styleBody","mainBody","styleTab","styleTabActive","justifyContent","last_updated","statistics","numbers","getNumbers","Server","users","gridGap","exec","userRows","join","agent","Date","now","session_last_active","faSun","faMoon","newUsers","loadUsers","ServerAside","rightList","description","marked","nAccess","Object","entries","Import","scanWork","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrFiles","zettelLetter","zettelFiles","zettelEditors","zettelEditorSelected","scanPath","accept","multiple","files","path","newEditionId","uploadForm","FormData","append","fLength","importScans","scan_lnk","edition_id","scanLnks","scanLst","scanLnk","scan","scan_id","nScan","missLst","file","fName","substring","cScan","filename","fileTxt","full_text","cItemCount","cUploadIndex","uploadGroup","uItem","importZettel","editions","newEditionLst","userLst","catch","Help","Zettel","showDate","activeProjects","presetSelection","itemDetail","reloadZettel","openNextItem","toggleShowDate","zettel","lastIndex","project","projects","projectLst","ZettelBox","testProp","ZettelCard","img_path","alt","src","txt","ZettelAside","addLemma","ressources","batchType","lemma_id","lemma_ac","date_own","date_own_display","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","batch_project","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","cRes","keyCount","dateOwn","dateStyle","borderTop","paddingTop","saveDetail","inputType","batch_options","skipSave","newKey","newValueLst","cId","newValueObj","user_id","article","sort_nr","parent_id","defaultArticle","newLinks","zettel_id","article_id","zettel_lnk","res","next","Number","isInteger","nVals","focus","Editor","colors","MainMenu","menuEntries","items","currentSubmenu","onTop","mainEntry","subMenu","subMenuEntries","subEntry","loadMain","hidden","App","mainMenuPos","innerWidth","addEventListener","newStatus","close","main","gridColumn","gridRow","createFirstName","createLastName","createEmail","createPassword","createAccount","login","checkSession","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b53cf0f0.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n            }\n        });\n    }\n    async delete(rowId){\n        let url = `${this.url}/data/${this.tblName}/${rowId}`;\n        let data = null;\n        if(Array.isArray(rowId)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n            data = JSON.stringify(rowId);\n        }\n        const response = await fetch(url, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Bearer ${this.key}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: data\n        });\n        if(response.status===200){\n            return true;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"delete\", status: response.status}});\n            window.dispatchEvent(errorEvent);\n        }\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        if(url===\"\"&&window.location.origin===\"http://localhost:3000\"){this.url = \"http://localhost:8080\"}\n        else{this.url=url}\n        this.key = null;\n        this.me = null;\n        \n        // load local options for displaying in current browser\n        let localOptions = localStorage.getItem(\"dmlwOptions\");\n        if(localOptions){\n            localOptions = JSON.parse(localOptions);\n            this.options = {z_width: localOptions.z_width?localOptions.z_width:500};\n        } else {\n            this.options = {z_width: 500};\n        }\n    }\n    setOptions(name, value){\n        this.options[name] = value;\n        localStorage.setItem(\"dmlwOptions\", JSON.stringify(this.options))\n    }\n    async login(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            return this.open(tbls);\n        }else{\n            return false;\n        }\n    }\n    async open(tbls=null){\n        const reUser = await this.getUser();\n        if(reUser){\n            this.me = reUser;\n            this.me.selectKey = 'ctrl';\n            if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n        }\n        else {return false;}\n\n        if(tbls == null){tbls = await this.tables()}\n        for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n        return true;\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n}\n\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog, faRecycle, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.itemId,\n            c:  this.props.c,\n            o:  this.props.o,\n            v: this.props.v,\n        }\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.c} onChange={e=>{this.setState({c: e.target.value})}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.o} onChange={e=>{this.setState({o: e.target.value})}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} value={this.state.v} onChange={e=>{this.setState({v: e.target.value})}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.itemId)}} />\n        </div>\n        );\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.c!=this.state.c||prevState.o!=this.state.o||prevState.v!=this.state.v){\n            this.props.changeItem(this.state);\n        }\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {sOrder: null, nextID: 1, searchFields: []};\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} itemId={sF.id} key={sF.id} c={sF.c} o={sF.o} v={sF.v} clickButton={()=>{this.sendQuery()}} changeItem={item=>{\n                this.setState({searchFields: this.state.searchFields.map(s=>{\n                    if(s.id===item.id){return item}else{return s}\n                })});\n            }} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={this.props.sortOptions} onChange={event=>{this.setState({sOrder: JSON.parse(event.target.value)})}} />\n            </div>\n        </div>\n    }\n    componentDidMount(){\n        let storedItems = sessionStorage.getItem(\"searchBox_\"+this.props.boxName);\n        if(this.props.setupItems){\n            this.setState({forceSearch: true, searchFields: this.props.setupItems, nextID: this.props.setupItems.length});\n        } else if(storedItems){\n            storedItems = JSON.parse(storedItems);\n            this.setState({forceSearch: true, searchFields: storedItems[0], nextID: storedItems[1] , sOrder: storedItems[2]});\n        } else {\n            this.setState({searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]});\n        }\n\n    }\n    componentDidUpdate(prevProps){\n        if(this.state.forceSearch){\n            this.sendQuery();\n            this.setState({forceSearch: false});\n        } else if (prevProps.setupItems!=this.props.setupItems){\n            let newNextID = this.state.nextID;\n            const newItems = this.props.setupItems.map(i => {i[\"id\"]=newNextID;newNextID++;return i;})\n            this.setState({forceSearch: true, searchFields: newItems, nextID: newNextID+1});\n        }\n    }\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){\n            sessionStorage.setItem(\"searchBox_\"+this.props.boxName, JSON.stringify([this.state.searchFields, this.state.nextID, this.state.sOrder]));\n            this.props.searchQuery(exportSF, this.state.sOrder)\n        } else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleting\":\n                    statusTxt = \"Eintrag wird gelöscht.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faRecycle} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleted\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTrashAlt} />;\n                    statusTxt = \"Löschen erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.returnCol]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.returnCol]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.searchCol] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.returnCol], limit:10, order: [this.props.searchCol]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.returnCol], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            setTimeout(()=>{\n                let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView({behavior: \"smooth\", block: \"center\"})};\n            }, 300);\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu } from \"./elements.js\";\n\nimport { faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null, newItemCreated: null};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"lemma\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"], [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Lemma\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <LemmaBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<LemmaAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n            {arachne.access(\"l_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neues Lemma erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.lemma.save({lemma_display:\"Neues Lemma\", lemma:\"Neues Lemma\"});\n                    console.log(\"new ID:\", newId)\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neuer Eintrag erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id} dangerouslySetInnerHTML={parseHTML(cEl.lemma_display)}></td><td>{cEl.dicts}</td><td dangerouslySetInnerHTML={parseHTML(cEl.comment)}></td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Lemmaansatz</th><th>Wörterbücher</th><th>Kommentar</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            lemma: this.props.item.lemma,\n            lemma_display: this.props.item.lemma_display,\n            homonym: this.props.item.homonym,\n            MLW: this.props.item.MLW,\n            Stern: this.props.item.Stern,\n            Fragezeichen: this.props.item.Fragezeichen,\n        };\n    }\n    render(){\n        return (\n        <div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.lemma} onChange={event=>{this.setState({lemma: event.target.value})}} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma-Anzeige:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={parseHTMLPreview(this.state.lemma_display)} onChange={event=>{this.setState({lemma_display: event.target.value})}} /></div>\n        </div>\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"50px 0\"\n        }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({homonym: event.target.value})}} value={this.state.homonym} /></div>\n            <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n            <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({MLW: event.target.value})}} value={this.state.MLW} /></div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Stern: event.target.value})}} value={this.state.Stern} /></div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Fragezeichen: event.target.value})}} value={this.state.Fragezeichen} /></div>\n            <div style={{gridArea: \"6/2/6/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                if(this.state.lemma===\"\" || this.state.lemma.indexOf(\" \")>-1){\n                    this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                } else if(this.state.lemma_display===\"\"){\n                    this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                } else {\n                    let newLemmaValue = {\n                        id: this.state.id,\n                        lemma: this.state.lemma,\n                        lemma_display: this.state.lemma_display,\n                        MLW: this.state.MLW,\n                        Fragezeichen: this.state.Fragezeichen,\n                        Stern: this.state.Stern,\n                    };\n                    if(this.state.homonym>0){newLemmaValue.lemma_nr=this.state.homonym}\n                    const newId = await arachne.lemma.save(newLemmaValue);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate(this.state.id);\n                }\n            }} /></div>\n        </div>\n    </div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            console.log(\"NOW!\");\n            this.setState({\n                id: this.props.item.id,\n                lemma: this.props.item.lemma,\n                lemma_display: this.props.item.lemma_display,\n                homonym: this.props.item.homonym,\n                MLW: this.props.item.MLW,\n                Stern: this.props.item.Stern,\n                Fragezeichen: this.props.item.Fragezeichen,\n            });\n        }\n    }\n}\n\nexport { Lemma };","import React from \"react\";\nimport { faExternalLinkAlt, faForward, faBackward, faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { parseHTML, SelectMenu } from \"./elements.js\";\n\nclass OperaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {author: null, work: null, authorLst: []};\n    }\n    render(){\n        return <div style={{\n            position: \"fixed\",\n            overflow: \"scroll\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n            <div style={{position: \"absolute\", top: \"50px\", right: \"10px\"}}><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} /></div>\n            \n            {this.state.author&&<div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <h3>Autor <i style={{fontSize: \"60%\"}}>ID: {this.state.author.id})</i></h3><div></div>\n                <div>Name:</div><div><input type=\"text\" value={this.state.author.full?this.state.author.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nAuthor = this.state.author;nAuthor.full = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Abkürzung:</div><div><input type=\"text\" value={this.state.author.abbr} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.author.abbr_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.author.date_display} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_display = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.author.date_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.author.date_type} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_type = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.author.in_use} onChange={e=>{let nAuthor = this.state.author;nAuthor.in_use = e.target.value;this.setState({author:nAuthor})}} /></div>\n                <div></div><div>\n                    <input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.author.save(this.state.author);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate();\n                }} />\n                    <input type=\"button\" value=\"löschen\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                        const works = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.author.id}], {select: [\"id\"]});\n                        let workLst = [];\n                        for(const work of works){\n                            workLst.push(work.id);\n                        }\n                        if(window.confirm(`Soll der Autor wirklich gelöscht werden? ${workLst.length} damit ${workLst.length>1?\"verknüpfte Werke werden\":\"verknüpftes Werk wird\"} ebenfalls gelöscht. Dieser Schritt kann nicht mehr rückgängig gemacht werden!`)){\n                            this.props.status(\"deleting\");\n                            if(workLst.length>0){await arachne.work.delete(workLst)};\n                            await arachne.author.delete(this.state.author.id);\n                            this.props.status(\"deleted\");\n                            this.props.onUpdate();\n                        }\n                    }} />\n                </div>\n            </div>\n        }\n            {this.state.work&&<div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <h3>Werk <i style={{fontSize: \"60%\"}}>(ID: {this.state.work.id})</i></h3><div></div>\n                <div>Werktitel:</div><div><input type=\"text\" value={this.state.work.full?this.state.work.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nWork = this.state.work;nWork.full = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abkürzung:</div><div><input type=\"text\" value={this.state.work.abbr} onChange={e=>{let nWork = this.state.work;nWork.abbr = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.work.abbr_sort} onChange={e=>{let nWork = this.state.work;nWork.abbr_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.work.date_display} onChange={e=>{let nWork = this.state.work;nWork.date_display = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.work.date_sort} onChange={e=>{let nWork = this.state.work;nWork.date_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.work.date_type} onChange={e=>{let nWork = this.state.work;nWork.date_type = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Abweichender Autorenname\n                (z.B. bei <aut>Vita</aut>):</div><div><input type=\"text\" value={this.state.work.author_display} onChange={e=>{let nWork = this.state.work;nWork.author_display = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>verknpft. Autor:</div><div><SelectMenu style={{width: \"86%\"}} options={this.state.authorLst} value={this.state.work.author_id} onChange={e=>{let nWork = this.state.work;nWork.author_id = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Stellenangabe: <span className=\"minorTxt\">(Bsp.)</span></div><div><input type=\"text\" value={this.state.work.citation} onChange={e=>{let nWork = this.state.work;nWork.citation = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Stellenangabe Bibliographie: <i className=\"minorTxt\">(nur minora)</i></div><div><input type=\"text\" value={this.state.work.bibliography_cit} onChange={e=>{let nWork = this.state.work;nWork.bibliography_cit = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Referenz:</div><div><input type=\"text\" value={this.state.work.reference} onChange={e=>{let nWork = this.state.work;nWork.reference = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.work.in_use} onChange={e=>{let nWork = this.state.work;nWork.in_use = e.target.value;this.setState({work:nWork})}} /></div>\n                <div>Kommentar:</div><div><textarea value={this.state.work.txt_info} onChange={e=>{let nWork = this.state.work;nWork.txt_info = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                <div>Bibliographie:</div><div><textarea value={this.state.work.bibliography} onChange={e=>{let nWork = this.state.work;nWork.bibliography = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                <div></div><div>\n                    <input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.work.save(this.state.work);\n                    this.props.status(\"saved\");\n                    this.props.onUpdate();\n                }} />\n                <input type=\"button\" value=\"löschen\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    const worksDict = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.work.author_id}], {count: true});\n                    const works = worksDict[0].count;\n                    if(works<2){\n                        alert(\"Das Werk kann nicht gelöscht werden, da es das lezte Werk des Autors ist. Um dieses Werk zu löschen, müssen Sie ein neues Werk erstellen und dem Autor zuweisen.\");\n                    } else if(window.confirm(\"Soll das Werk wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                        this.props.status(\"deleting\");\n                        await arachne.work.delete(this.state.work.id);\n                        this.props.status(\"deleted\");\n                        this.props.onUpdate();\n                    }\n                }} />\n                </div>\n            </div>}\n        </div>;\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const authors = await arachne.author.getAll({select: [\"id\", \"abbr\"], order: [\"abbr_sort\"]});\n            let newAuthorLst = [];\n            for(const author of authors){\n                newAuthorLst.push([author.id, author.abbr]);\n            }\n            this.setState({authorLst: newAuthorLst});\n        }\n        loadOptions();\n        if(this.props.item.author_id>0){\n            const getAuthor = async () => {\n                const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                this.setState({author: newAuthor[0]});\n            }\n            getAuthor();\n        }\n        if(this.props.item.work_id>0){\n            const getWork = async () => {\n                const newWork = await arachne.work.get({id: this.props.item.work_id});\n                this.setState({work: newWork[0]});\n            }\n            getWork();\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.author_id!=this.props.item.author_id){\n            if(this.props.item.author_id>0){\n                const getAuthor = async () => {\n                    const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                    this.setState({author: newAuthor[0]});\n                }\n                getAuthor();\n            }else{this.setState({author: null})}\n        }\n        if(prevProps.item.work_id!=this.props.item.work_id){\n            if(this.props.item.work_id>0){\n                const getWork = async () => {\n                    const newWork = await arachne.work.get({id: this.props.item.work_id});\n                    this.setState({work: newWork[0]});\n                }\n                getWork();\n            }else{this.setState({work: null})}\n        }\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: [], cTrLst: []};\n        this.resultsOnPage = 18;\n        this.modeName = \"opera\"\n    }\n    render(){\n        let trLst = [];\n        let tblLst = [];\n        let i = 0;\n        let j = 0;\n        const cHitId = (this.state.hits&&this.state.hits.length>0)?this.state.hits[this.state.hitIndex].id:0;\n        this.scrollRef = null;\n        for(const cTr of this.state.cTrLst){\n            i++;\n            let hitStyle = {};\n            if(cTr.o.id===cHitId){hitStyle = \"searchHit\"; this.scrollRef = React.createRef()}\n            else if(cHitId>0&&this.state.hits.some(i=>i.id===cTr.o.id)){hitStyle = \"searchAllHits\"}\n            trLst.push(<tr className={hitStyle} ref={cTr.o.id===cHitId?this.scrollRef:null} key={i} onDoubleClick={e=>{e.stopPropagation();this.props.showDetail(cTr.o)}}>{cTr.data}</tr>);\n            if(trLst.length >= this.resultsOnPage){\n                j++;\n                tblLst.push(<div key={j} id={\"operaBox_\"+j} style={{borderBottom: \"1px dotted black\", paddingBottom: \"15px\", margin: \"10px\"}}><table><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j}</div></div>);\n                trLst = [];\n            }\n        }\n        if(j>0){tblLst.push(<div key={j+1} id={\"operaBox_\"+(j+1)} style={{margin: \"10px\"}}><table><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j+1}</div></div>);}\n        return <div style={{gridArea: this.props.gridArea}}>\n                {tblLst.length===0?null:\n                <div className=\"operaBox\">{tblLst}</div>}\n                <div className=\"SearchBar mainColors\">\n                    <input type=\"text\" style={{boxShadow: \"none\", padding: \"0px\"}} placeholder=\"Suche nach Zitiertitel...\" onKeyUp={async e=>{\n                    if(e.keyCode === 13){\n                        if(e.target.value!=\"\"&&this.state.cSearch!=e.target.value){\n                            const hits = await arachne[this.props.listName].search([{c: \"search\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                            if(hits.length>0){\n                                this.setState({hitIndex: 0, cSearch: e.target.value, maxHits: hits.length, hits: hits});\n                            } else {\n                                this.setState({cSearch: e.target.value, maxHits: 0, hits: []});\n                            }\n                        } else if(this.state.maxHits>0){this.gotoSearchResult(1)}\n                    }\n                }} />\n                {this.state.maxHits>0&&<div style={{display:\"inline\", marginLeft: \"20px\"}}>\n                    <FontAwesomeIcon icon={faBackward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(-1)}} /> <span>{this.state.hitIndex+1}</span>/<span>{this.state.maxHits}</span> <FontAwesomeIcon icon={faForward} style={{fontSize: \"14px\"}} onClick={()=>{this.gotoSearchResult(1)}} />\n                </div>}\n                <div style={{float: \"right\"}}>\n                <input type=\"text\"  style={{textAlign: \"right\", width: \"60px\", boxShadow: \"none\", padding: \"0px\"}} placeholder=\"Seite...\" onKeyUp={e=>{\n                    if(e.keyCode===13){\n                        const box = document.querySelector(\"div#operaBox_\"+e.target.value);\n                        if(box){box.scrollIntoView({behavior: \"smooth\"});}   \n                    }\n                }} />\n                </div>\n                \n                </div>\n            </div>;\n    }\n    createOperaLists(oLst, listName){\n        let trLst = [];\n        let i = 0;\n        for(const o of oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/viewer/\"+editionsId[iE];\n                    let arrow = \"\";\n                    if(editionsURL&&editionsURL[iE]!=\"\"){\n                        cURL=editionsURL[iE];\n                        arrow = <span> <FontAwesomeIcon style={{fontSize:\"14px\"}} icon={faExternalLinkAlt} /></span>\n                    }\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\" rel=\"noreferrer\">{cLabel}{arrow}</a></li>);\n                }\n            }\n            i++;\n            if(listName==\"opera_maiora\"){\n                let abbr = `<aut>${o.abbr}</aut>`;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr= `<span>&nbsp;&nbsp;&nbsp;${o.abbr}</span>`;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2\" dangerouslySetInnerHTML={parseHTML(abbr)}></td>,\n                <td key=\"2\" className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td>,\n                <td key=\"3\" className=\"c4\">{o.bibliography}<ul className=\"noneLst\">{editionLst}</ul></td>,\n                <td key=\"4\" className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td>\n            ]});\n            } else if(listName===\"opera_minora\"){\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td>,\n                <td key=\"2\" className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td>\n            ]});\n            }\n        }\n        return trLst;\n    }\n    gotoSearchResult(move){\n        if(move===1&&this.state.hitIndex<this.state.maxHits-1){\n            this.setState({hitIndex: this.state.hitIndex+1});\n        } else if (move===1){\n            this.setState({hitIndex: 0});\n        } else if (move===-1&&this.state.hitIndex>0){\n            this.setState({hitIndex: this.state.hitIndex-1});\n        } else if (move===-1){\n            this.setState({hitIndex: this.state.maxHits-1});\n        }\n    }\n    async loadPage(newPage){\n        /*\n        const oLst = await arachne[this.props.listName].getAll({limit: this.resultsOnPage, offset: (newPage-1)*this.resultsOnPage});\n        this.setState({oLst: oLst, currentPage: newPage});\n        */\n    }\n    componentDidMount(){\n        const getLst = async () =>{\n            const oMax = await arachne[this.props.listName].getAll({count: true});\n            const oLst = await arachne[this.props.listName].getAll();\n            const trLst = this.createOperaLists(oLst, this.props.listName);\n            this.setState({listName: this.props.listName, cTrLst: trLst, oMax: Math.floor(oMax[0][\"count\"]/this.resultsOnPage)+1, currentPage: 1});\n        };\n        getLst();\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){\n            const getLst = async () =>{\n                const oMax = await arachne[this.props.listName].getAll({count: true});\n                const oLst = await arachne[this.props.listName].getAll();\n                const trLst = this.createOperaLists(oLst, this.props.listName);\n                this.setState({cTrLst: trLst, listName: this.props.listName, oMax: Math.floor(oMax[0][\"count\"]/this.resultsOnPage)+1, currentPage: 1});\n            };\n            this.setState({cTrLst: []});\n            getLst();\n        }\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n}\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null\n        }\n    }\n    render(){\n        return (\n            <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"auto\", rowGap: \"15px\"}}>\n                <OperaBox\n                    listName={this.props.listName}\n                    loadPage={move => {this.loadPage(move)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n                {this.state.item?<OperaAside status={this.props.status}  item={this.state.item} onUpdate={()=>{this.setState({item: null})}} onClose={()=>{this.setState({item: null})}} />:null}\n\n                {arachne.access(\"o_edit\")&&<div style={{position: \"fixed\", bottom: \"40px\", right: \"15px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neues Werk erstellt werden? (Das Werk wird ABBO FLOR. zugewiesen.\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: 1, is_maior: 1, in_use: 1});\n                    this.props.status(\"saved\", \"Neues Werk erstellt.\");\n                } else if(window.confirm(\"Soll ein neuer Autor erstellt werden? Er heisst '+NEUER AUTOR'\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.author.save({full:\"+Neuer Autor\", abbr:\"+Neuer Autor\", abbr_sort: \"+Neuer Autor\", in_use: 1});\n                    await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: newId, is_maior: 1, in_use: 1});\n                    this.props.status(\"saved\", \"Neuer Autor erstellt.\");\n                }\n            }} /></div>}\n            </div>\n            );\n    }\n}\n\nexport { Opera };","import React from \"react\";\nimport { faExternalLinkAlt, faPlusCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu } from \"./elements.js\";\n\nclass SekLit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"seklit\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <SekLitBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<SekLitAside status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n\n            {arachne.access(\"e_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.seklit.save({titel: \"neues Werk\"});\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neuer Eintrag erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.seklit.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.seklit.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.seklit.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.seklit.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass SekLitBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.kennziffer}</td><td>{cEl.signatur} {cEl.alte_signatur?`(${cEl.alte_signatur})`:null}</td><td>\n                    {cEl.name}, {cEl.vorname}, <b>{cEl.titel}</b>, {cEl.reihe}, {cEl.ort} {cEl.jahr}\n                    </td>\n                    <td>{cEl.weitere_angaben}{cEl.zusatz?\" - \"+cEl.zusatz:null}</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kennziffer</th><th>Signatur</th><th>Werkbezeichnung</th><th>weitere Angaben</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass SekLitAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            kennziffer: this.props.item.kennziffer,\n            signatur: this.props.item.signatur,\n            alte_signatur: this.props.item.alte_signatur,\n            name: this.props.item.name,\n            vorname: this.props.item.vorname,\n            titel: this.props.item.titel,\n            reihe: this.props.item.reihe,\n            weitere_angaben: this.props.item.weitere_angaben,\n            ort: this.props.item.ort,\n            jahr: this.props.item.jahr,\n            zusatz: this.props.item.zusatz,\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n        </div>\n        <div></div><div></div>\n\n        <div>Kennziffer:</div>\n        <div><input type=\"text\" value={this.state.kennziffer} onChange={e=>{this.setState({kennziffer: e.target.value})}} /></div>\n        <div>Signatur:</div>\n        <div><input type=\"text\" value={this.state.signatur} onChange={e=>{this.setState({signatur: e.target.value})}} /></div>\n        <div>alte Signatur:</div><div><input type=\"text\" value={this.state.alte_signatur} onChange={e=>{this.setState({alte_signatur: e.target.value})}} /></div>\n        <div>Name:</div><div><input type=\"text\" value={this.state.name} onChange={e=>{this.setState({name: e.target.value})}} /></div>\n        <div>Vorname:</div><div><input type=\"text\" value={this.state.vorname} onChange={e=>{this.setState({vorname: e.target.value})}} /></div>\n        <div>Titel:</div><div><input type=\"text\" value={this.state.titel} onChange={e=>{this.setState({titel: e.target.value})}} /></div>\n        <div>Reihe</div><div><input type=\"text\" value={this.state.reihe} onChange={e=>{this.setState({reihe: e.target.value})}} /></div>\n        <div>Ort:</div><div><input type=\"text\" value={this.state.ort} onChange={e=>{this.setState({ort: e.target.value})}} /></div>\n        <div>Jahr:</div><div><input type=\"text\" value={this.state.jahr} onChange={e=>{this.setState({jahr: e.target.value})}} /></div>\n        <div>weitere Angaben:</div><div><input type=\"text\" value={this.state.weitere_angaben} onChange={e=>{this.setState({weitere_angaben: e.target.value})}} /></div>\n        <div>Zusatz:</div><div><input type=\"text\" value={this.state.zusatz} onChange={e=>{this.setState({zusatz: e.target.value})}} /></div>\n        <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            this.props.status(\"saving\");\n            // create new edition\n            await arachne.seklit.save({\n                id: this.state.id,\n                kennziffer: this.state.kennziffer,\n                signatur: this.state.signature,\n                alte_signatur: this.state.alte_signatur,\n                name: this.state.name,\n                vorname: this.state.vorname,\n                titel: this.state.titel,\n                reihe: this.state.reihe,\n                weitere_angaben: this.state.weitere_angaben,\n                ort: this.state.ort,\n                jahr: this.state.jahr,\n                zusatz: this.state.zusatz,\n            });\n            this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n            this.props.onUpdate(this.state.id);\n        }} /></div>\n    </div>\n</div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                kennziffer: this.props.item.kennziffer,\n                signatur: this.props.item.signatur,\n                alte_signatur: this.props.item.alte_signatur,\n                name: this.props.item.name,\n                vorname: this.props.item.vorname,\n                titel: this.props.item.titel,\n                reihe: this.props.item.reihe,\n                weitere_angaben: this.props.item.weitere_angaben,\n                ort: this.props.item.ort,\n                jahr: this.props.item.jahr,\n                zusatz: this.props.item.zusatz,\n            });\n        }\n    }\n}\n\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            workLst: [],\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                setupItems={this.state.newItemCreated}\n                boxName=\"ressources\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"ac_web\", \"Werk\"],\n                    [\"work_id\", \"Werk-ID\"],\n                    [\"ressource\", \"Ressource\"],\n                    [\"id\", \"ID\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                gridArea={(this.state.item)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <RessourceBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({item: item});\n                }}\n            />\n            {(this.state.item)?<RessourceAside workLst={this.state.workLst} status={this.props.status} item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n\n            {arachne.access(\"e_edit\")&&<div style={{position: \"fixed\", bottom: \"20px\", right: \"20px\", fontSize: \"30px\"}}><FontAwesomeIcon id=\"mainAddButton\" icon={faPlusCircle} onClick={async ()=>{\n                if(window.confirm(\"Soll eine neue Ressource erstellt werden?\")){\n                    this.props.status(\"saving\");\n                    const newId = await arachne.edition.save({ressource: 0, editor: \"Neue Edition\", year: 2021});\n                    this.setState({newItemCreated: [{c: \"id\", o: \"=\", v:newId}]});\n                    this.props.status(\"saved\", \"Neue Ressource erstellt.\");\n                }\n            }} /></div>}\n        </div>\n        );\n    }\n    componentDidMount(){\n        const getWorks = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n        }\n        getWorks();\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        console.log(count);\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                let url = cEl.url;\n                if(url===\"\"||url===null){url = \"/site/viewer/\"+cEl.id}\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a href={url} target=\"_blank\">öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <table width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th>Kürzel</th><th>Typ</th><th>vrkn. Werk</th><th>Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </table>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n}\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            volumeContent: this.props.item.volumeContent,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature\n        };\n    }\n    render(){\n        return (\n<div style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n    <div style={{\n        display: \"grid\",\n        gridTemplateColumns: \"120px auto\",\n        gridTemplateRows: \"1fr 5px 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        rowGap: \"10px\",\n        margin: \"35px 0 30px 0\"\n    }}>\n        <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n            <i>ID {this.state.id}</i><FontAwesomeIcon style={{position: \"relative\", top: \"4px\", marginLeft: \"10px\", fontSize: \"23px\"}} className=\"closeButton\" icon={faTimesCircle} onClick={()=>{this.props.onClose()}} />\n        </div>\n\n        <div style={{gridArea: \"3/1/3/2\"}}>Werk:</div>\n        <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={this.props.workLst} value={this.state.work_id} onChange={e=>{this.setState({work_id: e.target.value})}} /></div>\n        <div style={{gridArea: \"4/1/4/2\"}}>Ressource:</div>\n        <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></div>\n        {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Editor:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Jahr:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Band:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volume} onChange={e=>{this.setState({volume: e.target.value})}} /></div>,\n            <div key=\"6\" style={{gridArea: \"8/1/8/2\"}}>Bandinhalt:</div>,\n            <div key=\"7\" style={{gridArea: \"8/2/8/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.volumeContent} onChange={e=>{this.setState({volumeContent: e.target.value})}} /></div>,\n            <div key=\"8\" style={{gridArea: \"9/1/9/2\"}}>Reihe:</div>,\n            <div key=\"9\" style={{gridArea: \"9/2/9/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></div>\n        ]:null}\n        {this.state.ressource===2?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Stadt:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Bibliothek:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.library} onChange={e=>{this.setState({library: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Signatur:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.signature} onChange={e=>{this.setState({signature: e.target.value})}} /></div>\n        ]:null}\n        {this.state.ressource===3||this.state.ressource===4?[\n            <div key=\"0\" style={{gridArea: \"5/1/5/2\"}}>Drucker:</div>,\n            <div key=\"1\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.editor} onChange={e=>{this.setState({editor: e.target.value})}} /></div>,\n            <div key=\"2\" style={{gridArea: \"6/1/6/2\"}}>Ort:</div>,\n            <div key=\"3\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.location} onChange={e=>{this.setState({location: e.target.value})}} /></div>,\n            <div key=\"4\" style={{gridArea: \"7/1/7/2\"}}>Jahr:</div>,\n            <div key=\"5\" style={{gridArea: \"7/2/7/3\"}}><input type=\"text\" style={{width: \"96%\"}} value={this.state.year} onChange={e=>{this.setState({year: e.target.value})}} /></div>,\n        ]:null}\n        <div style={{gridArea: \"11/2/11/3\"}}><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n            if((this.state.type===0||this.state.type===1||this.state.type===5)&&(!this.state.editor||!this.state.year)){\n                this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n            } else {\n                this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                // create new edition\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work,\n                    ressource: this.state.type,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.volumeContent,\n                    serie: this.state.serie,\n                    /*comment,*/\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature\n                });\n                this.props.status(\"saved\", \"Das Speichern war erfolgreich.\");\n                this.props.onUpdate(this.state.id);\n            }\n        }} /></div>\n    </div>\n</div>\n        );\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                volumeContent: this.props.item.volumeContent,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature\n            });\n        }\n    }\n}\n\nexport { Ressource, SekLit };","import React from \"react\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./arachne.js\";\nimport { SelectMenu } from \"./elements.js\";\nimport { render } from \"@testing-library/react\";\n\nclass Account extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName: arachne.me.first_name,\n            lastName: arachne.me.last_name,\n            eMail: arachne.me.email,\n            user: arachne.me,\n            oldPassword: null,\n            newPassword: null,\n            z_width: arachne.options.z_width,\n            };\n    }\n    render(){\n        return <div style={{margin: \"0 20px\"}}>\n            <h3>Persönliche Daten</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>Vorname:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.firstName} onChange={e=>{this.setState({firstName:e.target.value})}}/></div>\n                <div>Nachname:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.lastName} onChange={e=>{this.setState({lastName:e.target.value})}}/></div>\n                <div>Email-Adresse:</div><div><input style={{width: \"100%\"}} type=\"text\" value={this.state.user.email} onChange={e=>{this.setState({eMail:e.target.value})}}/></div>\n                <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: this.state.firstName,\n                        last_name: this.state.lastName,\n                        email: this.state.eMail,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    this.props.status(\"saved\");\n        \n                }} /></div>\n            </div>\n            <h3>Passwort</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>altes Passwort:</div><div><input style={{width: \"100%\"}} type=\"password\" onChange={e=>{this.setState({oldPassword:e.target.value})}}/></div>\n                <div>neues Passwort:</div><div><input style={{width: \"100%\"}} type=\"password\" onChange={e=>{this.setState({newPassword:e.target.value})}}/></div>\n                <div></div><div><input type=\"button\" value=\"speichern\" onClick={async ()=>{\n                    this.props.status(\"saving\");\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: this.state.oldPassword,\n                        new_password: this.state.newPassword\n                    });\n                    this.props.status(\"saved\");\n        \n                }} /></div>\n            </div>\n            <h3>Darstellung der Webseite</h3>\n            <div style={{\n                padding: \"0 20px\",\n                display: \"grid\",\n                gridTemplateColumns: \"200px 400px\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                \n                <div>Breite der Zettel:</div>\n                <div>\n                    <input type=\"range\" min=\"400\" max=\"600\" value={this.state.z_width} className=\"slider\" id=\"zettelWidthRange\" onChange={e=>{arachne.setOptions(\"z_width\", e.target.value);this.setState({z_width: e.target.value})}} />\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"lemma\",\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // process\n            const zettel_process_data = {\n                labels: [\"abgeschlossen\", \"nur Lemma\", \"unbearbeitet\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_process,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            \n            zettelCharts.push(<div key=\"1\" style={{width: \"480px\", height: \"480px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltype\n            const zettel_types_data = {\n                labels: [\"verzetteltes Material\", \"Exzerpt\", \"Index\", \"Literatur\", \"Index (unkl. Werk)\", \"Notiz\", \"kein Typ\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_types,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3', '#EFEFEF', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2', '#EEEEEE', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{width: \"500px\", height: \"500px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // created in years\n            const zettel_created_data = {\n                labels: [\"2020\", \"2021\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{gridArea: \"2/1/2/3\", width: \"100%\", height: \"400px\"}}><h4>nach Jahren</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_data} /></div>);\n\n            // created in current year\n            const zettel_created_current_data = {\n                labels: [\"Jan.\", \"Feb.\", \"Mär.\", \"Apr.\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Okt.\", \"Nov.\", \"Dez.\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed_current,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'bearbeitet',\n                        data: this.state.zettel_created_current,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{gridArea: \"3/1/3/3\", width: \"100%\", height: \"400px\"}}><h4>in diesem Jahr</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_current_data} /></div>);\n            \n            zettelBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px 500px 500px\"}}>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_letters,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{width: \"455px\", height: \"455px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false, position: \"bottom\"}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (in MLW)\n            const lemma_mlw_data = {\n                labels: [\"relevant\", \"nicht relevant\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_mlw,\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"2\" style={{width: \"480px\", height: \"480px\"}}><h4>nach Relevanz fürs Wörterbuch</h4><Pie options={{plugins: {legend:{display: true, position: \"bottom\"}}}} data={lemma_mlw_data} /></div>);\n\n            lemmaBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            console.log(this.state.ressource_work);\n            const ressource_work_data = {\n                labels: [\"mit Volltext und pdf\", \"nur mit pdf\", \"ohne pdf und Volltext\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.ressource_work,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{width: \"500px\", height: \"500px\"}}><h4>Werke nach Volltext und pdfs</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_work_data} /></div>);\n\n            ressourceBox = <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"600px\"}}>{ressourceCharts}</div>;\n        }\n        \n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"block\",\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"lemma\":\n                mainBody = <div style={styleBody}>{lemmaBox}</div>;\n                break;\n            case \"zettel\":\n                mainBody = <div style={styleBody}>{zettelBox}</div>;\n                break;\n                case \"ressource\":\n                    mainBody = <div style={styleBody}>{ressourceBox}</div>;\n                    break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 10% 0 10%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {padding: \"5px 10px\", cursor: \"default\"};\n        const styleTabActive = {padding: \"5px 10px\", borderBottom: \"1px solid red\", cursor: \"default\"};\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"lemma\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"lemma\"})}}>Lemma</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n                <div style={this.state.tab===\"ressource\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ressource\"})}}>Werke und Ressourcen</div>\n            </div>\n            {mainBody}\n            <div style={{color: \"lightgray\", float: \"right\", marginTop: \"20px\", fontSize: \"14px\"}}>Stand: {this.state.last_updated}</div>\n        </div>);\n    }\n    componentDidMount(){\n        const getNumbers = async () => {\n            const numbers = await arachne.statistics.getAll();\n            console.log(numbers);\n            this.setState({\n                last_updated: JSON.parse(numbers.find(i => i.name === \"last_updated\").data),\n                zettel_process: JSON.parse(numbers.find(i => i.name === \"zettel_process\").data),\n                zettel_types: JSON.parse(numbers.find(i => i.name === \"zettel_type\").data),\n                zettel_created: JSON.parse(numbers.find(i => i.name === \"zettel_created\").data),\n                zettel_changed: JSON.parse(numbers.find(i => i.name === \"zettel_changed\").data),\n                zettel_created_current: JSON.parse(numbers.find(i => i.name === \"zettel_created_current\").data),\n                zettel_changed_current: JSON.parse(numbers.find(i => i.name === \"zettel_changed_current\").data),\n                lemma_letters: JSON.parse(numbers.find(i => i.name === \"lemma_letter\").data),\n                lemma_mlw: JSON.parse(numbers.find(i => i.name === \"lemma_mlw\").data),\n                ressource_work: JSON.parse(numbers.find(i => i.name === \"ressource_work\").data)\n            });\n        }\n        getNumbers();\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"updateOpera\",\n            users: []\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"updateOpera\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Damit Änderungen in den <i>opera</i>-Listen oder Änderungen in den Ressourcen in den Listen sichtbar werden, müssen sie auf dem Server aktualisiert werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"opera-Listen aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        //const reStatus = await arachne.exec(\"opera_maiora_update\");\n                        const reStatus = await arachne.exec(\"opera_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"updateStatistics\":\n                styleBody.gridTemplateRows = \"1fr 1fr\";\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea:\"1/1/1/3\", textAlign: \"justify\"}}>Um die Zahlen in der Statistik-Ansicht zu aktualisieren, müssen sie auf dem Server neu berechnet werden. Dieser Prozess kann 30 Sekunden bis 1 Minute dauern.<br /><b>Wechseln oder schließen Sie nicht die Ansicht, während die Aktualisierung ausgeführt wird.</b></div>\n                    <div style={{gridArea:\"2/2/2/3\", textAlign:\"right\"}}><input type=\"button\" value=\"Statistik aktualisieren\" onClick={async ()=>{\n                        this.props.status(\"saving\", \"Aktualisierung wird ausgeführt.\");\n                        const reStatus = await arachne.exec(\"statistics_update\");\n                        if(reStatus===200){this.props.status(\"saved\", \"Aktualisierung erfolgreich.\")}\n                        else{this.props.status(\"error\", \"Die Aktualisierung war nicht erfolgreich.\")}\n                    }} /></div>\n                </div>;\n                break;\n            case \"accounts\":\n                styleBody.display = \"block\";\n                let userRows = [];\n                // online: 30*60*1000 = 1800000\n                for(const user of this.state.users){\n                    userRows.push(<tr key={user.id} onDoubleClick={e=>{e.stopPropagation();this.setState({item: user})}}><td>{user.first_name} {user.last_name}</td><td>{JSON.parse(user.access).join(\", \")}</td><td>{user.agent}</td><td>{Date.now()-new Date(user.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td></tr>)\n                }\n                mainBody = <div style={styleBody}><table className=\"minorTxt\" width=\"100%\"><tbody>{userRows}</tbody></table></div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht erkannt!</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox} onDoubleClick={()=>{this.setState({item: null})}}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"updateOpera\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateOpera\"})}}>Opera-Listen</div>\n                <div style={this.state.tab===\"updateStatistics\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"updateStatistics\"})}}>Statistiken</div>\n                {arachne.access(\"admin\")?<div style={this.state.tab===\"accounts\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"accounts\"})}}>Kontenverwaltung</div>:null}\n            </div>\n            {mainBody}\n            {this.state.item?<ServerAside status={this.props.status}  item={this.state.item} onUpdate={ids=>{alert(\"Ansicht updaten!\")}} />:null}\n        </div>);\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){\n            const loadUsers = async () => {\n                const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n                this.setState({users: newUsers});\n            };\n            loadUsers();\n        }\n    }\n}\n\nclass ServerAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {access: JSON.parse(this.props.item.access)};\n    }\n    render(){\n        const rights = {\n            \"auth\": \"Profil aktiviert\",\n            \"admin\": \"Adminrechte\",\n            \"o_view\": \"Kommentarspalte (opera-Listen)\",\n            \"o_edit\": \"opera-Listen bearbeiten\",\n            \"z_add\": \"Zettel importieren\",\n            \"z_edit\": \"Zettel bearbeiten\",\n            \"l_edit\": \"Lemma-Liste bearbeiten\",\n            \"library\": \"Zugriff auf Bibliothek\",\n            \"e_edit\": \"Bibliothek bearbeiten\",\n            \"setup\": \"Zugriff auf Datenbanksetup\",\n            \"module\": \"Zugriff über Python-Modul\",\n            \"editor\": \"Zugriff auf Lemmastrecken-Editor\",\n            \"comment\": \"Zugriff auf Kommentarfunktion\",\n            \"comment_moderator\": \"Kommentare moderieren\"\n        };\n        let rightList = [];\n        for(const [right, description] of Object.entries(rights)){\n            let marked = \"\";\n            if(this.state.access.includes(right)){marked = \"accessMarked\"}\n            rightList.push(<div key={right} className={marked} onClick={()=>{\n                let nAccess = this.state.access;\n                if(nAccess.includes(right)){\n                    nAccess = nAccess.map(i => {if(i!=right){return i}});\n                } else {\n                    nAccess.push(right);\n                }\n                this.setState({access: nAccess});\n            }}>{description}</div>);\n        }\n\n        return <div style={{\n            position: \"fixed\",\n            overflow: \"scroll\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"25px 15px 10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }} className=\"mainColors\">\n            <h3>{this.props.item.first_name} {this.props.item.last_name}</h3>\n            <div>Am {this.props.item.session_last_active} zuletzt online.</div>\n            <div style={{border: \"1px solid black\", margin: \"10px 0\", padding: \"10px\"}}>{this.props.item.agent}</div>\n            <h4>Rechte</h4>\n            <div className=\"accessBox\">{rightList}</div>\n            <div><input type=\"button\" style={{float: \"right\", marginTop: \"20px\"}} value=\"speichern\" onClick={()=>{\n                this.props.status(\"saving\");\n                arachne.user.save({\n                    id: this.props.item.id,\n                    access: JSON.stringify(this.state.access)\n                })\n                this.props.status(\"saved\");\n            }} /></div>\n        </div>;\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.id!=this.props.item.id){\n            this.setState({access: JSON.parse(this.props.item.access)});\n        }\n    }\n}\n\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            editionLst: [],\n            scanWork: 1,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: 1,\n            ocrFiles: null,\n            zettelLetter: \"A\",\n            zettelFiles: null,\n            zettelEditors: [[arachne.me.id, arachne.me.last_name]],\n            zettelEditorSelected: arachne.me.id,\n        };\n    }\n    render(){\n        const styleBody = {\n            boxShadow: \"0px 2px 7px rgb(217, 217, 217)\",\n            padding: \"40px 10% 20px 10%\",\n            display: \"grid\",\n            gridTemplateColumns: \"200px auto\",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr auto\",\n            gridGap: \"15px\"\n        }\n        let mainBody = <div style={styleBody}></div>;\n        switch(this.state.tab){\n            case \"res\":\n                mainBody = <div style={styleBody}>\n                    <div style={{gridArea: \"1/1/1/2\"}}>Werk:</div>\n                    <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={this.state.workLst} onChange={e=>{this.setState({scanWork: e.target.value})}} /></div>\n                    <div style={{gridArea: \"2/1/2/2\"}}>Ressource:</div>\n                    <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></div>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Editor:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Jahr:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Band:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></div>,\n                        <div key=\"6\" style={{gridArea: \"6/1/6/2\"}}>Bandinhalt:</div>,\n                        <div key=\"7\" style={{gridArea: \"6/2/6/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></div>,\n                        <div key=\"8\" style={{gridArea: \"7/1/7/2\"}}>Reihe:</div>,\n                        <div key=\"9\" style={{gridArea: \"7/2/7/3\"}}><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></div>\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Stadt:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Bibliothek:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Signatur:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></div>\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <div key=\"0\" style={{gridArea: \"3/1/3/2\"}}>Drucker:</div>,\n                        <div key=\"1\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></div>,\n                        <div key=\"2\" style={{gridArea: \"4/1/4/2\"}}>Ort:</div>,\n                        <div key=\"3\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></div>,\n                        <div key=\"4\" style={{gridArea: \"5/1/5/2\"}}>Jahr:</div>,\n                        <div key=\"5\" style={{gridArea: \"5/2/5/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></div>,\n                    ]:null}\n                    <div style={{gridArea: \"9/1/9/2\"}}>Dateipfad:</div>\n                    <div style={{gridArea: \"9/2/9/3\"}}><input type=\"text\" style={{width: \"96%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></div>\n                    <div style={{gridArea: \"10/1/10/2\"}}>.png-Dateien:</div>\n                    <div style={{gridArea: \"10/2/10/3\"}}><input type=\"file\" name=\"files\" accept=\"image/png\" multiple onChange={e=>{this.setState({scanFiles: e.target.files})}} /></div>\n                    <div style={{gridArea: \"12/2/12/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.scanFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                            this.props.status(\"error\", \"Geben Sie den Editor und das Jahr ein.\");\n                        } else if(this.state.scanPath&&this.state.scanWork){\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            // create new edition\n                            const newEditionId = await arachne.edition.save({\n                                work_id: this.state.scanWork,\n                                ressource: this.state.scanType,\n                                editor: this.state.scanEditor,\n                                year: this.state.scanYear,\n                                volume: this.state.scanVolume,\n                                vol_cont: this.state.scanVolumeContent,\n                                serie: this.state.scanSerie,\n                                location: this.state.scanLocation,\n                                library: this.state.scanLibrary,\n                                signature: this.state.scanSignature,\n                                path: this.state.scanPath,\n                                url: \"\",\n                            });\n                            console.log(\"new edition id:\", newEditionId);\n                            // upload files\n                            if(newEditionId>0){\n                                let uploadForm = new FormData();\n                                uploadForm.append(\"edition_id\", newEditionId);\n                                uploadForm.append(\"path\", this.state.scanPath);\n                                const fLength = this.state.scanFiles.length;\n                                for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                                const re = await arachne.importScans(uploadForm);\n                                if(re.status===400){this.props.status(\"error\", \"Fehler beim Hochladen der Dateien.\")}\n                                else if(re.body.length==1){this.props.status(\"saved\", \"Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole).\");console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else if(re.body.length>0){this.props.status(\"saved\", `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole).`);console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`)}\n                                else{this.props.status(\"saved\", \"Das Hochladen war erfolgreich.\")}\n                            } else {\n                                this.props.status(\"error\", \"Edition konnte nicht erstellt werden.\");\n                            }\n                        } else{this.props.status(\"error\", \"Geben Sie einen gültigen Pfad ein!\")}                    \n                    }} /></div>\n                </div>;\n                break;\n            case \"ocr\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Ressource:</div>\n                    <div><SelectMenu options={this.state.editionLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} /></div>\n                    <div>.txt-Dateien:</div>\n                    <div><input type=\"file\" accept=\"text/plain\" multiple onChange={e=>{this.setState({ocrFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            const scanLnks = await arachne.scan_lnk.get({edition_id: this.state.ocrRessource});\n                            let scanLst = [];\n                            for(const scanLnk of scanLnks){\n                                const nScan = await arachne.scan.get({id: scanLnk.scan_id})\n                                scanLst.push(nScan[0]);\n                            }\n                            let missLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    await arachne.scan.save({id: cScan.id, full_text: fileTxt})\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(missLst.length>1){this.props.status(\"saved\", `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`);console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else if(missLst.length==1){this.props.status(\"saved\", \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\");console.log(`übersprungene Dateien: ${missLst.join(\", \")}`)}\n                            else{this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");}\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            case \"zettel\":\n                styleBody.gridTemplateRows = \"1fr 1fr 1fr 1fr 1fr auto\";\n                mainBody = <div style={styleBody}>\n                    <div>Buchstabe:</div>\n                    <div><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I\"], [\"J\", \"J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U\"], [\"V\", \"V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></div>\n                    <div>erstellt von:</div>\n                    <div><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></div>\n                    <div>Dateien:</div>\n                    <div><input type=\"file\" accept=\"image/jpeg\" multiple onChange={e=>{this.setState({zettelFiles: e.target.files})}} /></div>\n                    <div style={{gridArea:\"4/2/4/3\"}}><input type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.zettelFiles==null){\n                            this.props.status(\"error\", \"Geben Sie Dateien zum Hochladen an.\");\n                        }else{\n                            this.props.status(\"saving\", \"Die Dateien werden vorbereitet.\");\n                            const maxItem= 100;\n                            let cItemCount = maxItem;\n                            let cUploadIndex = -1;\n                            let uploadGroup = [];\n                            const fLength = this.state.zettelFiles.length;\n                            // prepare upload groups\n                            for(let i=0; i<fLength; i++){\n                                if(cItemCount >= maxItem){\n                                    cItemCount = 0;\n                                    cUploadIndex ++;\n                                    uploadGroup.push(new FormData());\n                                    uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                    uploadGroup[cUploadIndex].append(\"type\", \"0\");\n                                    uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                }\n                                cItemCount ++;\n                                uploadGroup[cUploadIndex].append(\"files\", this.state.zettelFiles[i]);\n                            }\n                            // loop through groups and upload!\n                            this.props.status(\"saving\", \"Die Dateien werden hochgeladen.\");\n                            for(const uItem of uploadGroup){\n                                await arachne.importZettel(uItem);\n                            }\n\n                            this.props.status(\"saved\", \"Dateien wurden hochgeladen.\");\n                        }\n                    }} /></div>\n                </div>;\n                break;\n            default:\n                mainBody = <div>Tab nicht gefunden.</div>;\n        }\n        const styleBox = {\n            \"padding\": \"20px 20% 0 20%\"\n        }\n        const styleHeader = {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            /*border: \"1px solid white\",*/\n            padding: \"10px 20px\"\n\n        }\n        const styleTab = {\n            padding: \"5px 10px\",\n            cursor: \"default\"\n        }\n        const styleTabActive = {\n            padding: \"5px 10px\",\n            borderBottom: \"1px solid red\",\n            cursor: \"default\"\n        }\n        return (<div style={styleBox}>\n            <div style={styleHeader}>\n                <div style={this.state.tab===\"res\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"res\"})}}>Ressource</div>\n                <div style={this.state.tab===\"ocr\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"ocr\"})}}>ocr-Dateien</div>\n                <div style={this.state.tab===\"zettel\"?styleTabActive:styleTab} onClick={()=>{this.setState({tab: \"zettel\"})}}>Zettel</div>\n            </div>\n            {mainBody}\n        </div>);\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const editions = await arachne.edition.getAll({select: [\"id\", \"label\"], order: [\"label\"]});\n            let newEditionLst = [];\n            for(const edition of editions){\n                newEditionLst.push([edition.id, edition.label]);\n            }\n            this.setState({editionLst: newEditionLst});\n\n        }\n        loadOptions();\n\n        if(arachne.access(\"admin\")){\n            arachne.user.getAll({order: [\"last_name\"]}).then(users=>{\n                let userLst = [];\n                for(const user of users){\n                    userLst.push([user.id, user.last_name]);\n                }\n                this.setState({zettelEditors: userLst});\n            }).catch(e=>{throw e});\n        }\n    }\n}\nclass Help extends React.Component{\n    render(){\n        return (\n    <div style={{padding: \"20px 40px\"}}>\n        <p>\n        <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/00-Start\">Hilfe und Informationen</a> zu dMLW finden Sie auf unsererer <a href=\"https://gitlab.lrz.de/haeberlin/dmlw\">GitLab-Seite</a>.</p>\n        <p>Informationen zu der aktuellen Version von dMLW und den Veränderungen finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/blob/master/CHANGELOG.md\">in unserem Changelog</a>.</p>\n        <p>Informationen zum Wörterbuch-Projekt auf <a href=\"www.mlw.badw.de\">www.mlw.badw.de</a></p> \n    </div>\n        );\n    }\n}\n\nexport { Account, Help, Import, Server, Statistics };","import React from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete } from \"./elements.js\";\n\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {showDate: true, count:0, selectionDetail:{ids:[], currentId:null, activeProjects: []}};\n    }\n\n    render(){\n        return (\n        <div style={{padding: \"0 10px\", display: \"grid\", gridTemplateColumns: \"auto 420px\", gridTemplateRows: \"min-content auto\", rowGap: \"15px\"}}>\n            <SearchBox\n                boxName=\"zettel\"\n                searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                searchOptions={[\n                    [\"lemma\", \"Lemma\"],\n                    [\"type\", \"Typ\"],\n                    [\"id\", \"ID\"],\n                    [\"opus\", \"Werk\"],\n                    [\"date_type\", \"Datum-Typ\"]\n                ]}\n                sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\", \"lemma_nr\", \"date_sort\", \"date_type\"]', \"Datum\"]]}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"1/1/1/2\":\"1/1/1/3\"}\n            />\n            <ZettelBox\n                loadPage={newPage => {this.loadPage(newPage)}}\n                currentElements={this.state.currentElements}\n                count={this.state.count}\n                currentPage={this.state.currentPage}\n                maxPage={this.state.maxPage}\n                presetSelection={this.state.presetSelection}\n                gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                showDetail={item => {\n                    this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                }}\n                showDate={this.state.showDate}\n            />\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside activeProjects={this.state.activeProjects} status={this.props.status} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} openNextItem={()=>{this.openNextItem()}} toggleShowDate={()=>{\n                if(this.state.showDate){this.setState({showDate: false})}\n                else{this.setState({showDate: true})}\n                \n                }} />:\"\"}\n        </div>\n        );\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.props.status(\"searching\");\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.props.status(\"found\", `${count[0][\"count\"]} Einträge gefunden.`)}\n        else if(count[0][\"count\"]===1){this.props.status(\"found\", \"1 Eintrag gefunden.\")}\n        else{this.props.status(\"notFound\")}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n    componentDidMount(){\n        if(arachne.access(\"editor\")){\n            arachne.project.get({status: 1})\n            .then(projects => {\n                let projectLst = [];\n                for(const project of projects){\n                    projectLst.push([project.id, project.name]);\n                }\n                this.setState({activeProjects: projectLst});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard showDate={this.props.showDate} testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {width: arachne.options.z_width+\"px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img alt=\"\" className={classList} src={zettel.img_path+\".jpg\"}></img>\n                {this.props.showDate?<div className=\"zettel_msg\" dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>:null}\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            addLemma: false,\n            ressources: [],\n            batchType: 1,\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_display: this.props.item.date_display,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null,\n            batch_project: null\n        };\n    }\n    render(){\n        const style = {\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: \"400px\",\n            padding: \"10px 15px\",\n            boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\"\n        }\n        if(this.state.addLemma){ // add lemma\n            return <div style={style} className=\"mainColors\">\n            <div style={{\n                margin: \"50px 0 10px 0\"}}>\n                <p><b>Soll ein neues Lemma erstellt werden?</b><br /><span className=\"minorTxt\"><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Neues-Lemma-erstellen#3-maske-ausfüllen\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Lemmata.</span></p>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Lemma:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>Lemma-Anzeige:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}>Zahlzeichen:</div>\n                <div style={{gridArea: \"1/2/1/3\"}}><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></div>\n                <div style={{gridArea: \"2/1/2/2\"}}>im Wörterbuch:</div>\n                <div style={{gridArea: \"2/2/2/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></div>\n                <div style={{gridArea: \"3/1/3/2\"}}>Stern:</div>\n                <div style={{gridArea: \"3/2/3/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></div>\n                <div style={{gridArea: \"4/1/4/2\"}}>Fragezeichen:</div>\n                <div style={{gridArea: \"4/2/4/3\"}}><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></div>\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"50px 0\"\n            }}>\n                <div style={{gridArea: \"1/1/1/2\"}}><input type=\"button\" value=\"erstellen\" onClick={async ()=>{\n                    if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                        this.props.status(\"error\", \"Bitte ein gültiges Lemma eintragen!\");\n                    } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                        this.props.status(\"error\", \"Bitte tragen Sie eine gültige Lemma-Anzeige ein!\");\n                    } else {\n                        let newLemmaValue = {\n                            lemma: this.state.newLemma_Lemma,\n                            lemma_display: this.state.newLemma_LemmaDisplay,\n                            MLW: this.state.newLemma_MLW,\n                            Fragezeichen: this.state.newLemma_LemmaFrage,\n                            Stern: this.state.newLemma_Stern,\n                        };\n                        if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.status(\"saved\", `Neue ID: ${newId}`);\n                        this.setState({lemma_ac: this.state.newLemma_Lemma, lemma_id: newId, addLemma: false});\n                    }\n                }} /></div>\n                <div style={{gridArea: \"1/2/1/3\"}}><input type=\"button\" value=\"abbrechen\" onClick={()=>{this.setState({addLemma: false})}} /></div>\n            </div>\n            </div>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/viewer/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = \"\";\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [<div key=\"1\" style={{gridArea: \"2/1/2/3\"}}><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Zettel-verknüpfen#datierung-der-zettel\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></div>,\n                <div key=\"2\" style={{gridArea: \"3/1/3/2\"}}>Sortierdatum:</div>,\n                <div key=\"3\" style={{gridArea: \"3/2/3/3\"}}><input type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                    if(!isNaN(e.target.value)&&e.target.value!==\"\"&&e.target.value!==\" \"){\n                        this.setState({date_own: parseInt(e.target.value)});\n                    }else{\n                        this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                    }\n                }} /></div>,\n                <div key=\"4\" style={{gridArea: \"4/1/4/2\"}}>Anzeigedatum:</div>,\n                <div key=\"5\" style={{gridArea: \"4/2/4/3\"}}><input type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></div>\n            ];\n            }\n            return (\n    <div style={style} className=\"mainColors\">\n        <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr 5px 1fr 1fr 1fr\",\n            rowGap: \"10px\",\n            margin: \"35px 0 30px 0\"\n        }}>\n            <div className=\"minorTxt\" style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}}>\n                <i>ID {this.state.id}</i>\n            </div>\n            <div style={{gridArea: \"3/1/3/2\"}}>Zetteltyp:</div>\n            <div style={{gridArea: \"3/2/3/3\"}}>\n                <SelectMenu style={{width: \"86%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} classList=\"zettel_type\" />\n            </div>\n            <div style={{gridArea: \"4/1/4/2\"}}>Lemma:</div>\n            <div style={{gridArea: \"4/2/4/3\"}}>\n                <AutoComplete onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" searchCol=\"lemma\" returnCol=\"lemma_ac\" />\n            </div>\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/1/5/2\"}}>Werk:</div> : null}\n            {this.state.type!==4&&this.state.type<6 ? <div style={{gridArea: \"5/2/5/3\"}}><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id})}} /></div> : null}\n        </div>\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n        <div style={dateStyle}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Datierung:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></div>\n            {dateOwn}\n        </div>\n        :null}\n        {this.state.type!==4&&this.state.type<6&&this.state.work_id>0 ?\n            <div style={{textAlign: \"right\", marginBottom: \"20px\"}}><a className=\"minorTxt\" onClick={this.props.toggleShowDate}>Datierung ein-/ausblenden</a></div>\n        :null}\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/2/1/3\"}}>\n                <input type=\"button\" value=\"speichern&weiter\" style={{marginBottom: \"10px\"}} onClick={()=>{this.saveDetail(true)}} />\n                <input type=\"button\" value=\"speichern\" onClick={()=>{this.saveDetail()}} />\n            </div>\n        </div>\n        {this.state.ressources.length>0&&this.state.type!==4&&this.state.type<6?\n        <div style={{\n            borderTop: \"1px solid #f2f2f2\",\n            paddingTop: \"30px\",\n            display: \"grid\",\n            gridTemplateColumns: \"150px auto\",\n            gridTemplateRows: \"1fr\",\n            rowGap: \"10px\",\n            margin: \"10px 0 30px 0\"\n            }}>\n            <div style={{gridArea: \"1/1/1/2\"}}>Ressourcen:</div>\n            <div style={{gridArea: \"1/2/1/3\"}}>{cRes}</div>\n        </div>\n        :null}\n        {arachne.access(\"admin\")?\n        <div style={{textAlign: \"right\", fontSize:\"25px\", marginRight: \"10px\"}}><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{\n            if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                this.props.status(\"deleting\");\n                arachne.zettel.delete(this.state.id);\n                this.props.status(\"deleted\");\n            }\n        }} /></div>\n        :null}\n    </div>\n            );\n        } else { // batch\n            let inputType = \"\";\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\"  searchCol=\"lemma\" returnCol=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                case 4:\n                    //inputType = <SelectMenu style={{width: \"86%\"}} options={this.props.activeProjects} onChange={event=>{this.setState({batch_project: event.target.value})}} />;\n                    break;\n                default:\n                    inputType = <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n            }\n            let batch_options = [[1, \"Lemma\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]];\n            if(arachne.access(\"editor\")){batch_options.push([4,\"Projekt\"])}\n            return <div style={style} className=\"mainColors\">\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    gridTemplateRows: \"1fr 25px 1fr 15px 1fr\",\n                    rowGap: \"10px\",\n                    margin: \"35px 0 30px 0\"\n                }}>\n                    <span style={{gridArea: \"1/1/1/3\", textAlign: \"right\"}} className=\"minorTxt\"><i>{this.props.selection.ids.length} Zettel</i></span>\n                    <div style={{gridArea: \"3/1/3/2\"}}>\n                        <SelectMenu style={{width: \"86%\"}} options={batch_options} onChange={event=>{\n                            this.setState({batchType: parseInt(event.target.value)})\n                            }} />\n                    </div>\n                    <div style={{gridArea: \"3/2/3/3\"}}>\n                        {inputType}\n                    </div>\n                    <div style={{gridArea: \"5/2/5/3\"}}><input type=\"button\" value=\"für alle übernehmen\" onClick={async ()=>{\n                        let skipSave = false;\n                        let newValue = \"\";\n                        let newKey = \"\";\n                        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n                        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n                        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n                        else if(this.state.batchType===4&&this.state.batch_project!=null){newKey=\"project\";newValue=this.state.batch_project}\n                        else{skipSave=true;this.props.status(\"error\", \"Bitte tragen Sie einen gültigen Wert ein.\")}\n                        if(skipSave===false&&this.state.batchType<4){\n                            let newValueLst = [];\n                            for(const cId of this.props.selection.ids){\n                                let newValueObj = {id: cId, user_id: arachne.user.id}\n                                newValueObj[newKey] = newValue;\n                                newValueLst.push(newValueObj);\n                            }\n                            this.props.status(\"saving\");\n                            await arachne.zettel.save(newValueLst);\n                            this.props.status(\"saved\");\n                            this.props.onUpdate(this.props.selection.ids);\n                        }else if(skipSave===false&&this.state.batchType===4){\n                            const defaultArticle = await arachne.article.get({\"project_id\": this.state.batch_project, sort_nr: 0, parent_id: 0});\n                            if(defaultArticle.length!=1){alert(\"Ein Fehler ist aufgetreten: Die Zettel können dem Projekt nicht zugewiesen werden!\")}\n                            else{\n                                const newLinks = this.props.selection.ids.map(i=>{return {zettel_id: i, article_id: defaultArticle[0].id};});\n                                this.props.status(\"saving\");\n                                await arachne.zettel_lnk.save(newLinks);\n                                this.props.status(\"saved\");   \n                            }\n                        }\n                    }} /></div>\n                </div>\n            </div>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_display: this.props.item.date_display,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_display: this.props.item.date_display,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})}\n        }\n    }\n    async saveDetail(next=false){\n        if(this.state.work_id>0&&this.state.date_type===9&&this.state.date_own!=\"\"&&!Number.isInteger(this.state.date_own)){\n            this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n        } else {\n            let nVals = {\n                id: this.state.id,\n                type: this.state.type,\n                user_id: arachne.user.id\n            };\n            if(this.state.work_id>0){nVals.work_id = this.state.work_id}\n            else{nVals.work_id = null}\n\n            this.props.status(\"saving\");\n            if(this.state.lemma_id===null&&this.state.newLemma_Lemma!==\"\"){this.setState({addLemma: true})}\n            else if(this.state.lemma_id>0){nVals.lemma_id = this.state.lemma_id}\n            else {nVals.lemma_id = null}\n            if(this.state.date_type===9&&this.state.date_own!=\"\"&&Number.isInteger(this.state.date_own)){\n                nVals.date_own = this.state.date_own;\n                nVals.date_own_display = this.state.date_own_display;\n            } else {\n                nVals.date_own = null;\n                nVals.date_own_display = null;\n            }\n            await arachne.zettel.save(nVals)\n            this.props.status(\"saved\");\n            if(next){\n                document.querySelector(\"select.zettel_type\").focus();\n                this.props.openNextItem();\n            }else{this.props.onUpdate([this.state.id]);}\n        }\n    }\n}\n\nexport { Zettel };","import React from \"react\";\n\nclass Editor extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div>Der Lemmastrecken-Editor ist nur in der alten Version verfügbar. Klicken Sie <a href=\"/site\">hier</a> um ihn zu öffnen.</div>;\n    }\n}\n\nexport { Editor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./opera.js\";\nimport { Ressource, SekLit } from \"./ressources.js\";\nimport { Account, Help, Import, Server, Statistics } from \"./settings.js\";\nimport { Zettel } from \"./zettel.js\";\nimport { Editor } from \"./editor.js\";\n\nconst colors = {shadow: \"#3c6e71\"}\n\nclass MainMenu extends React.Component{\n    constructor(props){\n        super(props);\n        const menuLst = {\n            \"Zettel- und Wortmaterial\": {\n                visible: false, \n                items: {\n                    \"Zettel-Datenbank\": \"zettel\",\n                    \"Lemmaliste\": \"lemma\",\n                    /*\"Volltext-Suche\": \"fulltext\",*/\n            }},\n            \"Verzeichnisse\": {\n                visible: false, \n                items: {\n                    \"opera-maiora\":\"maiora\",\n                    \"opera-minora\":\"minora\",\n                    \"Ressourcen\":\"ressources\",\n                    \"Sekundärliteratur\":\"seklit\",\n            }},\n            \"Editor\": {\n                visible: false, \n                items:\n                {\"Projektübersicht\":\"overview\"}\n            },\n            \"Einstellungen\": {\n                visible: false, \n                items: {\n                    \"Hilfe\":\"help\",\n                    \"Konto\":\"account\",\n                    \"Server\": \"server\",\n                    \"Import\": \"import\",\n                    \"Statistiken\":\"stats\",\n                    \"abmelden\":\"logout\",\n            }}\n        };\n        this.state = {menuEntries: menuLst, currentSubmenu: null};\n    }\n    render(){\n        let style = {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            boxShadow: `0 0 2px ${colors.shadow}`,\n            padding: \"10px 15px\",\n            zIndex: 2000000,\n        };\n        let menuEntries = [];\n        if(this.props.onTop===1){\n            // top menu\n            style.right = 0;\n            style.display = \"flex\";\n            style.position = \"absolute\";\n            style.justifyContent = \"space-evenly\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                keyCount ++;\n                let subMenu = \"\";\n                const subMenuStyle = {\n                    position: \"absolute\",\n                    boxShadow: \"rgb(60, 110, 113) 0px 0px 2px\",\n                    top: \"43px\",\n                    padding: \"10px 25px\",\n                    marginLeft: \"-10px\"\n                }\n                if(this.state.currentSubmenu===mainEntry){\n                    let subMenuEntries = [];\n                    for(const subEntry in this.state.menuEntries[mainEntry].items){\n                        subMenuEntries.push(<div key={subEntry} style={{margin: \"10px 0 10px 10px\"}} onClick={()=>{\n                            this.setState({currentSubmenu: \"\"});\n                            this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                        }}><span style={{cursor:\"pointer\"}}>{subEntry}</span></div>);\n                    }\n                    subMenu = <div key={subMenuEntries}  className=\"mainColors\" style={subMenuStyle}>{subMenuEntries}</div>;\n                }\n                menuEntries.push(\n                <div key={keyCount}>\n                    <span style={{cursor:\"pointer\"}} onClick={() => {\n                        if(this.state.currentSubmenu === mainEntry){this.setState({currentSubmenu: null})}\n                        else{this.setState({currentSubmenu: mainEntry})}\n                    }}>{mainEntry}</span>\n                    {subMenu}\n                </div>);\n                //<div style={{display: \"none\"}}>{this.state.menuEntries[mainEntry]}</div>\n            }\n        } else {\n            // side menu\n            //style.display = \"block\";\n            style.transition = \"left 0.5s\";\n            if(this.state.hidden){style.left = \"-290px\"}\n            style.bottom = \"0\";\n            style.width = \"300px\";\n            let keyCount = -1;\n            for(const mainEntry in this.state.menuEntries){\n                menuEntries.push(<div key={mainEntry} style={{marginTop: \"15px\", cursor:\"default\"}}>{mainEntry}</div>);\n                for(const subEntry in this.state.menuEntries[mainEntry].items){\n                    keyCount ++;\n                    menuEntries.push(<div key={subEntry} style={{marginLeft: \"15px\", display: \"inline-block\", cursor:\"pointer\"}} onClick={()=>{\n                        this.props.loadMain(this.state.menuEntries[mainEntry].items[subEntry]);\n                    }}>{subEntry}</div>);\n                    menuEntries.push(<br key={keyCount} />);\n                }\n            }\n\n        }\n        return (\n        <nav className=\"mainColors\" style={style} onClick={() => {\n            if(this.props.onTop!==1){\n                if(this.state.hidden){this.setState({hidden: false})}\n                else{this.setState({hidden: true})}\n            }\n        }}>\n            {menuEntries}            \n        </nav>);\n    }\n}\nclass App extends React.Component {\n    constructor(props){\n        const maxWinWidth = 1000;\n        super(props);\n        // check here, if Login-Screen needs to be shown, or not!\n        let mainMenuPos = 1;\n        if(window.innerWidth<maxWinWidth){mainMenuPos = 0}\n        this.state = {mode: \"login\", res: null, mainMenuPos: mainMenuPos, status: {}};\n        window.addEventListener(\"resize\", () => {\n            if(window.innerWidth<maxWinWidth){this.setState({mainMenuPos: 0})}\n            else{this.setState({mainMenuPos: 1})}\n        });\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n        this.tbls = [\"author\", \"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\", \"seklit\", \"project\", \"article\", \"zettel_lnk\", \"statistics\"];\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.res){\n                case null:\n                    break;\n                case \"overview\":\n                    main = <Editor status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"ressources\":\n                    main = <Ressource status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"seklit\":\n                    main = <SekLit status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"stats\":\n                    main = <Statistics status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"server\":\n                    main = <Server status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"lemma\":\n                    main = <Lemma status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"maiora\":\n                    main = <Opera listName=\"opera_maiora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"minora\":\n                    main = <Opera listName=\"opera_minora\" status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"help\":\n                    main = <Help />;\n                    break;\n                case \"import\":\n                    main = <Import status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"zettel\":\n                    main = <Zettel status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                case \"account\":\n                    main = <Account status={(type,value)=>{this.newStatus(type, value)}} />;\n                    break;\n                default:\n                    main = <div>Unbekannter Menü-Punkt {this.state.res}</div>;\n            }\n            return (\n                <div style={(this.state.mainMenuPos===1)?{marginTop: \"60px\"}:{marginLeft: \"40px\"}}>\n                    <MainMenu onTop={this.state.mainMenuPos} loadMain={res => {this.loadMain(res)}} />\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: `0 1.2px 6px ${colors.shadow}`\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){\n                await arachne.open(this.tbls);\n                this.setState({mode: \"main\"});\n            }\n        }\n        checkSession();\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        if(email!==\"\"&&password!==\"\"&&await arachne.login(email, password, this.tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}