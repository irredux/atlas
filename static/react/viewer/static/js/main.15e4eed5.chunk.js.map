{"version":3,"sources":["arachne.js","elements.js","argos.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","rowId","data","Array","isArray","body","response","newValues","rId","id","parseInt","text","arachne","location","origin","me","localOptions","localStorage","getItem","parse","z_width","name","value","setItem","user","password","tbls","open","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","newForm","mode","rights","every","r","access","includes","SearchInput","props","item","searchOptions","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","type","placeholder","onKeyUp","e","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","React","Component","Status","state","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","display","backgroundColor","fontSize","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","setState","faCat","faCheckCircle","faTimesCircle","faCloudMoon","ref","position","bottom","left","transition","borderRadius","overflow","zIndex","top","SelectMenu","op","classList","onChange","event","pointerEvents","textAlign","margin","faAngleDown","SelectorWrapper","isSelected","children","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","parseHTML","i","__html","DOMPurify","sanitize","replace","ADD_TAGS","Argos","imgURL","fullTextEdit","scanLst","scanLstSelected","addEventListener","cIndex","length","contentMenuLst","contentMenu","scan","full_text","faKeyboard","target","isNaN","filename","mainStyle","gridTemplateColumns","gridTemplateRows","columnGap","fullTxtBox","txt","dangerouslySetInnerHTML","RegExp","currentQuery","outline","resize","height","onBlur","save","scan_id","src","title","float","page","faEdit","right","listStyleType","borderTop","scan_lnk","edition","results","map","faBars","faImage","faColumns","get","edition_id","sort","b","opus","label","setupEdition","prevProps","prevState","getScan","img","catch","App","newStatus","main","gridColumn","gridRow","gridArea","createFirstName","createLastName","createEmail","createPassword","first_name","last_name","email","createAccount","marginLeft","login","urlQueries","URLSearchParams","checkSession","res","close","document","querySelector","alert","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.15e4eed5.chunk.js","sourcesContent":["class ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n            }\n        });\n    }\n    async delete(rowId){\n        let url = `${this.url}/data/${this.tblName}/${rowId}`;\n        let data = null;\n        if(Array.isArray(rowId)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n            data = JSON.stringify(rowId);\n        }\n        const response = await fetch(url, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Bearer ${this.key}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: data\n        });\n        if(response.status===200){\n            return true;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"delete\", status: response.status}});\n            window.dispatchEvent(errorEvent);\n        }\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        if(url===\"\"&&window.location.origin===\"http://localhost:3000\"){this.url = \"http://localhost:8080\"}\n        else{this.url=url}\n        this.key = null;\n        this.me = null;\n        \n        // load local options for displaying in current browser\n        let localOptions = localStorage.getItem(\"dmlwOptions\");\n        if(localOptions){\n            localOptions = JSON.parse(localOptions);\n            this.options = {z_width: localOptions.z_width?localOptions.z_width:500};\n        } else {\n            this.options = {z_width: 500};\n        }\n    }\n    setOptions(name, value){\n        this.options[name] = value;\n        localStorage.setItem(\"dmlwOptions\", JSON.stringify(this.options))\n    }\n    async login(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            return this.open(tbls);\n        }else{\n            return false;\n        }\n    }\n    async open(tbls=null){\n        const reUser = await this.getUser();\n        if(reUser){\n            this.me = reUser;\n            this.me.selectKey = 'ctrl';\n            if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n        }\n        else {return false;}\n\n        if(tbls == null){tbls = await this.tables()}\n        for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n        return true;\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n}\n\nlet arachne = new Arachne();\n\nexport { arachne };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.item.id)}} />\n        </div>\n        );\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {nextID: 1, searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]};\n        this.sOrder = null;\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} item={sF} key={sF.id} clickButton={()=>{this.sendQuery()}} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            <span style={{marginLeft: \"50px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\"}} options={this.props.sortOptions} onChange={event=>{this.sOrder = JSON.parse(event.target.value)}} />\n            </div>\n        </div>\n    }\n\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){this.props.searchQuery(exportSF, this.sOrder)} \n        else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        this.statusBox.current.style.opacity = \"0\";\n                        setTimeout(()=>{this.setState({visible: false})}, 500);\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.col]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.col]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.col] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.col], limit:10, order: [this.props.col]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.col], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{transition:\"box-shadow 0.3s\", margin: \"10px 5px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                    this.setState({currentId: targetId, ids: newIds});\n                    this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n                });\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            setTimeout(()=>{\n                let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView({behavior: \"smooth\", block: \"center\"})};\n            }, 300);\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\nimport { faColumns, faImage, faKeyboard, faBars, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { arachne } from \"./arachne\";\nimport { parseHTML } from \"./elements\";\n\nclass Argos extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {mode: \"img\", imgURL: null, fullTextEdit: false, scanLst: [], scanLstSelected: []};\n        window.addEventListener(\"keyup\", e=>{\n            if(e.keyCode===37&&this.state.cIndex>0){\n                // left\n                this.setState({cIndex: this.state.cIndex-1});\n            } else if (e.keyCode===39&&this.state.cIndex<this.state.scanLst.length-1){\n                // right\n                this.setState({cIndex: this.state.cIndex+1})\n            }\n        });\n    }\n    render(){\n        let contentMenuLst = [];\n        if(this.state.contentMenu){\n            let i = -1;\n            for(const scan of this.state.scanLst){\n                i ++;\n                contentMenuLst.push(<li key={i}>{scan.full_text?<FontAwesomeIcon icon={faKeyboard} style={{fontSize: \"10px\", margin: \"0 5px 1px 0\"}} />:null}<a id={i} style={{color: this.state.scanLstSelected.includes(scan.id)?\"red\":\"inherit\"}} onClick={e=>{\n                    this.setState({cIndex: parseInt(e.target.id), contentMenu: false});\n                }}>{isNaN(scan.filename)?scan.filename:parseInt(scan.filename)}</a></li>);\n            }\n        }\n        let mainStyle = {\n            margin: \"20px 40px 65px 40px\",\n            display: \"grid\",\n            gridTemplateColumns: this.state.mode===\"img\"||this.state.mode===\"text\"?\"1fr\":\"1fr 1fr\",\n            gridTemplateRows: \"1fr\",\n            columnGap: \"20px\",\n        }\n        let fullTxtBox = <i>Kein Fließtext verfügbar.</i>;\n        if(this.state.txt&&!this.state.fullTextEdit){\n            fullTxtBox = <span style={{fontSize: \"18px\"}} dangerouslySetInnerHTML={parseHTML(this.state.txt.replace(new RegExp(`${this.state.currentQuery}`, \"g\"), `<mark>${this.state.currentQuery}</mark>`).replace(/\\n/g, \"<br />\"))}></span>;\n        } else if(this.state.fullTextEdit){\n            fullTxtBox = <textarea style={{outline: \"none\", resize: \"none\", width: \"100%\", height: \"500px\"}} value={this.state.txt?this.state.txt:\"\"} onChange={e=>{this.setState({txt: e.target.value})}} onBlur={e=>{\n                this.props.status(\"saving\");\n                arachne.scan.save({id: this.state.scanLst[this.state.cIndex].scan_id, full_text: e.target.value});\n                this.props.status(\"saved\");\n            }}></textarea>;\n        }\n        return <div>\n            <main style={mainStyle}>\n                {this.state.imgURL&&(this.state.mode===\"img\"||this.state.mode===\"split\")&&<div style={{boxShadow: \"0 2px 3px gray\"}}><img src={this.state.imgURL} style={{width: \"100%\"}}></img></div>}\n                {(this.state.mode===\"text\"||this.state.mode===\"split\")&&<div style={{boxShadow: \"0 2px 3px gray\", padding: \"20px 40px\", position: \"relative\"}}>\n                    <div className=\"minorTxt\" style={{textAlign: \"center\", marginBottom: \"30px\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.title)}></span><span style={{float: \"right\"}}>{this.state.page}</span></div>\n                    \n                    <div style={{textAlign: \"justify\"}}>{fullTxtBox}</div>{arachne.access(\"e_edit\")?< FontAwesomeIcon icon={faEdit} style={{position: \"absolute\", \"bottom\": \"10px\", right: \"10px\", color: \"gray\"}} onClick={()=>{if(this.state.fullTextEdit){this.setState({fullTextEdit: false})}else{this.setState({fullTextEdit: true})}}} />:null}\n                    </div>\n                    }\n                    {this.state.cIndex>0?<div className=\"leftArrow\" onClick={()=>{this.setState({cIndex: this.state.cIndex-1})}}></div>:null}\n                    {this.state.cIndex<this.state.scanLst.length-1?<div className=\"rightArrow\"  onClick={()=>{this.setState({cIndex: this.state.cIndex+1})}}></div>:null}\n            </main>\n            {this.state.contentMenu?<div className=\"mainColors\" style={{position: \"fixed\", top: \"0\", left: \"0\", bottom: \"0\", width: \"150px\", boxShadow: \"0 0 2px gray\", padding: \"20px 20px\", overflow: \"scroll\"}}>\n                <h4>Inhalt</h4>\n                <ul style={{listStyleType: \"none\", margin: \"0\", padding: \"0\"}}>{contentMenuLst}</ul>\n                <div style={{height: \"70px\"}}></div>\n                <div className=\"mainColors\" style={{position: \"fixed\", bottom: \"42px\", left: \"0\", width: \"180px\", borderTop: \"0.5px solid gray\", padding: \"4px 5px\"}}><input type=\"text\" style={{margin: \"3px 1px\", padding: \"0\", boxShadow: \"none\", width: \"170px\"}} onKeyUp={async e=>{\n                    if(e.keyCode===13){\n                        const results = await arachne.scan_lnk.search([{c: \"edition_id\", o: \"=\", v: this.props.edition},{c: \"full_text\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                        this.setState({currentQuery: e.target.value, scanLstSelected: results.map(r => r.id)});\n                    }\n                }} /></div>\n            </div>:null}\n            <footer className=\"mainColors\" style={{position: \"fixed\", bottom: \"0\", right: \"0\", left: \"0\", boxShadow: \"0 0 2px gray\", display: \"grid\", gridTemplateColumns:\"1fr 1fr\"}}>\n                <div><FontAwesomeIcon icon={faBars} style={{fontSize: \"30px\", margin: \"5px 0 2px 25px\"}} onClick={()=>{this.state.contentMenu?this.setState({contentMenu: false}):this.setState({contentMenu: true})}} /></div>\n                <div style={{textAlign: \"right\"}}>\n                    <FontAwesomeIcon icon={faImage} style={{fontSize: \"35px\", margin: \"5px 25px 3px 0\"}} onClick={()=>{this.setState({mode:\"img\"})}} />\n                    <FontAwesomeIcon icon={faColumns} style={{fontSize: \"30px\", margin: \"0 20px 5px 0\"}} onClick={()=>{this.setState({mode:\"split\"})}} />\n                    <FontAwesomeIcon icon={faKeyboard} style={{fontSize: \"33px\", margin: \"0 30px 4px 0\"}} onClick={()=>{this.setState({mode:\"text\"})}} />\n                </div>\n            </footer>\n        </div>;\n    }\n    componentDidMount(){\n        const setupEdition = async () => {\n            // get edition\n            const edition = await arachne.edition.get({id: this.props.edition});\n\n            // get scans\n            let scanLst = await arachne.scan_lnk.get({edition_id: this.props.edition});\n            scanLst = scanLst.sort((a, b) => b.filename < a.filename);\n            const title = `${edition[0].opus.replace(\" <cit></cit>\", \"\")} (${edition[0].label})`;\n            this.setState({title: title, edition: edition[0], scanLst: scanLst, cIndex: scanLst.length-1});\n        }\n        setupEdition();\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.cIndex!=this.state.cIndex){\n            // update current page!\n            arachne.getScan(this.state.scanLst[this.state.cIndex].scan_id).then(img=>{\n                this.setState({imgURL: img, txt: this.state.scanLst[this.state.cIndex].full_text, page: isNaN(this.state.scanLst[this.state.cIndex].filename)?this.state.scanLst[this.state.cIndex].filename:parseInt(this.state.scanLst[this.state.cIndex].filename)});\n            }).catch(e=>{throw e});\n            \n        }\n    }\n}\n\nexport { Argos };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Argos } from \"./argos.js\";\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {mode: \"login\", status: {}};\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n        this.tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\"];\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = <Argos edition={this.state.edition} status={(type,value)=>{this.newStatus(type, value)}} />;\n            return (\n                <div>\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: \"0 1.2px 6px #3c6e71\"\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: \"0 1.2px 6px #3c6e71\"\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        // set edition/page\n        const urlQueries = new URLSearchParams(window.location.search);\n        this.setState({\n            edition: urlQueries.get(\"edition\")?urlQueries.get(\"edition\"):1,\n            page: urlQueries.get(\"page\")?urlQueries.get(\"page\"):null\n        });\n        // check session\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){\n                await arachne.open(this.tbls);\n                this.setState({mode: \"main\"});\n            }\n        }\n        checkSession();\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        if(email!==\"\"&&password!==\"\"&&await arachne.login(email, password, this.tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}