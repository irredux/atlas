{"version":3,"sources":["arachne.js","elements.js","argos.js","overview.js","index.js"],"names":["ArachneTable","tblName","url","key","this","a","options","search","c","o","v","query","qLst","push","JSON","stringify","count","limit","offset","select","order","encodeURI","fetch","headers","then","re","status","json","errorEvent","CustomEvent","detail","method","window","dispatchEvent","rowId","data","Array","isArray","body","response","newValues","rId","id","parseInt","text","arachne","location","origin","me","localOptions","localStorage","getItem","parse","z_width","name","value","setItem","user","password","tbls","open","getUser","reUser","selectKey","navigator","appVersion","indexOf","tables","tbl","newForm","alert","mode","rights","every","r","access","includes","scanId","blob","newImg","nURL","URL","createObjectURL","SearchInput","props","state","itemId","item","searchOptions","className","style","boxShadow","marginRight","marginBottom","padding","width","border","color","onChange","e","setState","target","type","placeholder","onKeyUp","keyCode","clickButton","icon","faMinusCircle","onClick","removeSearchFields","prevProps","prevState","changeItem","React","Component","Status","visible","statusBox","createRef","timeOutHandle","statusTxt","statusSymbol","display","backgroundColor","fontSize","faSyncAlt","spin","clearTimeout","faDog","setTimeout","current","opacity","faCat","faCheckCircle","faTimesCircle","faRecycle","faTrashAlt","faCloudMoon","ref","position","bottom","left","transition","borderRadius","overflow","zIndex","top","SelectMenu","op","classList","event","pointerEvents","textAlign","margin","faAngleDown","SelectorWrapper","isSelected","marginLeft","height","z_height","children","element","stopPropagation","onMouseUp","onSelect","shift","shiftKey","meta","metaKey","ctrl","ctrlKey","Selector","multiSelect","userSelect","msUserSelect","WebkitUserSelect","currentId","ids","Children","map","child","keys","selectCallback","targetId","inRange","newIds","forEach","filter","preset","el","document","querySelector","scrollIntoView","behavior","block","parseHTML","i","replaceEntities","__html","DOMPurify","sanitize","replace","ADD_TAGS","Argos","mounted","imgURL","fullTextEdit","scanLst","zoomFactor","scanLstSelected","contentMode","scansInPath","allScansPresetSelection","allScansSelection","ocrReady","work","displayBibliography","addEventListener","tagName","cIndex","length","contentMenuLst","contentMenu","scan","full_text","faKeyboard","isNaN","filename","mainStyle","gridTemplateColumns","gridTemplateRows","columnGap","fullTxtBox","txt","fullTxt","RegExp","currentQuery","console","log","colDelimiter","dangerouslySetInnerHTML","substring","outline","resize","onBlur","save","scan_id","sideMenu","right","faEdit","listStyleType","borderTop","scan_lnk","edition","results","allScanLst","allScan","paddingBottom","borderBottom","delete","newLinks","edition_id","reload","float","selection","getScan","img","catch","currentPage","src","title","page","faBars","opus","faGlasses","confirm","worker","recognize","faImage","faColumns","min","max","bibliography","get","work_id","sort","b","label","path","setupEdition","scans","newAllScansPresetSelection","getAllScans","Overview","useState","workLst","useEffect","opera_maiora","getAll","operaMaiora","opera_minora","slice","getData","App","site","newStatus","main","setSite","gridColumn","gridRow","gridArea","createFirstName","createLastName","createEmail","createPassword","first_name","last_name","email","createAccount","login","urlQueries","URLSearchParams","checkSession","res","close","Date","now","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d00fb8f.chunk.js","sourcesContent":["// VERSION 1 - 03.11.2021\n\nclass ArachneTable {\n    constructor(tblName, url, key){\n        this.tblName = tblName;\n        this.url = url;\n        this.key = key;\n    }\n    async getAll(options={}){\n        return await this.search([{c:\"id\", o:\">\", v:0}], options);\n    }\n    async get(query, options={}){\n        let qLst = [];\n        for(const key in query){qLst.push({c: key, o:\"=\", v:query[key]})}\n        return await this.search(qLst, options);\n    }\n    async search(query, options={}){\n        // options = {count:true|false, limit:100, offset:100, select:[], order:[]}\n        let url = `${this.url}/data/${this.tblName}?query=${JSON.stringify(query)}`;\n        if(options.count===true){url += \"&count=1\"}\n        if(options.limit){url += \"&limit=\"+options.limit}\n        if(options.offset){url += \"&offset=\"+options.offset}\n        if(options.select){url += \"&select=\"+JSON.stringify(options.select)}\n        if(options.order){url += \"&order=\"+JSON.stringify(options.order)}\n        url = encodeURI(url);\n        return await fetch(url, {headers: {\"Authorization\": `Bearer ${this.key}`}})\n        .then(re => {\n            if(re.status === 200){return re.json()}\n            else{\n                let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"search\", status: re.status}});\n                window.dispatchEvent(errorEvent);\n            }\n        });\n    }\n    async delete(rowId){\n        let url = `${this.url}/data/${this.tblName}/${rowId}`;\n        let data = null;\n        if(Array.isArray(rowId)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n            data = JSON.stringify(rowId);\n        }\n        const response = await fetch(url, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Bearer ${this.key}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: data\n        });\n        if(response.status===200){\n            return true;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"delete\", status: response.status}});\n            window.dispatchEvent(errorEvent);\n        }\n    }\n\n    async save(newValues){\n        // newValues is an object containing col/values as key/value pairs.\n        // when no id is given, a new entry will be created.\n        // for batch saving: newValues = [{col: val}, {col. val}, ...]\n        let method = \"POST\";\n        let url = \"\";\n        let rId = 1;\n        if(Array.isArray(newValues)){\n            url = `${this.url}/data_batch/${this.tblName}`;\n        } else {\n            url = `${this.url}/data/${this.tblName}`;\n            rId = newValues.id;\n            if(newValues.id!=null){\n                url += `/${newValues.id}`;\n                method = \"PATCH\";\n                delete newValues.id;\n            }\n        }\n        const response = await fetch(url, {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.key}`\n            },\n            body: JSON.stringify(newValues)\n        });\n        if(response.status===201 && method===\"POST\"){\n            if(Array.isArray(newValues)){return await rId}\n            else {return parseInt(await response.text())}\n        } else if(response.status===200 && method===\"PATCH\"){\n            return rId;\n        } else {\n            let errorEvent = new CustomEvent(\"arachneError\", {detail: {method: \"save\", status: response.status}});\n                window.dispatchEvent(errorEvent);\n            //throw new Error(`ARACHNE: entry not saved. Status: ${response.status}`);\n        }\n    }\n}\n\nclass Arachne {\n    constructor(url=\"\"){\n        if(url===\"\"&&window.location.origin===\"http://localhost:3000\"){this.url = \"http://localhost:8080\"}\n        else{this.url=url}\n        this.key = null;\n        this.me = null;\n        \n        // load local options for displaying in current browser\n        let localOptions = localStorage.getItem(\"dmlwOptions\");\n        if(localOptions){\n            localOptions = JSON.parse(localOptions);\n            this.options = {z_width: localOptions.z_width?localOptions.z_width:500};\n        } else {\n            this.options = {z_width: 500};\n        }\n    }\n    setOptions(name, value){\n        this.options[name] = value;\n        localStorage.setItem(\"dmlwOptions\", JSON.stringify(this.options))\n    }\n    async login(user, password, tbls=null){\n        // opens a connection to the server and creates a session key\n        let re = await fetch(this.url+\"/session\", {\n            \"method\": \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            \"body\": JSON.stringify({user: user, password: password})\n        });\n        if(re.status === 200){\n            this.key = await re.text();\n            return this.open(tbls);\n        }else{\n            return false;\n        }\n    }\n    async open(tbls=null){\n        const reUser = await this.getUser();\n        if(reUser){\n            this.me = reUser;\n            this.me.selectKey = 'ctrl';\n            if (navigator.appVersion.indexOf('Mac') > -1){this.me.selectKey = 'cmd';}\n        }\n        else {return false;}\n\n        if(tbls == null){tbls = await this.tables()}\n        for(const tbl of tbls){this[tbl] = new ArachneTable(tbl, this.url, this.key)}\n        return true;\n    }\n    async close(){\n        this.key = null;\n    }\n    async getUser(){\n        const reUser = await fetch(this.url+\"/session\",\n             {headers: {\n                 \"Authorization\": `Bearer ${this.key}`\n                }});\n        if(reUser.status === 200){return await reUser.json();}\n        else {return false;}\n    }\n    async createAccount(data){\n        const re = await fetch(this.url+\"/data/user\", {method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(data)});\n        return re.status;\n    }\n\n    async importScans(newForm){\n        const re = await fetch(this.url+\"/file/scan\", {method: \"POST\", \n        headers: {\"Authorization\": `Bearer ${this.key}`},\n            body: newForm\n        });\n        return {status: re.status, body: await re.json()};\n    }\n    async importZettel(newForm){\n        const re = await fetch(this.url+\"/file/zettel\", {method: \"POST\", body: newForm,\n            headers: {\"Authorization\": `Bearer ${this.key}`}});\n        if(re.status != 201){\n            alert(\"Ein Fehler ist aufgetreten! Bitte überprüfen Sie die hochgeladenen Zettel.\");\n            throw \"Error: Fehler beim Zettel-Upload!\";\n        }\n    }\n    async exec(mode){\n        const re = await fetch(this.url+\"/exec/\"+mode, {method: \"GET\", \n        headers: {\"Authorization\": `Bearer ${this.key}`}\n        });\n        return re.status;\n    }\n    access(rights){\n        if(this.me){\n            if(typeof rights === \"string\"){rights=JSON.parse(`[\"${rights}\"]`)}\n            return rights.every(r => this.me.access.includes(r));\n        }else{return false;}\n    }\n    async getScan(scanId){\n        const newImg = await fetch(`${this.url}/file/scan/${scanId}`, {headers: {\"Authorization\": `Bearer ${this.key}`}}).then(re => re.blob());\n        let nURL = URL.createObjectURL(newImg);\n        return nURL;\n    }\n}\n\nlet arachne = new Arachne();\n\nexport { arachne };","// Version 1.1 - 27.01.2022\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { faPlusCircle, faMinusCircle, faAngleUp, faAngleDown, faCheckCircle, faCloudMoon, faTimesCircle, faSyncAlt, faCat, faDog, faRecycle, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DOMPurify from \"dompurify\";\n\nimport { arachne } from \"./arachne.js\";\n\nclass SearchInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.itemId,\n            c:  this.props.c,\n            o:  this.props.o,\n            v: this.props.v,\n        }\n        this.item = props.item;\n    }\n    render(){\n        let options = [];\n        for(const o of this.props.searchOptions){\n            options.push(<option key={o[0]} value={o[0]}>{o[1]}</option>);\n        }\n        return (\n        <div className=\"searchFields mainColors\" style={{boxShadow: \"rgb(217, 217, 217) 0px 0px 2px\", marginRight: \"10px\", marginBottom: \"10px\", padding: \"10px 15px 10px 15px\"}}>\n            <select style={{width: \"100px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.c} onChange={e=>{this.setState({c: e.target.value})}}>\n                {options}\n            </select>\n            <select style={{width: \"40px\", marginRight: \"0px\", border: \"none\", color: \"#284b63\"}} value={this.state.o} onChange={e=>{this.setState({o: e.target.value})}}>\n                <option value=\"=\">=</option>\n                <option value=\"!=\">≠</option>\n                <option value=\">\">&gt;</option>\n                <option value=\">=\">≥</option>\n                <option value=\"<\">&lt;</option>\n                <option value=\"<=\">≤</option>\n            </select>\n            <input type=\"text\" placeholder=\"...\"  style={{width: \"100px\", marginRight: \"22px\", border:\"none\"}} onKeyUp={e=>{if(e.keyCode===13){this.props.clickButton()}}} value={this.state.v} onChange={e=>{this.setState({v: e.target.value})}} />\n            <FontAwesomeIcon color=\"LightGray\" icon={faMinusCircle} onClick={\n                () => {this.props.removeSearchFields(this.props.itemId)}} />\n        </div>\n        );\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.c!=this.state.c||prevState.o!=this.state.o||prevState.v!=this.state.v){\n            this.props.changeItem(this.state);\n        }\n    }\n}\nclass SearchBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.queryTxt = \"\";\n        this.state = {sOrder: null, nextID: 1, searchFields: []};\n    }\n    render(){\n        let cSF = [];\n        for(const sF of this.state.searchFields){\n            cSF.push(<SearchInput searchOptions={this.props.searchOptions} removeSearchFields={id => {this.removeSearchFields(id)}} itemId={sF.id} key={sF.id} c={sF.c} o={sF.o} v={sF.v} clickButton={()=>{this.sendQuery()}} changeItem={item=>{\n                this.setState({searchFields: this.state.searchFields.map(s=>{\n                    if(s.id===item.id){return item}else{return s}\n                })});\n            }} />);\n        }\n        return <div style={{gridArea: this.props.gridArea}}>\n            <div className=\"searchBox\">\n                {cSF}\n                <FontAwesomeIcon color=\"LightGray\" icon={faPlusCircle} style={{color: \"var(--mainColor)\", position: \"relative\", top: \"-5px\", fontSize: \"25px\"}}  onClick={() => {this.addSearchFields()}}\n                 />\n            </div>\n            <div style={{float: \"right\", marginTop: \"10px\", marginRight: \"20px\"}}>\n            <input style={{marginRight: \"30px\"}} type=\"button\" value=\"suchen\" onClick={() => {this.sendQuery()}} />\n            {this.props.presetModal}\n            <span style={{marginLeft: \"30px\", marginRight: \"10px\"}} className=\"minorTxt\">sortieren:</span><SelectMenu style={{display: \"inline-block\", width: \"100px\", padding: \"0px\"}} options={this.props.sortOptions} onChange={event=>{this.setState({sOrder: JSON.parse(event.target.value)})}} />\n            </div>\n        </div>\n    }\n    componentDidMount(){\n        let storedItems = localStorage.getItem(\"searchBox_\"+this.props.boxName);\n        if(this.props.setupItems){\n            this.setState({forceSearch: true, searchFields: this.props.setupItems, nextID: this.props.setupItems.length});\n        } else if(storedItems){\n            storedItems = JSON.parse(storedItems);\n            this.setState({forceSearch: true, searchFields: storedItems[0], nextID: storedItems[1] , sOrder: storedItems[2]});\n        } else {\n            this.setState({searchFields: [{id: 0, c:\"lemma\", o:\"=\", v:\"\"}]});\n        }\n\n    }\n    componentDidUpdate(prevProps){\n        if(this.state.forceSearch){\n            this.sendQuery();\n            this.setState({forceSearch: false});\n        } else if (prevProps.setupItems!=this.props.setupItems){\n            let newNextID = this.state.nextID;\n            const newItems = this.props.setupItems.map(i => {i[\"id\"]=newNextID;newNextID++;return i;})\n            this.setState({forceSearch: true, searchFields: newItems, nextID: newNextID+1});\n        }\n    }\n    removeSearchFields(id){\n        const nSearchFields = this.state.searchFields.filter(s => s.id!==id);\n        this.setState({searchFields: nSearchFields});\n    }\n    addSearchFields(){\n        let nSearchFields = this.state.searchFields;\n        nSearchFields.push({\n            id: this.state.nextID,\n            c: \"lemma\",\n            o: \"=\",\n            v: \"\"\n        });\n        this.setState({nextID: (this.state.nextID+1), searchFields: nSearchFields});\n    }\n    sendQuery(){\n        let exportSF = [];\n        const searchFields = document.querySelectorAll(\".searchFields\");\n        for(const sF of searchFields){\n            if(sF.children[2].value !== \"\"){\n                exportSF.push({\n                    c: sF.children[0].value,\n                    o: sF.children[1].value,\n                    v: sF.children[2].value\n                });\n            }\n        }\n        if(exportSF.length > 0){\n            localStorage.setItem(\"searchBox_\"+this.props.boxName, JSON.stringify([this.state.searchFields, this.state.nextID, this.state.sOrder]));\n            this.props.searchQuery(exportSF, this.state.sOrder)\n        } else {alert(\"Geben Sie einen Suchtext ein!\")}\n    }\n}\n\nclass Navigator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {currentPage: this.props.currentPage};\n    }\n    render(){\n        /* <span contentEditable=\"true\" onChange={e=>{\n                        console.log(\"blupp\", e.target.textContent);\n                    }}>{this.props.currentPage}</span> */\n        return <div id=\"navBox\">\n                <div id=\"navScreen\" onClick={()=>{window.scrollTo(0,0)}}><FontAwesomeIcon icon={faAngleUp} /></div>\n                <div id=\"navPage\">\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(-1)}}>&lt;</span>\n                    <span id=\"navSelect\"> <input style={{\n                        width: \"30px\",\n                        border: \"none\",\n                        boxShadow: \"none\",\n                        padding: 0,\n                        margin: 0,\n                        textAlign: \"right\"\n                    }}\n                    type=\"text\" value={this.state.currentPage} onChange={e=>{this.setState({currentPage: e.target.value})}} onBlur={e=>{\n                        if(!isNaN(e.target.value)){\n                            window.scrollTo(0, 0);\n                            this.loadPage(parseInt(e.target.value)-this.props.currentPage);\n                        } else {\n                            this.setState({currentPage: this.props.currentPage});\n                        }\n                    }} /> von {this.props.maxPage}</span>\n                    <span onClick={()=>{window.scrollTo(0,0);this.loadPage(1)}}>&gt;</span>\n                </div>\n            </div>;\n        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.currentPage!=this.props.currentPage){\n            this.setState({currentPage: this.props.currentPage})\n        }\n    }\n    loadPage(move){\n        if(this.props.currentPage+move>0&&this.props.currentPage+move<=this.props.maxPage){\n            this.props.loadPage(this.props.currentPage+move);\n        } else {\n            this.setState({currentPage: this.props.currentPage});\n        }\n    }\n}\nclass Status extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {id: this.props.status.id, visible: false}\n        this.statusBox = React.createRef();\n        this.timeOutHandle = null;\n    }\n    render(){\n        if(this.state.visible){\n            let style={\n                position: \"fixed\",\n                bottom: \"30px\",\n                left: \"30px\",\n                /*backgroundColor: \"white\",*/\n                boxShadow: \"0 2px 5px #d9d9d9\",\n                transition: \"opacity 0.5s\",\n                opacity: \"1\",\n                borderRadius: \"3px\",\n                overflow: \"hidden\",\n                zIndex: 9000000\n            };\n            let statusTxt = \"\";\n            let statusSymbol = null;\n            switch(this.state.type){\n                case \"searching\":\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    statusTxt = \"Suche läuft...\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    break;\n                case \"found\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faDog} />;\n                    statusTxt = \"Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 3000);\n                    break;\n                case \"notFound\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#353535\", fontSize:\"40px\"}} icon={faCat} />;\n                    statusTxt = \"Keine Einträge gefunden!\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 3000);\n                    break;\n                case \"saved\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#4CB944\", fontSize:\"40px\"}} icon={faCheckCircle} />;\n                    statusTxt = \"Speichern erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 2000);\n                    break;\n                case \"error\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTimesCircle} />;\n                    statusTxt = \"Ein Fehler ist aufgetreten.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 3000);\n                    break;\n                case \"saving\":\n                    statusTxt = \"Einträge werden gespeichert.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faSyncAlt} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleting\":\n                    statusTxt = \"Eintrag wird gelöscht.\";\n                    statusSymbol = <div style={{display: \"inline-block\", backgroundColor:\"#246EB9\"}}><FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", fontSize:\"40px\"}} icon={faRecycle} spin /></div>;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = null;\n                    break;\n                case \"deleted\":\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F06543\", fontSize:\"40px\"}} icon={faTrashAlt} />;\n                    statusTxt = \"Löschen erfolgreich.\";\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 2000);\n                    break;\n                default:\n                    statusTxt = \"Programm arbeitet.\";\n                    statusSymbol = <FontAwesomeIcon color=\"#FDFFFC\" style={{padding: \"3px\", backgroundColor:\"#F5EE9E\", fontSize:\"40px\"}} icon={faCloudMoon} />;\n                    if(this.timeOutHandle!=null){clearTimeout(this.timeOutHandle)};\n                    this.timeOutHandle = setTimeout(()=>{\n                        if(this.statusBox.current!=null){\n                            this.statusBox.current.style.opacity = \"0\";\n                            setTimeout(()=>{this.setState({visible: false})}, 500);\n                        }\n                    }, 2000);\n            }\n            if(this.state.value!=null){statusTxt=this.state.value}\n            return <div ref={this.statusBox} style={style}  className=\"mainColors\">{statusSymbol}<span style={{position:\"relative\", top: \"-10px\", padding: \"10px 20px\"}}>{statusTxt}</span></div>;\n        } else {\n            return null;\n        }\n    }\n    componentDidUpdate(){\n        if(this.props.status.id!=this.state.id){\n            this.setState({id: this.props.status.id, visible: true, type: this.props.status.type, value: this.props.status.value});\n        }\n    }\n}\nclass SelectMenu extends React.Component{\n    render(){\n        let options = [];\n        for(const op of this.props.options){\n            options.push(<option key={op[0]} value={op[0]}>{op[1]}</option>)\n        }\n        return (\n        <div style={this.props.style}>\n            <select className={this.props.classList} value={this.props.value} style={{width:\"100%\"}} onChange={event=>{this.props.onChange(event)}}>\n                {options}\n            </select>\n            <div style={{pointerEvents:\"none\", textAlign:\"right\", margin: \"-26px 10px 0 0\"}}><FontAwesomeIcon color=\"LightGray\" icon={faAngleDown} /></div>\n        </div>);\n    }\n}\nclass AutoComplete extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options: [],\n            currentOptionId: null,\n            userSelected: false\n        };\n    }\n    render(){\n        let optionsBoxStyle = {\n            position: \"absolute\",\n            boxShadow: \"0 1px 5px #d9d9d9\",\n            padding: \"10px 15px\",\n            zIndex: 1000000\n        };\n        let optionsElement = [];\n        if(this.state.options.length>0&&this.state.userSelected===false){\n            let i = -1;\n            for(const option of this.state.options){\n                i++;\n                optionsElement.push(<div key={option.id} id={i} data-id={option.id} data-value={option[this.props.returnCol]} onClick={e=>{this.props.onChange(e.target.dataset.value, e.target.dataset.id);this.setState({userSelected: true})}} style={{cursor: \"default\", color: this.state.currentOptionId===i?\"#2364AA\":\"inherit\"}}>{option[this.props.returnCol]}</div>);\n            }\n        }\n        return <div>\n            <input type=\"text\" value={this.props.value} onBlur={()=>{setTimeout(()=>{this.setState({userSelected: true})},300)}} onChange={e=>{this.changeInputValue(e.target.value)}} onKeyDown={e=>{this.changeSelectedOption(e)}} />\n            {optionsElement.length>0?<div style={optionsBoxStyle} className=\"mainColors\">{optionsElement}</div>:null}\n        </div>;\n    }\n    async changeInputValue(newValue){\n        this.props.onChange(newValue, null);\n        if(newValue!=\"\"){\n            let query = {};\n            query[this.props.searchCol] = newValue+\"*\";\n            const newOptions = await arachne[this.props.tbl].get(query, {select: [\"id\", this.props.returnCol], limit:10, order: [this.props.searchCol]});\n            this.setState({currentOptionId: newOptions.length>0?0:null, options: newOptions, userSelected: false});\n        } else {\n            // empty string;\n            this.setState({currentOptionId: null, options: [], userSelected: false});\n        }\n    }\n    changeSelectedOption(e){\n        if(e.keyCode===38&&this.state.currentOptionId>0){\n            // up\n            this.setState({currentOptionId: this.state.currentOptionId-1});\n        } else if (e.keyCode===40&&this.state.currentOptionId<this.state.options.length-1){\n            // down\n            this.setState({currentOptionId: this.state.currentOptionId+1});\n        } else if (e.keyCode===13){\n            // enter\n            this.props.onChange(this.state.options[this.state.currentOptionId][this.props.returnCol], this.state.options[this.state.currentOptionId].id);\n            this.setState({userSelected: true});\n        }\n    }\n}\n\nclass SelectorWrapper extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return <div className={\"selectWrapper\"+(this.props.isSelected===\"1\"?\" selMarked\":\"\")} style={{display:\"block\", transition:\"box-shadow 0.3s\", margin: \"10px 5px\", marginLeft: \"auto\", marginRight: \"auto\", width: arachne.options.z_width+\"px\", height: arachne.options.z_height+\"px\"}} id={this.props.children.props.id} ref={this.element} onClick={event=>{event.stopPropagation();/*console.log(this.props.children.props)*/}} onMouseUp={event=>{this.props.onSelect(this.props.children, {shift: event.shiftKey, meta: event.metaKey, ctrl: event.ctrlKey})}}>{this.props.children}</div>;\n    }\n}\nclass Selector  extends React.Component{\n    constructor(props){\n        super(props);\n        let style = {display: \"block\", textAlign: \"center\"}\n        if(this.props.multiSelect){\n            style.userSelect = 'none';\n            style.msUserSelect = 'none';\n            style.WebkitUserSelect = 'none';\n        }\n        this.state = {currentId: 0, ids: [], style: style};\n        /*\n        if(onEdit!=null){this.ctn.querySelectorAll(selector).forEach(function(e){\n                e.classList.add(\"selEditable\");\n        })}*/\n    }\n    render(){\n        let children = React.Children.map(this.props.children, child => {\n            return <SelectorWrapper isSelected={this.state.ids.includes(child.props.id)?\"1\":\"0\"} onSelect={(e, keys)=>{this.select(e, keys)}}>{child}</SelectorWrapper>;\n        })\n        return <div\n            style={this.state.style}\n            className={this.props.className}\n            onClick={\n                ()=>{\n                    this.select(null, {});\n                }}\n        >\n        {children}\n        </div>;\n    }\n    select(element, keys){\n        if(element===null){\n            this.setState({currentId: 0, ids: []});\n            this.props.selectCallback(null, {currentId: 0, ids: []});\n        } else {\n            const targetId = element.props.id;\n            if(this.props.multiSelect&&keys.shift){\n                //multiselect\n                let inRange = false;\n                let newIds = [];\n                React.Children.forEach(this.props.children, child => {\n                    if(inRange==false&&(child.props.id===targetId||child.props.id===this.state.currentId)){\n                        // start of range\n                        inRange = true;\n                        newIds.push(child.props.id);\n                    } else if(inRange&&(child.props.id!==targetId&&child.props.id!==this.state.currentId)){\n                        // in range\n                        newIds.push(child.props.id);\n                    } else if(inRange){\n                        // end of range\n                        inRange = false;\n                        newIds.push(child.props.id);\n                    }\n                });\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else if(this.props.multiSelect&&(arachne.me.selectKey===\"cmd\"&&keys.meta||arachne.me.selectKey===\"ctrl\"&&keys.ctrl)){\n                // select/deselect while keeping selection\n                let newIds = this.state.ids;\n                if(newIds.includes(targetId)){\n                    newIds = newIds.filter(itemId => itemId!=targetId);\n                } else {newIds.push(targetId)}\n                this.setState({currentId: targetId, ids: newIds});\n                this.props.selectCallback(element, {currentId: targetId, ids: newIds});\n            } else {\n                // single select\n                this.setState({currentId: targetId, ids: [targetId]});\n                this.props.selectCallback(element, {currentId: targetId, ids: [targetId]});\n            }\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.preset!=this.props.preset){\n            //console.log(this.state.currentId);\n            setTimeout(()=>{\n                let el = document.querySelector(\"div.selMarked\");\n            if(el){el.scrollIntoView({behavior: \"smooth\", block: \"center\"})};\n            }, 300);\n            this.setState({ids: this.props.preset});\n        }\n    }\n}\n\nfunction parseHTML(i, replaceEntities=true){\n    // parses masked HTML tags and purifies them.\n    if(i==null){\n        return {__html: null};\n    }else{\n        if(replaceEntities){\n            return {__html: DOMPurify.sanitize(i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"), { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n        }else{\n            return {__html: DOMPurify.sanitize(i, { ADD_TAGS: [\"aut\", \"gruen\", \"gelb\", \"rot\", \"blau\"] })};\n        }\n\n    }\n}\nfunction parseHTMLPreview(i){\n    // creates preview of HTML tags.\n    if(i==null){\n        return \"\";\n    }else{\n        return i.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n}\nexport { Navigator, parseHTML, parseHTMLPreview, SearchBox, Status, SelectMenu, Selector, AutoComplete };","import React from \"react\";\nimport { faColumns, faImage, faKeyboard, faBars, faEdit, faGlasses, faBook, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n//import { createWorker } from \"tesseract.js\";\n\nimport { arachne } from \"./arachne\";\nimport { Selector, parseHTML } from \"./elements\";\n\nclass Argos extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            mounted: false,\n            mode: \"img\",\n            imgURL: null,\n            fullTextEdit: false,\n            scanLst: [],\n            zoomFactor: 100,\n            scanLstSelected: [],\n            contentMode: \"pages\",\n            scansInPath: [],\n            allScansPresetSelection: [],\n            allScansSelection: [],\n            ocrReady: false,\n            work: {},\n            displayBibliography: false,\n        };\n        window.addEventListener(\"keyup\", e=>{\n            if(e.target.tagName!=\"TEXTAREA\"&&e.keyCode===37&&this.state.cIndex>0){\n                // left\n                this.setState({cIndex: this.state.cIndex-1});\n            } else if (e.target.tagName!=\"TEXTAREA\"&&e.keyCode===39&&this.state.cIndex<this.state.scanLst.length-1){\n                // right\n                this.setState({cIndex: this.state.cIndex+1})\n            }\n        });\n        /*this.worker = createWorker({logger: m => console.log(m)});\n        (async ()=>{\n            await this.worker.load();\n            await this.worker.loadLanguage(\"lat\");\n            await this.worker.initialize(\"lat\");\n            this.setState({ocrReady: true});\n        })();*/\n        \n    }\n    render(){\n        let contentMenuLst = [];\n        if(this.state.contentMenu){\n            let i = -1;\n            for(const scan of this.state.scanLst){\n                i ++;\n                contentMenuLst.push(<li key={i}>{scan.full_text?<FontAwesomeIcon icon={faKeyboard} style={{fontSize: \"10px\", margin: \"0 5px 1px 0\"}} />:null}<a id={i} style={{color: this.state.scanLstSelected.includes(scan.id)?\"red\":\"inherit\"}} onClick={e=>{\n                    this.setState({cIndex: parseInt(e.target.id), contentMenu: false});\n                }}>{isNaN(scan.filename)?scan.filename:parseInt(scan.filename)}</a></li>);\n            }\n        }\n        let mainStyle = {\n            position: \"relative\",\n            margin: \"60px 40px 60px 40px\",\n            display: \"grid\",\n            gridTemplateColumns: this.state.mode===\"img\"||this.state.mode===\"text\"?\"1fr\":\"1fr 1fr\",\n            gridTemplateRows: \"1fr\",\n            columnGap: \"20px\",\n        }\n        if(this.state.contentMenu){\n            mainStyle.left = \"150px\";\n        }\n        let fullTxtBox = <i>Kein Fließtext verfügbar.</i>;\n        if(this.state.txt&&!this.state.fullTextEdit){\n            const fullTxt = parseHTML(this.state.txt.replace(new RegExp(`${this.state.currentQuery}`, \"g\"), `<mark>${this.state.currentQuery}</mark>`).replace(/\\n/g, \"<br />\"), false);\n            console.log();\n            const colDelimiter = fullTxt[\"__html\"].indexOf(\"$$$$$\");\n            if(colDelimiter>-1){\n                fullTxtBox = <div style={{position: \"relative\", fontSize: \"18px\"}}>\n                    <div style={{width: \"49%\"}} dangerouslySetInnerHTML={{\"__html\": fullTxt[\"__html\"].substring(0, colDelimiter)}}></div>\n                    <div style={{position: \"absolute\", top: \"0px\", left: \"50%\", width: \"49%\"}} dangerouslySetInnerHTML={{\"__html\": fullTxt[\"__html\"].substring(colDelimiter+9)}}></div>\n                </div>;\n            }else{\n                fullTxtBox = <span style={{fontSize: \"18px\"}} dangerouslySetInnerHTML={fullTxt}></span>;\n            }\n        } else if(this.state.fullTextEdit){\n            fullTxtBox = <textarea style={{outline: \"none\", resize: \"none\", width: \"100%\", height: \"500px\"}} value={this.state.txt?this.state.txt:\"\"} onChange={e=>{this.setState({txt: e.target.value})}} onBlur={e=>{\n                this.props.status(\"saving\");\n                arachne.scan.save({id: this.state.scanLst[this.state.cIndex].scan_id, full_text: e.target.value});\n                this.props.status(\"saved\");\n            }}></textarea>;\n        }\n        let sideMenu = null;\n        if(this.state.contentMode===\"pages\"){\n            sideMenu = <div style={{padding: \"20px\"}}>\n                {arachne.access(\"e_edit\")?<FontAwesomeIcon className=\"editButton\" style={{position: \"absolute\", top: \"10px\", right: \"10px\", fontSize: \"15px\"}} icon={faEdit} onClick={()=>{this.setState({contentMode: \"edit\"})}} />:null}\n                <h4>Inhalt</h4>\n                <ul style={{listStyleType: \"none\", margin: \"0\", padding: \"0\"}}>{contentMenuLst}</ul>\n                <div style={{height: \"70px\"}}></div>\n                <div className=\"mainColors\" style={{position: \"fixed\", bottom: \"42px\", left: \"0\", width: \"180px\", borderTop: \"0.5px solid gray\", padding: \"4px 5px\"}}><input type=\"text\" style={{margin: \"3px 1px\", padding: \"0\", boxShadow: \"none\", width: \"170px\"}} onKeyUp={async e=>{\n                    if(e.keyCode===13){\n                        const results = await arachne.scan_lnk.search([{c: \"edition_id\", o: \"=\", v: this.props.edition},{c: \"full_text\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                        this.setState({currentQuery: e.target.value, scanLstSelected: results.map(r => r.id)});\n                    }\n                }} /></div>\n            </div>;\n        } else if (this.state.contentMode===\"edit\"){\n            let allScanLst = [];\n            let i = 0;\n            for(const allScan of this.state.scansInPath){\n                i++;\n                allScanLst.push(<div className=\"all_scans_item\" key={i} id={allScan.id}>{allScan.filename}</div>);\n            }\n            sideMenu = <div style={{paddingBottom: \"60px\"}}>                \n                <div style={{position: \"sticky\", top: \"0px\", backgroundColor: \"white\", marginBottom: \"20px\", borderBottom: \"1px solid lightgray\", padding: \"5px 10px 15px 10px\"}}>\n                    <div style={{marginBottom: \"30px\"}}>\n                        {arachne.access(\"e_edit\")?<FontAwesomeIcon className=\"editButton\" style={{position: \"absolute\", top: \"10px\", right: \"10px\", fontSize: \"15px\"}} icon={faEdit} onClick={()=>{this.setState({contentMode: \"pages\"})}} />:null}\n                    </div>\n                    {this.state.allScansSelection.length}\n                    <input type=\"button\" onClick={async ()=>{\n                            this.props.status(\"saving\");\n                            // delete old links\n                            if(this.state.scanLst.length>0){\n                                await arachne.scan_lnk.delete(this.state.scanLst.map(i=>i.id));\n                            }\n                            // create new links\n                            const newLinks = this.state.allScansSelection.map(i=>{return {edition_id: this.props.edition, scan_id: i}});\n                            if(newLinks.length>0){await arachne.scan_lnk.save(newLinks);}                        \n                            this.props.status(\"saved\");\n                            setTimeout(()=>{window.location.reload()},500);\n                            //this.setState({contentMode: \"pages\", contentMenu: false});\n                    }} value=\"speichern\" style={{fontSize: \"15px\", float: \"right\"}} />\n                </div>\n                <Selector multiSelect={true} className=\"all_scans\" selectCallback={\n                    (item, selection)=>{\n                        console.log(\"beep in Selector\");\n                        arachne.getScan(selection.currentId).then(img=>{\n                            this.setState({imgURL: img, txt: \"\"});\n                        }).catch(e=>{throw e});\n                        this.setState({allScansSelection: selection.ids});\n                    }\n                } preset={this.state.allScansPresetSelection} >{allScanLst}</Selector>\n            </div>;\n        }\n        let currentPage = \"\";\n        if(this.state.scanLst.length-1>=this.state.cIndex&&this.state.scanLst[this.state.cIndex]!=null){\n            currentPage = this.state.scanLst[this.state.cIndex].filename;\n            try{currentPage=parseInt(currentPage);}\n            catch{}\n        }\n        return <div>\n            <main style={mainStyle}>\n                {this.state.mounted&&this.state.contentMode===\"pages\"&&this.state.scanLst.length===0?`FEHLER: Keine Seiten für diese Ressource gefunden! Melden Sie die ID ${this.props.edition}.`:null}\n                {this.state.imgURL&&(this.state.mode===\"img\"||this.state.mode===\"split\")&&<div style={{textAlign: \"center\"}}><img src={this.state.imgURL} style={{boxShadow: \"0 2px 3px gray\", width: this.state.mode===\"img\"?this.state.zoomFactor+\"%\":\"100%\"}}></img></div>}\n                {(this.state.mode===\"text\"||this.state.mode===\"split\")&&<div style={{boxShadow: \"0 2px 3px gray\", padding: \"20px 40px\", position: \"relative\"}}>\n                    <div className=\"minorTxt\" style={{textAlign: \"center\", marginBottom: \"30px\"}}><span dangerouslySetInnerHTML={parseHTML(this.state.title)}></span><span style={{float: \"right\"}}>{this.state.page}</span></div>\n                    \n                    <div style={{textAlign: \"justify\"}}>{fullTxtBox}</div>{arachne.access(\"e_edit\")?< FontAwesomeIcon icon={faEdit} style={{position: \"absolute\", \"bottom\": \"10px\", right: \"10px\", color: \"gray\"}} onClick={()=>{if(this.state.fullTextEdit){this.setState({fullTextEdit: false})}else{this.setState({fullTextEdit: true})}}} />:null}\n                    </div>\n                    }\n                    {this.state.cIndex>0?<div className=\"leftArrow\" onClick={()=>{this.setState({cIndex: this.state.cIndex-1})}}></div>:null}\n                    {this.state.cIndex<this.state.scanLst.length-1?<div className=\"rightArrow\"  onClick={()=>{this.setState({cIndex: this.state.cIndex+1})}}></div>:null}\n            </main>\n            {this.state.contentMenu?<div className=\"mainColors\" style={{position: \"fixed\", top: \"43px\", left: \"0\", bottom: \"0\", width: \"200px\", boxShadow: \"0 0 2px gray\", overflow: \"scroll\"}}>\n                {sideMenu}\n            </div>:null}\n            <header className=\"mainColors\" style={{position: \"fixed\", top: \"0\", right: \"0\", left: \"0\", boxShadow: \"0 0 2px gray\", display: \"grid\", gridTemplateColumns:\"1fr 1fr\"}}>\n                <div>\n                    {false?<FontAwesomeIcon icon={faArrowLeft} style={{fontSize: \"30px\", margin: \"5px 0 2px 25px\"}} onClick={()=>{this.props.setSite(\"overview\")}} />:null}\n                    <FontAwesomeIcon icon={faBars} style={{fontSize: \"30px\", margin: \"5px 0 2px 25px\"}} onClick={()=>{this.state.contentMenu?this.setState({contentMenu: false, contentMode: \"pages\"}):this.setState({contentMenu: true})}} />\n                    <div style={{position: \"absolute\", top: \"10px\", left: \"120px\"}}>{this.state.work.id>0?<span dangerouslySetInnerHTML={parseHTML(this.state.work.opus)}></span>:<span style={{color: \"red\", margin: \"0px 25px 0px 0px\"}}>Fehler: Die Ressource ist mit keinem Werk verknüpft!</span>}</div>\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    {false&&this.state.work.id>0?<FontAwesomeIcon icon={faBook} style={{fontSize: \"32px\", margin: \"0px 25px 5px 0px\"}} onClick={async ()=>{if(this.state.displayBibliography){this.setState({displayBibliography: false})}else{this.setState({displayBibliography: true})}}} />:null}\n                    {this.state.ocrReady?<FontAwesomeIcon icon={faGlasses} style={{fontSize: \"25px\", margin: \"0px 25px 6px 0\"}} onClick={async ()=>{\n                        if(this.state.txt===null||window.confirm(\"Ein Volltext ist bereits verfügbar. Soll er überschrieben werden?\")){\n                            this.props.status(\"searching\", \"Text wird konvertiert...\");\n                            const { data: { text } } = await this.worker.recognize(this.state.imgURL);\n                            this.setState({txt: text});\n                            this.props.status(\"found\", \"Text hinzugefügt!\");\n                            //await worker.terminate();\n                        }\n                    }} />:null}\n                    <FontAwesomeIcon icon={faImage} style={{fontSize: \"35px\", margin: \"5px 25px 3px 0\"}} onClick={()=>{this.setState({mode:\"img\"})}} />\n                    <FontAwesomeIcon icon={faColumns} style={{fontSize: \"30px\", margin: \"0 20px 5px 0\"}} onClick={()=>{this.setState({mode:\"split\"})}} />\n                    <FontAwesomeIcon icon={faKeyboard} style={{fontSize: \"33px\", margin: \"0 30px 4px 0\"}} onClick={()=>{this.setState({mode:\"text\"})}} />\n                </div>\n            </header>\n            <footer className=\"mainColors\" style={{position: \"fixed\", bottom: \"0\", right: \"0\", left: \"0\", boxShadow: \"0 0 2px gray\", display: \"grid\", gridTemplateColumns:\"1fr 1fr\", height: \"43px\"}}>\n                <div style={{position: \"relative\", top: \"1px\", left: \"10px\"}}>\n                    <input style={{position: \"relative\", top: \"7px\", marginRight: \"10px\", width:\"400px\"}} type=\"range\" min=\"0\" max={this.state.scanLst.length-1} value={this.state.cIndex} onChange={e=>{this.setState({cIndex: parseInt(e.target.value)})}} className=\"slider\" />\n                    <span>p. {currentPage}</span>\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                {this.state.mode===\"img\"?<div style={{position: \"relative\", top: \"1px\", right: \"10px\"}}>\n                    <span>{this.state.zoomFactor}%</span>\n                    <input style={{position: \"relative\", top: \"7px\", marginLeft: \"10px\", width:\"400px\"}} type=\"range\" min=\"0\" max=\"200\" value={this.state.zoomFactor} onChange={e=>{this.setState({zoomFactor: parseInt(e.target.value)})}} className=\"slider\" />\n                </div>:null}\n                </div>\n            </footer>\n            {this.state.displayBibliography?<div className=\"bibliographyBox\">{this.state.work.bibliography}</div>:null}\n        </div>;\n    }\n    componentDidMount(){\n        const setupEdition = async () => {\n            // get edition\n            const edition = await arachne.edition.get({id: this.props.edition});\n            if(edition.length===0){\n                alert(`Ein Fehler ist aufgetreten: Die Ressource konnte nicht gefunden werden. Melden Sie die ID ${this.props.edition}`)\n            }\n            // get work\n            let work = await arachne.work.get({id: edition[0].work_id});\n            console.log(work);\n            if(work.length===1){work = work[0]}\n            else{work = {}}\n\n            // get scans\n            let scanLst = await arachne.scan_lnk.get({edition_id: this.props.edition});\n            scanLst = scanLst.sort((a, b) => b.filename < a.filename);\n            const title = edition.length===1?`${edition[0].opus.replace(\" <cit></cit>\", \"\")} (${edition[0].label})`:\"\";\n            this.setState({mounted: true, title: title, path: edition[0].path, edition: edition[0], scanLst: scanLst, cIndex: scanLst.length-1, work: work});\n        }\n        setupEdition();\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.cIndex!=this.state.cIndex){\n            // update current page!\n            if(this.state.scanLst.length>0){\n                arachne.getScan(this.state.scanLst[this.state.cIndex].scan_id).then(img=>{\n                    this.setState({imgURL: img, txt: this.state.scanLst[this.state.cIndex].full_text, page: isNaN(this.state.scanLst[this.state.cIndex].filename)?this.state.scanLst[this.state.cIndex].filename:parseInt(this.state.scanLst[this.state.cIndex].filename)});\n                }).catch(e=>{throw e});    \n            }            \n        }\n        if(prevState.contentMode===\"pages\"&&this.state.contentMode===\"edit\"){\n            const getAllScans = async () => {\n                const scans = await arachne.scan.get({path: this.state.path});\n                const newAllScansPresetSelection = this.state.scanLst.map(i=>i.scan_id);\n                this.setState({scansInPath: scans, allScansPresetSelection: newAllScansPresetSelection, allScansSelection: newAllScansPresetSelection});\n            }\n            getAllScans();\n        }\n    }\n}\n\nexport { Argos };","import {useState, useEffect } from \"react\";\n\nimport { arachne } from \"./arachne\";\nimport { Selector, parseHTML } from \"./elements\";\n\nfunction Overview(){\n    const [workLst, setWorkLst] = useState([]);\n    useEffect(()=>{\n        const getData = async () => {\n            console.log(\"getting data...\");\n            const operaMaiora = await arachne.opera_maiora.getAll();\n            const operaMinora = await arachne.opera_minora.getAll();\n            console.log(\"data downloaded.\");\n            \n            console.log(operaMaiora.slice(0, 10));\n            //setWorkLst(operaMaiora.slice(0, 10));\n        };\n        getData();\n    }, []);\n    return <div>\n        <div style={{margin: \"20px 40px 20px 40px\", padding: \"10px 20px\", boxShadow: \"0 0 4px gray\"}}>\n            <h1>Übersicht</h1>\n            <table>\n                <tbody>\n                    {workLst}\n                </tbody>\n            </table>\n        </div>\n    </div>;\n}\n\nexport { Overview };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCat } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\n\nimport { arachne } from \"./arachne.js\";\nimport { Status } from \"./elements.js\";\nimport { Argos } from \"./argos.js\";\nimport { Overview } from \"./overview.js\";\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {mode: \"login\", site: \"edition\", status: {}};\n        window.addEventListener(\"arachneError\", e=>{\n            if(e.detail.status===401){\n                this.newStatus(\"error\", \"Der Server hat die Zugangsdaten abgelehnt. Melden Sie sich neu an!\");\n            } else {\n                this.newStatus(\"error\", \"Die Verbindung zum Server ist unterbrochen.\");\n            }\n        });\n        this.tbls = [\"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\"];\n    }\n    render(){\n        if(this.state.mode===\"main\"){\n            // login succeeded!\n            let main = null;\n            switch(this.state.site){\n                case \"overview\":\n                    main = <Overview />;\n                    break;\n                default:\n                    main = <Argos edition={this.state.edition} status={(type,value)=>{this.newStatus(type, value)}} setSite={site=>{this.setState({site: site})}} />;\n            }\n            return (\n                <div>\n                    {main}\n                    <Status status={this.state.status} />\n                </div>\n            );\n        } else if (this.state.mode===\"create\"){\n            return(<div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                    <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 50px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: \"0 1.2px 6px #3c6e71\"\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>Konto erstellen</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Vorname:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}><input type=\"text\" value={this.state.createFirstName?this.state.createFirstName:\"\"} onChange={e=>{this.setState({createFirstName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"4/2/4/3\"}}>Nachname:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}><input type=\"text\" value={this.state.createLastName?this.state.createLastName:\"\"} onChange={e=>{this.setState({createLastName: e.target.value})}} /></div>\n                    <span style={{gridArea: \"5/2/5/3\"}}>E-Mail:</span>\n                    <div style={{gridArea: \"5/3/5/4\"}}><input type=\"text\" value={this.state.createEmail?this.state.createEmail:\"\"} onChange={e=>{this.setState({createEmail: e.target.value})}} /></div>\n                    <span style={{gridArea: \"6/2/6/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"6/3/6/4\"}}><input type=\"password\" value={this.state.createPassword?this.state.createPassword:\"\"} onChange={e=>{this.setState({createPassword: e.target.value})}} /></div>\n                    <div style={{gridArea: \"8/3/8/4\"}}><input type=\"button\" value=\"registrieren\" onClick={async ()=>{\n                        if(this.state.createFirstName&&this.state.createFirstName&&this.state.createEmail&&this.state.createPassword){\n                            this.newStatus(\"saving\");\n                            const data = {\n                                first_name: this.state.createFirstName,\n                                last_name: this.state.createLastName,\n                                email: this.state.createEmail,\n                                password: this.state.createPassword\n                            }\n                            const status = await arachne.createAccount(data);\n                            switch(status){\n                                case 201:\n                                    this.newStatus(\"saved\", \"Der Account wurde erfolgreich erstellt.\")\n                                    setTimeout(()=>{this.setState({mode: \"login\"})}, 2100);\n                                    break;\n                                case 409:\n                                    this.newStatus(\"error\", \"Die Email-Adresse ist bereits vorhanden.\");\n                                    break;\n                                case 406:\n                                    this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus.\");\n                                    break;\n                                default:\n                                    this.newStatus(\"error\", \"Die Registrierung is fehlgeschlagen. Versuchen Sie es erneut.\");\n                            }\n                        } else {this.newStatus(\"error\", \"Bitte füllen Sie alle Felder aus!\")}\n                        \n                      \n                    }}/> <span className=\"minorTxt\" style={{marginLeft: \"20px\"}}><a onClick={()=>{this.setState({mode: \"login\"})}}>zurück</a></span></div>\n                    \n                    <span style={{gridArea: \"7/2/7/3\"}}></span>\n                </div>\n                <Status status={this.state.status} />\n            </div>);\n        } else {\n            return (\n            <div style={{\n                position: \"absolute\",\n                display: \"grid\",\n                height: \"100%\",\n                width: \"100%\",\n                gridTemplateColumns: \"1fr 2fr 1fr\",\n                gridTemplateRows: \"1fr 2fr 1fr\"\n                }}>\n                <div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n                    gridTemplateRows: \"auto 100px 50px 50px 50px 25px 50px auto\",\n                    gridColumn: \"2\",\n                    gridRow: \"2\",\n                    padding: \"10px 15px\",\n                    borderRadius: \"5px\",\n                    boxShadow: \"0 1.2px 6px #3c6e71\"\n                }}>\n                    <h1 style={{textAlign: \"center\", gridArea: \"2/2/2/4\"}}>dMLW</h1>\n                    <span style={{gridArea: \"3/2/3/3\"}}>Email:</span>\n                    <div style={{gridArea: \"3/3/3/4\"}}>\n                    <input type=\"text\" name=\"email\" style={{width:\"300px\"}} />\n                    </div>\n                    \n                    <span style={{gridArea: \"4/2/4/3\"}}>Passwort:</span>\n                    <div style={{gridArea: \"4/3/4/4\"}}>\n                    <input type=\"password\" name=\"password\" style={{width:\"300px\"}} />\n                    </div>\n                    <div style={{gridArea: \"5/3/5/4\"}}>\n                    <input type=\"submit\" value=\"anmelden\" onClick={() => {this.login()}} />\n                    </div>\n                    <span style={{gridArea: \"7/2/7/4\"}} className=\"minorTxt\">Noch kein Konto? Klicken Sie <a onClick={()=>{this.setState({mode:\"create\"})}}>hier</a>.</span>\n                </div>\n                <div className=\"cat\">\n                <FontAwesomeIcon color=\"black\" icon={faCat} />\n                </div>\n            </div>);\n        }\n    }\n    componentDidMount(){\n        // set edition/page\n        const urlQueries = new URLSearchParams(window.location.search);\n        this.setState({\n            edition: urlQueries.get(\"edition\")?urlQueries.get(\"edition\"):1,\n            page: urlQueries.get(\"page\")?urlQueries.get(\"page\"):null\n        });\n        // check session\n        const checkSession = async () => {\n            const test = await arachne.getUser();\n            if(test){\n                await arachne.open(this.tbls);\n                this.setState({mode: \"main\"});\n            }\n        }\n        checkSession();\n    }\n    loadMain(res){\n        if(res===\"logout\"){\n            arachne.close();\n            this.setState({\n                mode: \"login\",\n                res: null\n            });\n        } else {\n            this.setState({res: res});\n        };\n    }\n    async login(){\n        const email = document.querySelector(\"input[name=email]\").value;\n        const password = document.querySelector(\"input[name=password]\").value;\n        if(email!==\"\"&&password!==\"\"&&await arachne.login(email, password, this.tbls)){\n            this.setState({mode: \"main\"});\n        } else {\n            alert(\"Geben Sie eine gültige Email-Adresse und Passwort ein!\");\n        }\n    }\n    newStatus(type, value=null){\n        this.setState({status: {\n            id: Date.now(),\n            visible: true,\n            type: type,\n            value: value\n        }});\n    }\n}\n\n/* ************************************************** */\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}