{"version":3,"file":"static/js/488.9395577a.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/InputGroup.js","argos/edition.js","argos/overview.js","argos/changelog.js","argos/search.js","argos/mainContent.js","settings.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { useEffect, useLayoutEffect, useState, useRef } from \"react\";\nimport { Button, Container, Col, Form, Navbar, Offcanvas, Row, ListGroup } from \"react-bootstrap\";\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, SelectMenu, StatusButton, ToolKit, parseHTML, useIntersectionObserver, useShortcuts } from \"./../elements.js\"\n\nclass Settings{\n    constructor(){\n        let attrs = localStorage.getItem(\"argos_settings\");\n        if(attrs){attrs = JSON.parse(attrs)}\n        else{attrs = {}}\n        if(attrs.zoom===undefined){attrs.zoom = 70};\n        if(attrs.query===undefined){attrs.query = \"\"};\n        if(attrs.mode===undefined){attrs.mode = 0};\n        this.attrs = attrs;\n    }\n    get(key){return this.attrs[key]}\n    set(key,value){\n        if(this.attrs[key]!=value){\n            this.attrs[key] = value;\n            localStorage.setItem(\"argos_settings\", JSON.stringify(this.attrs));\n        }\n    }\n}\nfunction storeEdition(id, label, opus=\"???\"){\n    let editions = localStorage.getItem(\"editions\");\n    if(editions){\n        editions = JSON.parse(editions);\n        editions = editions.filter(e=>{if(e.id!==id){return true;}else{return false;}})\n        if(editions.length>15){editions.splice(14)}\n        editions.unshift({id: id, label: label, opus: opus});\n    } else {editions = [{id: id, label: label, opus: opus}]}\n    localStorage.setItem(\"editions\", JSON.stringify(editions))\n    \n}\nfunction getEditions(){\n    const editions = localStorage.getItem(\"editions\");\n    if (editions){return JSON.parse(editions);}\n    else{return [];}\n}\nfunction Edition(props){\n    const settings = new Settings();\n    const [aspectRatio, setAspectRatio] = useState(\"0.5\")\n    const [sideMenu, setSideMenu] = useState(null);\n    const [query, setQuery] = useState(settings.get(\"query\"))\n    useEffect(()=>{settings.set(\"query\", query)},[query]);\n    const [queryResults, setQueryResults] = useState([]);\n    const [queryResultIndex, setQueryResultIndex] = useState(0);\n    const [ressource, setRessource] = useState(null);\n    const [mode, setMode] = useState(settings.get(\"mode\")) // 0=scans only; 1=scan+text; 2=text only\n    useEffect(()=>{settings.set(\"mode\", mode)}, [mode]);\n    const [fullTxt, setFullTxt] = useState(false); // true if there are full texts in editions\n    const [pages, setPages] = useState([]);\n    const [scrollPos, setScrollPos] = useState(0);\n    const [scrollLock, setScrollLock] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const [zoom, setZoom] = useState(settings.get(\"zoom\"));\n    const shortCutLst = [\n        [\"ACTION+ESC\", ()=>{props.loadMain(null, null)}],\n        [\"ACTION+q\", ()=>{setSideMenu(null)}],\n        [\"ACTION+e\", ()=>{setSideMenu(\"ressource\")}],\n        [\"ACTION+s\", ()=>{setSideMenu(\"scans\")}],\n        [\"ACTION+o\", ()=>{setSideMenu(\"opera\")}],\n        [\"ACTION+i\", ()=>{setSideMenu(\"content\")}],\n        [\"ACTION+f\", ()=>{\n            const el = document.getElementById(\"searchInput\");\n            if(el){el.focus()}\n        }],\n        [\"Alt+ArrowRight\", ()=>{\n            if(queryResults.length>queryResultIndex+1){\n                setQueryResultIndex(queryResultIndex+1)\n            }else{\n                setQueryResultIndex(0)\n            }\n        }],\n        [\"Alt+ArrowLeft\", ()=>{\n            if(0<=queryResultIndex-1){\n                setQueryResultIndex(queryResultIndex-1)\n            }else{\n                setQueryResultIndex(queryResults.length-1)\n            }\n        }],\n        //[queryResultIndex, setQueryResultIndex]\n        [\"CTRL+1\", ()=>{setMode(0)}],\n        [\"CTRL+2\", ()=>{setMode(1)}],\n        [\"CTRL+3\", ()=>{setMode(2)}],\n        [\"CTRL+,\", ()=>{setZoom(zoom-5)}],\n        [\"CTRL+.\", ()=>{setZoom(zoom+5)}],\n    ];\n    useShortcuts(shortCutLst, false);\n    useEffect(()=>{settings.set(\"zoom\", zoom)},[zoom]);\n    useEffect(()=>{ // onload (?)\n        const fetchData = async ()=>{\n            const newRessource = await arachne.edition.get({id: props.resId});\n            setRessource(newRessource[0]);\n            setAspectRatio(newRessource[0].aspect_ratio?`${newRessource[0].aspect_ratio}`:\"0.6\")\n            let nPages = await arachne.scan_lnk.get({edition_id: props.resId});\n            nPages = nPages.sort((a, b) => b.filename < a.filename);\n            setPages(nPages);\n            if(localStorage.getItem(\"argos_currentPages\")){\n                const currentPage = JSON.parse(localStorage.getItem(\"argos_currentPages\")).find(p=>p.edition_id===props.resId);\n                if(currentPage){\n                    scrollPageIntoView(currentPage.scan_id);\n                }\n            }\n            \n        };\n        fetchData();\n    },[props.resId]);\n    useEffect(()=>{\n        let hasFullTxt = false;\n        for(const p of pages){if(p.full_text!==null&&p.full_text!==\"\"){hasFullTxt=true;break}}\n        if(hasFullTxt){\n            setFullTxt(true);\n        }else{\n            setFullTxt(false);\n            if(mode!=0){setMode(0)}\n        }\n    }, [pages]);\n    useEffect(()=>{\n        if(fullTxt&&query.length>0){\n            const fLst = pages.filter(r=>r.full_text&&r.full_text.search(query)>-1);\n            setQueryResults(fLst);\n            setQueryResultIndex(0);\n            if(fLst.length>0){scrollPageIntoView(fLst[0].id)}\n        }else{\n            setQueryResults([]);\n            setQueryResultIndex(0);\n        }\n    },[fullTxt, query]);\n    useEffect(()=>{if(queryResults.length>0){scrollPageIntoView(queryResults[queryResultIndex].id)}}, [queryResultIndex]);\n    const scrollPageIntoView = (id)=>{\n        const element = document.getElementById(`p_${id}`);\n        if(element){element.scrollIntoView()}\n    };\n    const searchQuery = q =>{};\n    return <>\n    <Container onScroll={e=>{if(scrollLock===false){setScrollLock(true);setScrollPos(e.target.scrollTop);setTimeout(()=>{setScrollLock(false)},500);}}} style={{position: \"fixed\", top: \"60px\", left:\"0\", right: \"0\", bottom: \"60px\", overflow: \"scroll\"}} fluid>\n    {pages.map(p=>{return <Row key={p.scan_id}><Col align=\"center\"><Image aspectRatio={aspectRatio} editMode={editMode} query={query} mode={mode} zoom={zoom} scrollPos={scrollPos} page={p} ressource={ressource} /></Col></Row>;})}\n    </Container>\n    <NavBarBottom scrollPageIntoView={p=>{scrollPageIntoView(p)}} setEditMode={()=>{setEditMode(!editMode)}} fullTxt={fullTxt} setSideMenu={m=>{setSideMenu(m)}} query={query} setQuery={q=>{setQuery(q)}} searchQuery={q=>{searchQuery(q)}} queryResults={queryResults} queryResultIndex={queryResultIndex} setQueryResultIndex={i=>{setQueryResultIndex(i)}} mode={mode} setMode={m=>{setMode(m)}} zoom={zoom} setZoom={z=>{setZoom(z)}} pages={pages} />\n    <SideMenu ressource={ressource} pages={pages} item={sideMenu} setSideMenu={m=>{setSideMenu(m)}} />\n    </>;\n}\nfunction SideMenu(props){\n    return <Offcanvas show={props.item?true:false} onHide={()=>{props.setSideMenu(null)}} placement=\"end\">\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>\n            {props.item===\"opera\"&&\"Angaben aus der opera-Liste\"}\n            {props.item===\"ressource\"&&`Ressource (ID: ${props.ressource.id})`}\n            {props.item===\"scans\"&&\"Scan-Seiten zuweisen\"}\n            </Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            {props.item===\"opera\"&&<SideOpera ressource={props.ressource} />}\n            {props.item===\"ressource\"&&<SideEdition ressource={props.ressource} />}\n            {props.item===\"scans\"&&<SideScans pages={props.pages} ressource={props.ressource} />}\n            {props.item===\"content\"&&<SideContent setSideMenu={v=>{props.setSideMenu(v)}} pages={props.pages} ressource={props.ressource} />}\n        </Offcanvas.Body>\n    </Offcanvas>;\n}\nfunction SideContent(props){\n    return <Container>\n        <Row className=\"mb-4\"><Col><h2>Inhaltsverzeichnis</h2></Col></Row>\n        <Row className=\"mb-3\"><Col xs={1}></Col><Col><ListGroup variant=\"flush\">\n            {props.pages.map(p=>{return <ListGroup.Item style={{textAlign: \"center\"}} key={p.id} action onClick={()=>{\n                const el = document.getElementById(`p_${p.scan_id}`);\n                el.scrollIntoView({behavior: \"auto\", block: \"start\"});\n                props.setSideMenu(null);\n            }}>{parseInt(p.filename)>0?parseInt(p.filename):p.filename}</ListGroup.Item>;})}\n        </ListGroup></Col><Col xs={1}></Col></Row>\n    </Container>;\n}\nfunction SideScans(props){\n    const [scans, setScans] = useState([]);\n    const [pages, setPages] = useState(props.pages.map(p=>{return p.scan_id}));\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            const nScans = await arachne.scan.get({path: props.ressource.path});\n            setScans(nScans);\n        };\n        fetchData();\n    }, []);\n    const togglePage = id=>{\n        if(pages.includes(id)){ setPages(pages.filter(p=>p!=id)) }\n        else{ setPages(pages.concat([id])) }\n    };\n    return <Container>\n        <Row className=\"mb-2\"><Col>Dateipfad: <code>{props.ressource.path}</code></Col></Row>\n        <Row className=\"mb-4\"><Col><small>Einzelne Seiten können mit einem Klick markiert werden. Mehrere Seiten können mit einer Bewegung der Maus und dem gleichzeitigen Gedrückthalten der {arachne.me.selectKey}-Taste aktiviert werden.</small></Col></Row>\n        <Row className=\"mb-3\"><Col><ListGroup>\n            {scans.map(s=>{return <ListGroup.Item className=\"mb-1\" key={s.id} active={pages.includes(s.id)?true:false} onMouseEnter={e=>{if((arachne.me.selectKey===\"cmd\"&&e.metaKey)||(arachne.me.selectKey===\"ctrl\"&&e.ctrlKey)){togglePage(s.id)}}} onClick={()=>{togglePage(s.id)}} action>{s.filename}</ListGroup.Item>;})}\n        </ListGroup></Col></Row>\n        <Row className=\"mb-3\"><Col align=\"right\">Auswahl: {pages.length}</Col></Row>\n        <Row><Col><StatusButton onClick={async ()=>{\n                // delete old links\n                if(props.pages.length>0){ await arachne.scan_lnk.delete(props.pages.map(p=>{return p.id})) }\n                // create new links\n                if(pages.length>0){\n                    let newLnks = pages.sort();\n                    newLnks = newLnks.map(i=>{return {edition_id: props.ressource.id, scan_id: i}});\n                    await arachne.scan_lnk.save(newLnks);\n                }                        \n                return {status: 1};\n        }} value=\"speichern\" /></Col></Row>\n        \n    </Container>;\n}\nfunction SideOpera(props){\n    const [work, setWork] = useState({});\n    const [author, setAuthor] = useState({});\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            const nWork = await arachne.work.get({id: props.ressource.work_id});\n            setWork(nWork[0]);\n            const nAuthor = await arachne.author.get({id: nWork[0].author_id});\n            setAuthor(nAuthor[0]);\n        };\n        fetchData();\n    }, [props.ressource]);\n    return <Container>\n        <Row className=\"mb-2\"><Col dangerouslySetInnerHTML={parseHTML(work.date_display?work.date_display:author.date_display)}></Col></Row>\n        <Row className=\"mb-2\"><Col xs={5}><b><aut>{work.author_display?work.author_display:author.abbr}</aut></b></Col><Col dangerouslySetInnerHTML={parseHTML(work.author_display?null:author.full)}></Col></Row>\n        <Row className=\"mb-4\"><Col xs={5}><b style={{marginLeft: \"10px\"}} dangerouslySetInnerHTML={parseHTML(work.abbr)}></b></Col><Col><span style={{marginLeft: \"10px\"}} dangerouslySetInnerHTML={parseHTML(work.full)}></span></Col></Row>\n        <Row className=\"mb-2\"><Col><i dangerouslySetInnerHTML={parseHTML(work.bibliography?work.bibliography:author.bibliography)}></i></Col></Row>\n        <Row><Col><small dangerouslySetInnerHTML={parseHTML(work.citation?work.citation:author.citation)}></small> <small dangerouslySetInnerHTML={parseHTML(work.txt_info?work.txt_info:author.txt_info)}></small></Col></Row>\n    </Container>;\n}\nfunction SideEdition(props){\n    const [id, setId] = useState(props.ressource.id);\n    const [ressource, setRessource] = useState(props.ressource.ressource);\n    const [work_id, setWork_id] = useState(props.ressource.work_id);\n    const [ac_web, setAc_web] = useState(props.ressource.ac_web);\n    const [editor, setEditor] = useState(props.ressource.editor);\n    const [year, setYear] = useState(props.ressource.year);\n    const [volume, setVolume] = useState(props.ressource.volume);\n    const [volCont, setVolCont] = useState(props.ressource.vol_cont);\n    const [serie, setSerie] = useState(props.ressource.serie);\n    const [location, setLocation] = useState(props.ressource.location);\n    const [library, setLibrary] = useState(props.ressource.library);\n    const [signature, setSignature] = useState(props.ressource.signature);\n    const [comment, setComment] = useState(props.ressource.comment);\n    const [path, setPath] = useState(props.ressource.path);\n    const [url, setUrl] = useState(props.ressource.url);\n    const [aspect_ratio, setAspectRatio] = useState(props.ressource.aspect_ratio);\n    const [bibliography_preview, setBibliography_preview] = useState(null);\n\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            if(work_id>0){\n                let bibliography = await arachne.work.get({id: work_id}, {select: [\"bibliography\"]});\n                if(bibliography.length > 0){setBibliography_preview(bibliography[0].bibliography)}\n                else {setBibliography_preview(null)}\n            }\n        };\n        fetchData();\n    },[work_id]);\n    return <Container>\n        <Row className=\"mb-2\">\n            <Col xs={3}>Werk:</Col>\n            <Col><AutoComplete  value={ac_web?ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{setAc_web(value);setWork_id(id)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={3}><small>Alter Dateiname:</small></Col>\n            <Col>{props.ressource.dir_name}</Col>\n        </Row>\n        {bibliography_preview&&<Row className=\"mb-4\">\n            <Col xs={3} style={{backgroundColor: \"var(--bs-gray-100\"}}><small>Bibl. Angaben:</small></Col>\n            <Col style={{fontSize: \"90%\", backgroundColor: \"var(--bs-gray-100\"}}>{bibliography_preview}</Col>\n        </Row>}\n        <Row className=\"mb-2\">\n            <Col xs={3}>Ressource:</Col>\n            <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={ressource?ressource:\"\"} onChange={e=>{setRessource(parseInt(e.target.value))}} /></Col>\n        </Row>\n        {ressource===0||ressource===1||ressource===5?[\n            <Row key=\"0\" className=\"mb-2\">\n                <Col xs={3}>Editor:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={editor?editor:\"\"} onChange={e=>{setEditor(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"1\" className=\"mb-2\">\n                <Col xs={3}>Jahr:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={year?year:\"\"} onChange={e=>{setYear(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"2\" className=\"mb-2\">\n                <Col xs={3}>Band:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={volume?volume:\"\"} onChange={e=>{setVolume(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"3\" className=\"mb-2\">\n                <Col xs={3}>Bandinhalt:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={volCont?volCont:\"\"} onChange={e=>{setVolCont(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"4\" className=\"mb-4\">\n                <Col xs={3}>Reihe:</Col>\n                <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={serie?serie:\"\"} onChange={e=>{setSerie(parseInt(e.target.value))}} /></Col>\n            </Row>,\n        ]:null}\n        {ressource===2?[\n            <Row key=\"5\" className=\"mb-2\">\n                <Col xs={3}>Stadt:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={location?location:\"\"} onChange={e=>{setLocation(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"6\" className=\"mb-2\">\n                <Col xs={3}>Bibliothek:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={library?library:\"\"} onChange={e=>{setLibrary(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"7\" className=\"mb-4\">\n                <Col xs={3}>Signatur:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={signature?signature:\"\"} onChange={e=>{setSignature(e.target.value)}} /></Col>\n            </Row>,\n        ]:null}\n        {ressource===3||ressource===4?[\n            <Row key=\"8\" className=\"mb-2\">\n                <Col xs={3}>Drucker:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={editor?editor:\"\"} onChange={e=>{setEditor(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"9\" className=\"mb-2\">\n                <Col xs={3}>Ort:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={location?location:\"\"} onChange={e=>{setLocation(e.target.value)}} /></Col>\n            </Row>,\n            <Row key=\"10\" className=\"mb-4\">\n                <Col xs={3}>Jahr:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={year?year:\"\"} onChange={e=>{setYear(e.target.value)}} /></Col>\n            </Row>,\n        ]:null}\n        <Row className=\"mb-2\">\n            <Col xs={3}>Kommentar:</Col>\n            <Col><textarea style={{width: \"250px\", height: \"100px\"}} value={comment?comment:\"\"} onChange={e=>{setComment(e.target.value)}}></textarea></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={3}>Dateipfad:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={path?path:\"\"} onChange={e=>{setPath(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={3}>Link:<br /><small>(externe Quellen)</small></Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={url?url:\"\"} onChange={e=>{setUrl(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={3}>Seiten-verhältnis:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={aspect_ratio?aspect_ratio:\"\"} onChange={e=>{setAspectRatio(e.target.value.substring(0,5))}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                if((ressource===0||ressource===1||ressource===5)&&(!editor||!year)){\n                    return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n                } else {\n                    await arachne.edition.save({\n                        id: id,\n                        work_id: work_id,\n                        ressource: ressource,\n                        editor: editor,\n                        year: year,\n                        volume: volume,\n                        vol_cont: volCont,\n                        serie: serie,\n                        comment: comment,\n                        location: location,\n                        library: library,\n                        signature: signature,\n                        path: path,\n                        url: url,\n                        aspect_ratio: aspect_ratio\n                    });\n                    return {status: true};\n                }\n            }} />\n            </Col>\n        </Row>\n    </Container>;\n}\nfunction Image(props){\n    const width = props.zoom;\n    const [isVisible, setIsVisible] = useState(false);\n    const imgRef = useRef(null);\n    const [img, setImg] = useState(null);\n    useIntersectionObserver({\n        target: imgRef,\n        onIntersect: ([{ intersectionRatio, isIntersecting }], observerElement) => {\n            if (isIntersecting&&!isVisible) {\n                setIsVisible(true);\n            }\n            if(intersectionRatio>0.1){\n                document.getElementById(\"currentPageField\").value = isNaN(props.page.filename)?props.page.filename:parseInt(props.page.filename);\n                observerElement.unobserve(imgRef.current);\n            }\n        }\n      });\n      useEffect(()=>{\n          if(isVisible){\n                const fetchData = async ()=>{\n                    setImg(await arachne.getScan(props.page.scan_id));\n                }\n                fetchData();\n                \n          }else{\n              setImg(null);\n          }\n      },[isVisible]);\n    return <Row id={`p_${props.page.scan_id}`} className=\"mb-4 px-5\">{props.mode<2?<Col><div ref={imgRef} style={{width: props.mode===0?`${width}%`:\"100%\",aspectRatio: props.aspectRatio, boxShadow: \"0 5px 10px var(--bs-gray-300)\", borderRadius: \"3px\", overflow: \"hidden\"}}><img style={{width: \"100%\", height: \"100%\"}} src={img} alt={props.page.filename}></img></div></Col>:null}{props.mode>0?<Col><TextBlock editMode={props.editMode} ressource={props.ressource} page={props.page} query={props.query} /></Col>:null}</Row>;\n}\nfunction TextBlock(props){\n    const [cols, setCols] = useState(null);\n    const containerRef = useRef(null);\n    const saveTextChanges = e=>{\n        //console.log(e.target.textContent);\n    }\n    useEffect(()=>{\n        if(props.page.full_text){\n            let fullText = props.query?props.page.full_text.replace(new RegExp(props.query, \"g\"), `<mark>${props.query}</mark>`):props.page.full_text;\n            fullText = fullText.replace(/-\\n([^ ]*) /g, \"$1\\n\"); // replace words separated at end of line.\n            fullText = fullText.replace(/(\\d+\\.)/g, \"</p><p><b>$1</b>\");\n            fullText = `<p>${fullText}</p>`;\n            fullText = fullText.replace(/\\n/g, \"<br />\");\n            \n\n            const colDelimiter = fullText.indexOf(\"$$$$$\");\n            if(colDelimiter>-1){\n                setCols([\n                    <Col key=\"0\" contentEditable={props.editMode} onBlur={e=>{saveTextChanges(e)}} style={{textAlign: \"justify\", fontSize: \"0.9rem\"}} dangerouslySetInnerHTML={parseHTML(fullText.substring(0, colDelimiter))}></Col>,\n                    <Col key=\"1\" contentEditable={props.editMode} onBlur={e=>{saveTextChanges(e)}} style={{textAlign: \"justify\", fontSize: \"0.9rem\"}} dangerouslySetInnerHTML={parseHTML(fullText.substring(colDelimiter+9))}></Col>\n                ]);\n            }else{\n                setCols([<Col key=\"0\" contentEditable={props.editMode} onBlur={e=>{saveTextChanges(e)}} style={{textAlign: \"justify\", fontSize: \"1rem\", color: props.page.auto_text===1?\"var(--bs-gray-500)\":\"var(--bs-gray-900)\"}} dangerouslySetInnerHTML={parseHTML(fullText)}></Col>]);\n            }\n        }\n    },[props.editMode]);\n    return <Container className={props.editMode?\"bg-light\":null} ref={containerRef} style={{width: \"100%\", minHeight: \"100%\", boxShadow: \"0 5px 10px var(--bs-gray-300)\", borderRadius: \"3px\", overflow: \"hidden\", padding: \"60px 40px\"}}>\n        <Row className=\"mb-4\">\n            <Col></Col>\n            <Col dangerouslySetInnerHTML={parseHTML(props.ressource.opus)}></Col>\n            <Col align=\"right\">{isNaN(props.page.filename)?props.page.filename:parseInt(props.page.filename)}</Col>\n        </Row>\n        {props.page.full_text?<Row>{cols}</Row>:<Row><Col><i>Kein Fließtext verfügbar.</i></Col></Row>}\n    </Container>;\n}\nfunction NavBarBottom(props){\n    const [gotoPageError, setGotoPageError] = useState(null);\n    let items = [\n        [\"opera-Angaben\", ()=>{props.setSideMenu(\"opera\")}],\n        [\"Inhaltsverzeichnis\", ()=>{props.setSideMenu(\"content\")}]\n    ];\n    if(arachne.access(\"e_edit\")){items.push([\"Ressource bearbeiten\", ()=>{props.setSideMenu(\"ressource\")}])}\n    if(arachne.access(\"l_edit\")){items.push([\"Scan-Seiten zuweisen\", ()=>{props.setSideMenu(\"scans\")}])}\n    if(props.fullTxt===true){\n        if(arachne.access(\"e_edit\")){items.push([\"Text bearbeiten\", ()=>{props.setEditMode()}])}\n        items.push([\"Nur Text\", ()=>{props.setMode(2)}]);\n        items.push([\"Scans&Text\", ()=>{props.setMode(1)}]);\n        items.push([\"Nur Scans\", ()=>{props.setMode(0)}]);\n    }\n    return <Navbar fixed=\"bottom\" bg=\"light\">\n        <Container fluid>\n            <Navbar.Collapse className=\"justify-content-start\">\n                {props.fullTxt&&<Navbar.Text>\n                    <Form.Control size=\"sm\" type=\"text\" id=\"searchInput\" placeholder=\"Suche...\" value={props.query} onChange={e=>{props.setQuery(e.target.value);props.searchQuery(e.target.value)}} onKeyUp={e=>{if(e.keyCode===13){}}} />\n                </Navbar.Text>}\n                {props.fullTxt&&props.queryResults.length>0&&<Navbar.Text style={{marginLeft: \"10px\"}}>\n                    <div id=\"navBox\" style={{display: \"flex\", marginRight: \"20px\"}}>\n                        <Button style={{borderRadius: \"0.2rem 0 0 0.2rem\"}} variant=\"secondary\" size=\"sm\" onClick={()=>{window.scrollTo(0,0);if(props.queryResultIndex>0){props.setQueryResultIndex(props.queryResultIndex-1)}else{props.setQueryResultIndex(props.queryResults.length-1)}}}>&lt;</Button>\n                        <div style={{borderBottom: \"1px solid var(--bs-gray-600)\", borderTop: \"1px solid var(--bs-gray-600)\", padding: \"5px 10px\", margin: \"0\"}}> <input style={{\n                            width: \"50px\",\n                            border: \"none\",\n                            boxShadow: \"none\",\n                            padding: 0,\n                            margin: 0,\n                            textAlign: \"right\",\n                            background: \"none\",\n                            color: \" var(--bs-gray-600)\",\n                        }}\n                        type=\"text\" value={props.queryResultIndex+1} onChange={e=>{if(e.target.value!=\"\"&&!isNaN(e.target.value)){props.setQueryResultIndex(parseInt(e.target.value)-1)}}} /> von {props.queryResults.length}</div>\n                        <Button  style={{borderRadius: \"0 0.2rem 0.2rem 0\"}} variant=\"secondary\" size=\"sm\" onClick={()=>{if(props.queryResultIndex+1===props.queryResults.length){props.setQueryResultIndex(0)}else{props.setQueryResultIndex(props.queryResultIndex+1)}}}>&gt;</Button>\n                    </div>\n                </Navbar.Text>}\n                {props.fullTxt&&props.queryResults.length===0&&props.query.length>0&&<Navbar.Text style={{marginLeft: \"10px\"}}>\n                    <small className=\"text-danger\">Keine Stellen gefunden!</small>\n                </Navbar.Text>}\n            </Navbar.Collapse>\n            <Navbar.Collapse>\n                <Navbar.Text>\n                    Seite <input type=\"text\" id=\"currentPageField\" \n                    onChange={()=>{setGotoPageError(null)}}\n                    onKeyDown={e=>{\n                        if(e.keyCode===13){\n                            e.preventDefault();\n                            const currentFilename = isNaN(e.target.value)?e.target.value:e.target.value.padStart(4, \"0\");\n                            const currentPage = props.pages.find(p=>p.filename===currentFilename);\n                            if(currentPage){\n                                setGotoPageError(null);props.scrollPageIntoView (currentPage.scan_id)\n                            }else{setGotoPageError(<span className=\"text-danger\">Seite nicht gefunden!</span>)}\n                        }\n                    }} /> {gotoPageError}\n                </Navbar.Text>\n\n                <Navbar.Text>\n                    \n                </Navbar.Text>\n\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                    {props.mode===0&&<Form.Range style={{position: \"relative\", top: \"7px\", marginRight: \"10px\", width:\"400px\"}} min=\"45\" max=\"95\" value={props.zoom} onChange={e=>{props.setZoom(parseInt(e.target.value))}} className=\"slider\" />}\n                    {items.length>0?<ToolKit menuItems={items} />:null}\n                </Navbar.Text>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>;\n}\nexport { storeEdition, getEditions, Edition, Settings };","import { Button, Container, Col, Navbar, Row, Table, InputGroup, FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { storeEdition, Settings } from \"./edition.js\";\nimport { parseHTML, Navigator, useShortcuts } from \"./../elements.js\";\n\nfunction Overview(prop){\n    const [fullTextLst, setFullTextLst] = useState([]);\n    const [editionHits, setEditionHits] = useState([]);\n    const [opera, setOpera] = useState([]);\n    const [operaCount, setOperaCount] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [query, setQuery] = useState(\"\");\n    const shortCutLst = [\n        [\"ACTION+f\", ()=>{\n            const el = document.getElementById(\"searchInput\");\n            if(el){el.focus()}\n        }],\n        [\"ACTION+ArrowRight\", ()=>{\n            if(Math.ceil(operaCount/30)>=currentPage+1){\n                setCurrentPage(currentPage+1);\n            }else{setCurrentPage(1)}\n        }],\n        [\"ACTION+ArrowLeft\", ()=>{\n            if(0<currentPage-1){\n                setCurrentPage(currentPage-1)\n            }else{\n                setCurrentPage(Math.ceil(operaCount/30))\n            }\n        }],\n    ];\n    useShortcuts(shortCutLst, false);\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            let operaCount = null;\n            let nFullTxtLst = [];\n            let nEditionHits = [];\n            if(query!=\"\"){ // search\n                operaCount = await arachne.scan_opera.search([{c:\"search\",o:\"=\", v:`${query}*`}], {count: true})\n            }else{operaCount = await arachne.scan_opera.getAll({count: true})} // display all\n            setOperaCount(operaCount[0].count);\n            setEditionHits(nEditionHits);\n            setFullTextLst(nFullTxtLst);\n            setCurrentPage(1);\n        };\n        fetchData();\n    }, [query]);\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            let newOpera = []\n            if(query!=\"\"){\n                newOpera = await arachne.scan_opera.search([{c:\"search\",o:\"=\", v:`${query}*`}], {limit: 30, offset: (currentPage-1)*30})\n            }else{newOpera = await arachne.scan_opera.getAll({limit: 30, offset: (currentPage-1)*30})}\n            setOpera(newOpera);\n        };\n        fetchData();\n    }, [query, currentPage, fullTextLst])\n    const openEdition = (e, id, label, opus)=>{\n        storeEdition(id, label, opus);\n        prop.loadMain(e, \"edition\", id);\n    };\n    return <><Container>\n        <Row><Col xs={1}></Col><Col><Table><thead><tr><th width=\"40%\">Zitiertitel</th><th width=\"30%\">relevant</th><th width=\"15%\">veraltet</th><th width=\"15%\">Sonstiges</th></tr></thead><tbody>{opera.map(o =>{\n            const label = JSON.parse(o.editions_label);\n            const id = JSON.parse(o.editions_id);\n            const url = JSON.parse(o.editions_url);\n            const type = JSON.parse(o.editions_type);\n            let editions=[];\n            if(label&&label.length===id.length&&id.length===url.length){\n                let i = -1;\n                editions = id.map(id=>{\n                    const hits = editionHits.filter(h=>h===parseInt(id)).length;\n                    i++;\n                    return {id: id, label: label[i], url: url[i], type: type[i], hits: hits}\n                })\n            }\n            if(editionHits.length>0){editions = editions.filter(f=>f.hits>0)}\n            return <tr style={{color: o.in_use?null:\"var(--bs-gray-500)\", backgroundColor: o.in_use?null:\"var(--bs-gray-100)\"}} key={o.id}><td dangerouslySetInnerHTML={parseHTML(o.citation)}></td><td>{editions.map(e=>{if(e.type===0||e.type===3){return <div key={e.id}><a href={e.url?e.url:\"#\"} target={e.url?\"_blank\":\"\"} className={e.url?\"link-warning\":\"link-primary\"} onClick={ev=>{if(!e.url){openEdition(ev, e.id, e.label, o.search)}}}>{e.label}{editionHits.length>0?\" (\"+e.hits+\")\":null}</a></div>;}})}</td><td>{editions.map(e=>{if(e.type===1||e.type===4){return <div key={e.id}><a href={e.url?e.url:\"#\"} target={e.url?\"_blank\":\"\"} onClick={ev=>{if(!e.url){openEdition(ev, e.id, e.label, o.search)}}}>{e.label}</a></div>;}})}</td><td>{editions.map(e=>{if(e.type===2||e.type===5){return <div key={e.id}><a href={e.url?e.url:\"#\"} target={e.url?\"_blank\":\"\"} onClick={ev=>{if(!e.url){openEdition(ev, e.id, e.label, o.search)}}}>{e.label}</a></div>;}})}</td></tr>})}</tbody></Table></Col><Col xs={1}></Col></Row>\n    </Container>\n    <NavBarBottom operaCount={operaCount} currentPage={currentPage} setCurrentPage={p=>{setCurrentPage(p)}} setQuery={q=>{setQuery(q)}} />\n    </>;\n};\n\nfunction NavBarBottom(props){\n    const [queryTxt, setQueryTxt] = useState(\"\")\n    return <Navbar fixed=\"bottom\" bg=\"light\">\n        <Container fluid>\n            <Navbar.Collapse className=\"justify-content-start\">\n                <Navbar.Text>\n                    <InputGroup>\n                        <FormControl placeholder=\"Suche...\" id=\"searchInput\" onChange={e=>{setQueryTxt(e.target.value)}} value={queryTxt} onKeyUp={e=>{if(e.keyCode===13){props.setQuery(queryTxt)}}} />\n                        <Button variant=\"dark\" onClick={()=>{props.setQuery(queryTxt)}}>Zitiertitel</Button>\n                        {/*<DropdownButton variant=\"outline-secondary\" title=\"Zitiertitel\" align=\"end\">\n                            <Dropdown.Item href=\"#\">Zitiertiel</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Volltext</Dropdown.Item>\n</DropdownButton>*/}\n                    </InputGroup>\n                </Navbar.Text>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                {props.operaCount>0?\n                <Navigator loadPage={newPage=>{props.setCurrentPage(newPage)}} currentPage={props.currentPage} maxPage={Math.ceil(props.operaCount/30)} />\n                :null}\n                </Navbar.Text>\n                <Navbar.Text>\n                    {/*arachne.access(\"z_edit\")&&<ToolKit menuItems={[\n                            [\"neuer Zettel erstellen\", async ()=>{\n                                if(window.confirm(\"Soll ein neuer Zettel erstellt werden?\")){\n                                    const newId = await arachne.zettel.save({type: 2, txt: \"Neuer Zettel\"});\n                                    this.setState({setupItems: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                }\n                            }]\n                        ]} />*/}\n                </Navbar.Text>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>;\n}\n\nexport { Overview };","import { Alert, Container } from \"react-bootstrap\";\n\nfunction  ChangeLog(){\n    return <Container>\n        {/*<Alert variant=\"info\">\n            <Alert.Heading>Beta X.Y</Alert.Heading>\n            <i>X. Y 2022</i>\n            <p>TEXT</p>\n        </Alert>*/}\n        <Alert variant=\"info\">\n            <Alert.Heading>Beta 1.3</Alert.Heading>\n            <i>18. Mai 2022</i>\n            <p>Volltextsuche angepasst und Shortcut-Taste über Einstellungen veränderbar.</p>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 1.2</Alert.Heading>\n            <i>14. April 2022</i>\n            <p>Shortcuts hinzugefügt.</p>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 1.1</Alert.Heading>\n            <i>31. März 2022</i>\n            <p>Korrektur des Seitenverhältnisses (auch über \"Ressource bearbeiten\" veränderbar).</p>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 1.0</Alert.Heading>\n            <i>26. Februar 2022</i>\n            <p>Erste Version des neuen Scan-Viewers ist online.</p>\n        </Alert>\n    </Container>;\n}\n\nexport { ChangeLog };","import { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Form, Navbar, Row, Spinner, Table } from \"react-bootstrap\";\n\nimport { arachne } from \"./../arachne\";\nimport { Navigator, parseHTML } from \"./../elements.js\"\n\nfunction SearchBox(props){\n    const resultsProPage = 5;\n    const [query, setQuery] = useState(\"\");\n    const [resultLabel, setResultLabel] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(0);\n    const [maxPage, setMaxPage] = useState(0);\n    const [results, setResults] = useState([]);\n    const [searchAutoText, setSearchAutoText] = useState(false);\n    const searchQuery = ()=>{\n        if(query===\"\"){\n            setResults([]);\n        }else{\n            const fetchData = async ()=>{\n                setResultLabel(<Spinner variant=\"primary\" animation=\"border\" />);\n                const newResultsCount = await arachne.fulltext_search_view.search([{c:\"full_text\",o:\"=\", v:`*${query}*`}, {c: \"auto_text\", o: searchAutoText?\">=\":\"=\", v: 0}], {select: [\"work_id\"], group: \"work_id\"});\n                setResultLabel(`${newResultsCount.length} Werke gefunden.`);\n                setMaxPage(Math.floor(newResultsCount.length/resultsProPage)+1)\n                loadPage(1);\n            };\n            fetchData();\n        }\n    };\n    const loadPage = async newPage => {\n        setCurrentPage(newPage);\n        setResults([]);\n        const newResults = await arachne.fulltext_search_view.search([{c:\"full_text\",o:\"=\", v:`*${query}*`}, {c: \"auto_text\", o: searchAutoText?\">=\":\"=\", v: 0}], {select: [\"work_id\", \"opus\"], group: \"work_id\", offset: (newPage-1)*resultsProPage, limit:resultsProPage});\n        setResults(newResults);\n    };\n    return <>\n        <Navbar fixed=\"bottom\" bg=\"light\">\n            <Container fluid>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                    {maxPage>0?\n                    <Navigator loadPage={newPage=>{loadPage(newPage)}} currentPage={currentPage} maxPage={maxPage} />\n                    :null}\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        <Container>\n            <Row>\n                <Col>\n                    <Form.Control type=\"text\" id=\"searchInput\" placeholder=\"Suche...\" value={query} onChange={e=>{setQuery(e.target.value)}} onKeyUp={e=>{if(e.keyCode===13){searchQuery()}}} />\n                </Col>\n                <Col xs={1}>\n                    <Button style={{padding: \"6px 30px\"}} onClick={()=>{searchQuery()}}>Suche</Button>\n                </Col>\n            </Row>\n            <Row className=\"mt-2\">\n                <Col>{resultLabel}</Col>\n                <Col></Col>\n                <Col>\n                    <Form.Check\n                        type=\"switch\"\n                        id=\"custom-switch\"\n                        label=\"automatisch generierte Texte berücksichtigen\"\n                        checked={searchAutoText}\n                        value={searchAutoText}\n                        onChange={e=>{setSearchAutoText(e.target.checked)}}\n                    />\n                </Col>\n            </Row>\n            {results.length>0?<Row><Col>\n                {results.map(r=><ResultRow searchAutoText={searchAutoText} key={r.work_id} loadMain={(...params)=>{props.loadMain(...params)}} query={query} work={r} />)}\n            </Col></Row>:null}\n        </Container>\n    </>;\n}\nfunction ResultRow(props){\n    const [sections, setSections] = useState([]);\n    const [sectionsCount, setSectionsCount] = useState(-1);\n    useEffect(()=>{\n        const fetchData = async () => {\n            const newPages = await arachne.fulltext_search_view.search([{c:\"full_text\",o:\"=\", v:`*${props.query}*`}, {c: \"auto_text\", o: props.searchAutoText?\">=\":\"=\", v: 0}, {c: \"work_id\", o: \"=\", v: props.work.work_id}], {select: [\"full_text\", \"auto_text\", \"page\", \"edition_id\", \"scan_id\"]});\n            const lengthOfText = 150;\n            let newSections = [];\n            let newSectionsCount = -1\n            newPages.forEach(p=>{\n                const maxHits = [...p.full_text.matchAll(props.query)].length;\n                let currentIndex = -1;\n                for(let i=0;i<maxHits;i++){\n                    newSectionsCount += 1;\n                    currentIndex = p.full_text.indexOf(props.query, currentIndex+1);\n                    newSections.push({id: newSectionsCount, scan_id: p.scan_id, auto_text: p.auto_text, edition_id: p.edition_id, page: p.page, section: <span>... {p.full_text.substring(currentIndex-lengthOfText,currentIndex)}<strong className=\"text-primary\">{props.query}</strong>{p.full_text.substring(currentIndex+props.query.length,currentIndex+props.query.length+lengthOfText)} ...</span>});\n                }\n            });\n            setSections(newSections);\n            setSectionsCount(newSectionsCount);\n        };\n        fetchData();\n    }, []);\n    return <>\n        {sections.length>0?<><h4 className=\"mt-4\" style={{borderTop: \"1px solid var(--bs-secondary)\", paddingTop: \"20px\"}}><span dangerouslySetInnerHTML={parseHTML(props.work.opus)}></span>{sectionsCount>-1?<i style={{fontSize: \"70%\"}}>({sectionsCount+1})</i>:null}</h4></>:null}\n        {sections.length>0?sections.map(s=><div key={s.id} className=\"mb-3\"><div style={{cursor: \"pointer\"}} onClick={e=>{\n            console.log(s.edition_id, s.page, s.scan_id);\n            if(localStorage.getItem(\"argos_currentPages\")){\n                let savedPages = JSON.parse(localStorage.getItem(\"argos_currentPages\"));\n                if(savedPages.find(p=>p.edition_id===s.edition_id)){\n                    localStorage.setItem(\"argos_currentPages\", JSON.stringify(savedPages.map(p=>{\n                        if(p.edition_id!==s.edition_id){return p}\n                        else{return {edition_id: s.edition_id, scan_id: s.scan_id}}\n                    })));\n                }else{\n                    savedPages.push({edition_id: s.edition_id, scan_id: s.scan_id});\n                    localStorage.setItem(\"argos_currentPages\", JSON.stringify(savedPages));\n                }\n                \n            }else{\n                localStorage.setItem(\"argos_currentPages\", JSON.stringify([{edition_id: s.edition_id, scan_id: s.scan_id}]))\n            }\n            props.loadMain(e, \"edition\", s.edition_id);\n        }}><b>Seite {isNaN(s.page)?s.page:parseInt(s.page)}:</b>{s.auto_text?<small style={{fontStyle: \"italic\"}} className=\"text-danger\">&nbsp;(auto)</small>:null}</div><div style={{marginLeft: \"20px\"}}>{s.section}</div></div>):<div><Spinner variant=\"primary\" size=\"sm\" animation=\"border\" /></div>}\n    </>;\n}\n\nexport { SearchBox }","import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Overview } from \"./overview.js\";\nimport { Edition, getEditions, storeEdition } from \"./edition.js\";\nimport { ChangeLog } from \"./changelog.js\";\nimport { SearchBox } from \"./search.js\";\nimport { Account } from \"./../settings.js\";\n\nfunction arachneTbls(){\n    return [\"author\", \"edition\", \"scan_opera\", \"scan_opera_view\", \"scan\", \"scan_lnk\", \"work\", \"fulltext_search_view\"];\n}\nfunction MainBody(props){\n    useEffect(()=>{\n        const fetchData=async ()=>{const urlQueries = new URLSearchParams(window.location.search);\n            if(props.resId===null&&urlQueries.get(\"id\")){\n                const newRes = await arachne.edition.get({id: urlQueries.get(\"id\")}, {select: [\"id\", \"label\", \"ac_web\"]});\n                if(newRes.length===1){\n                    storeEdition(newRes[0].id, newRes[0].label, newRes[0].ac_web);\n                    props.loadMain(null, \"edition\", newRes[0].id)\n                }\n            }\n        };\n        fetchData();\n    }, []);\n    let main = null;\n    switch(props.res){\n        case null:\n            main = <Overview loadMain={(...params)=>{props.loadMain(...params)}} />;\n            break;\n        case \"edition\":\n            main = <Edition resId={props.resId} loadMain={(...params)=>{props.loadMain(...params)}} />;\n            break;\n        case \"changelog\":\n            main = <ChangeLog />;\n            break;\n        case \"search\":\n            main = <SearchBox loadMain={(...params)=>{props.loadMain(...params)}} />;\n            break;\n        case \"account\":\n            main = <Account />;\n            break;\n        default:\n            main = <div>Unbekannter Menü-Punkt: \"{props.res}\"</div>;\n    }\n    return main;\n}\n\nfunction MainNavBar(props){\n    const [editions, setEditions] = useState([]);\n    const [editionTxt, setEditionTxt] = useState(\"zuletzt geöffnet\");\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            const newEditions = getEditions();\n            setEditions(newEditions.map(e=>{return <NavDropdown.Item key={e.id} onClick={ev=>{storeEdition(e.id, e.label, e.opus);props.loadMain(ev,\"edition\", e.id)}}>{e.label}{e.opus?` (${e.opus.substring(0,20)+(e.opus.length>20?\"...\":\"\")})`:null}</NavDropdown.Item>;}));\n            if(props.res===\"edition\"){setEditionTxt(newEditions[0].label+(newEditions[0].opus?` (${newEditions[0].opus.substring(0,20)+(newEditions[0].opus.length>20?\"...\":\"\")})`:null))}\n            else{setEditionTxt(\"zuletzt geöffnet\")}\n        }\n        fetchData();\n    }, [props.res, props.resId]);\n    return <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Container fluid>\n            <Navbar.Brand style={{cursor: \"pointer\"}} onClick={e=>{props.loadMain(e, null)}}>Argos</Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Nav>\n                    <Nav.Link>\n                        <span onClick={e=>{props.loadMain(e, \"search\")}}>Volltext-Suche</span>\n                    </Nav.Link>\n                    <NavDropdown title={editionTxt}>{editions}\n                    </NavDropdown>\n                    <NavDropdown title=\"Einstellungen\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"account\")}}>Konto</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e=>{props.loadMain(e,\"changelog\")}}>Änderungen</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link>\n                        <FontAwesomeIcon icon={faSignOutAlt} onClick={e => {props.loadMain(e, \"logout\")}} title=\"abmelden\" />\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n</Navbar>;\n}\nexport { arachneTbls, MainBody, MainNavBar };","import { Row, Col, Form, Container } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { StatusButton } from \"./elements.js\";\n\nfunction Account(){\n    const [firstName, setFirstName] = useState(arachne.me.first_name);\n    const [lastName, setLastName] = useState(arachne.me.last_name);\n    const [email, setEmail] = useState(arachne.me.email);\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [zWidth, setZWidth] = useState(arachne.options.z_width);\n    const [actionKey, setActionKey] = useState(arachne.options.action_key);\n\n    const displaySettings = [\n        <Row key={1} className=\"mb-2\">\n            <Col xs={2}>Breite der Zettel:</Col>\n            <Col><Form.Range min=\"400\" max=\"600\" size=\"sm\" value={zWidth} onChange={e=>{\n                arachne.setOptions(\"z_width\", e.target.value);\n                arachne.setOptions(\"z_height\", 350/500*parseInt(e.target.value));\n                setZWidth(e.target.value);\n            }}/></Col>\n        </Row>\n    ];\n    return <Container style={{padding: \"0 10% 0 10%\"}}>\n        <Row><Col><h3>Persönliche Daten</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Vorname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={firstName} onChange={e=>{setFirstName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Nachname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={lastName} onChange={e=>{setLastName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>Email-Adresse:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={email} onChange={e=>{setEmail(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: firstName,\n                        last_name: lastName,\n                        email: email,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Passwort</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>altes Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={oldPassword} onChange={e=>{setOldPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>neues Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={newPassword} onChange={e=>{setNewPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: oldPassword,\n                        new_password: newPassword\n                    });\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Darstellung und Benutzung</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Funktionstaste für Tastenkürzel</Col>\n            <Col>\n                <Form.Select size=\"sm\" value={actionKey} onChange={e=>{arachne.setOptions(\"action_key\", e.target.value);setActionKey(e.target.value)}}>\n                    <option value=\"alt\">Alt</option>\n                    <option value=\"ctrl\">Strg</option>\n                    <option value=\"cmd\">Befehlstaste</option>\n                </Form.Select>\n                <small>Eine Liste mit Tastenkürzeln finden Sie <a className=\"text-primary\">hier</a>.</small>\n            </Col>\n        </Row>\n        {displaySettings}\n    </Container>;\n}\n\nexport { Account };"],"names":["InputGroupText","createWithBsPrefix","Component","InputGroup","React","ref","bsPrefix","size","hasValidation","className","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","value","children","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","Settings","attrs","localStorage","getItem","undefined","JSON","parse","zoom","query","mode","this","key","setItem","stringify","storeEdition","id","label","opus","editions","filter","e","length","splice","unshift","getEditions","Edition","settings","useState","aspectRatio","setAspectRatio","sideMenu","setSideMenu","get","setQuery","useEffect","set","queryResults","setQueryResults","queryResultIndex","setQueryResultIndex","ressource","setRessource","setMode","fullTxt","setFullTxt","pages","setPages","scrollPos","setScrollPos","scrollLock","setScrollLock","editMode","setEditMode","setZoom","shortCutLst","loadMain","el","document","getElementById","focus","useShortcuts","fetchData","arachne","resId","newRessource","aspect_ratio","edition_id","nPages","sort","a","b","filename","currentPage","find","p","scrollPageIntoView","scan_id","hasFullTxt","full_text","fLst","r","search","element","scrollIntoView","Container","onScroll","target","scrollTop","setTimeout","style","position","top","left","right","bottom","overflow","fluid","map","Row","Col","align","Image","page","NavBarBottom","m","q","searchQuery","i","z","SideMenu","item","Offcanvas","show","onHide","placement","closeButton","SideOpera","SideEdition","SideScans","SideContent","v","xs","ListGroup","variant","textAlign","action","onClick","behavior","block","parseInt","scans","setScans","path","nScans","togglePage","includes","concat","s","active","onMouseEnter","metaKey","ctrlKey","newLnks","status","work","setWork","author","setAuthor","work_id","nWork","author_id","nAuthor","dangerouslySetInnerHTML","parseHTML","date_display","author_display","abbr","full","marginLeft","bibliography","citation","txt_info","setWork_id","ac_web","setAc_web","editor","setEditor","year","setYear","volume","setVolume","vol_cont","volCont","setVolCont","serie","setSerie","location","setLocation","library","setLibrary","signature","setSignature","comment","setComment","setPath","url","setUrl","bibliography_preview","setBibliography_preview","select","tbl","searchCol","returnCol","onChange","dir_name","backgroundColor","fontSize","options","width","height","substring","error","isVisible","setIsVisible","imgRef","useRef","img","setImg","useIntersectionObserver","onIntersect","observerElement","intersectionRatio","isIntersecting","isNaN","unobserve","current","boxShadow","borderRadius","src","alt","TextBlock","cols","setCols","containerRef","fullText","replace","RegExp","colDelimiter","indexOf","contentEditable","onBlur","color","auto_text","minHeight","padding","gotoPageError","setGotoPageError","items","push","Navbar","fixed","bg","Form","placeholder","onKeyUp","keyCode","display","marginRight","Button","window","scrollTo","borderBottom","borderTop","margin","border","background","onKeyDown","preventDefault","currentFilename","padStart","min","max","menuItems","Overview","prop","fullTextLst","setFullTextLst","editionHits","setEditionHits","opera","setOpera","operaCount","setOperaCount","setCurrentPage","Math","ceil","nFullTxtLst","nEditionHits","c","o","count","newOpera","limit","offset","openEdition","Table","editions_label","editions_id","editions_url","editions_type","hits","h","f","in_use","href","ev","queryTxt","setQueryTxt","FormControl","loadPage","newPage","maxPage","ChangeLog","Alert","SearchBox","resultLabel","setResultLabel","setMaxPage","results","setResults","searchAutoText","setSearchAutoText","Spinner","animation","group","newResultsCount","floor","newResults","checked","ResultRow","sections","setSections","sectionsCount","setSectionsCount","newPages","newSections","newSectionsCount","forEach","maxHits","matchAll","currentIndex","section","paddingTop","cursor","console","log","savedPages","fontStyle","arachneTbls","MainBody","urlQueries","URLSearchParams","newRes","main","res","MainNavBar","setEditions","editionTxt","setEditionTxt","newEditions","NavDropdown","Nav","title","icon","faSignOutAlt","Account","firstName","setFirstName","lastName","setLastName","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","zWidth","setZWidth","actionKey","setActionKey","displaySettings","first_name","last_name","reUser","old_password","new_password"],"sourceRoot":""}