{"version":3,"file":"static/js/460.23cac043.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return { ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, { ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, { ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  chart.options = { ...nextOptions };\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options,\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update();\n    }\n  }, [redraw, options, data.labels, data.datasets]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["usePlaceholder","animation","bg","bsPrefix","size","props","useBootstrapPrefix","useCol","className","colProps","classNames","PlaceholderButton","React","ref","placeholderProps","_jsx","Button","disabled","tabIndex","displayName","Placeholder","as","Component","Object","assign","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","value","isArray","type","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","v","r","g","isShort","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names$1","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","me","w2","c1","c2","w1","val","deg","rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","split","set","root","scope","values","Defaults","_descriptors","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","get","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","native","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","to","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","getRelativePosition$1","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","nextOptions","role","forwardRef","createTypedChart","registerables","Bar","Pie"],"sourceRoot":""}