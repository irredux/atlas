{"version":3,"file":"static/js/828.7dc3c49c.chunk.js","mappings":"wSAIA,SAAUA,IACN,OAAO,UAACC,EAAA,EAAD,YAMH,UAACC,EAAA,EAAD,CAAOC,QAAQ,OAAf,WACI,SAACD,EAAA,UAAD,0BACA,wCACA,sIAAsG,SAAC,IAAD,CAAiBE,KAAMC,EAAAA,MAA7H,qGAEJ,UAACH,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,2CACA,wEAA8C,iCAA9C,kBAEJ,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,2CACA,gFACA,2BACI,kGACA,oEACA,qGAEJ,oGAA0E,kIAA1E,QACA,2BACI,yCACA,6DAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,8GACA,qFACA,6EAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,wEACA,uEACA,6DAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,6FACA,uHACA,iFACA,4LACA,uFAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,iHACA,sFACA,6FACA,+FAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,oJACA,gHAGR,UAACA,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,yBAAI,SAACA,EAAA,OAAD,CAAYI,KAAK,oDAAjB,2BACJ,4GACA,iHACA,iGACA,6IACA,2FACA,8GACA,oFAGR,UAACJ,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACI,SAACD,EAAA,UAAD,yBACA,6CACA,gFACA,2BACI,gLACA,0KACA,8EACA,qGACA,6CAAgB,SAAC,IAAD,CAAiBE,KAAMC,EAAAA,MAAvC,6EACA,kHACA,4FAAyD,SAAC,IAAD,CAAiBD,KAAMC,EAAAA,MAAhF,+DACA,4HACA,gGAGR,UAACH,EAAA,EAAD,CAAOC,QAAQ,YAAf,WACA,SAACD,EAAA,UAAD,yBACA,4CACA,iEAAuC,SAACA,EAAA,OAAD,CAAYK,OAAO,SAASD,KAAK,oCAAjC,uBAAvC,gEAA8L,SAAC,IAAD,CAAiBF,KAAMI,EAAAA,MAArN,c,kKCrHFC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACC,KAAM,KAAMC,eAAgB,MAF5B,EA2FlB,OAxFC,8BAED,WAAS,IAAD,OACJ,OAAO,iCACH,SAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACI,SAACH,EAAA,WAAD,CAAiBI,UAAU,wBAA3B,UACI,SAACJ,EAAA,OAAD,WACI,SAAC,KAAD,CACAK,QAAQ,QACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CC,WAAYC,KAAKb,MAAME,eACvBY,cAAe,CACX,CAAC,QAAS,QACV,CAAC,WAAY,gBACb,CAAC,KAAM,MACP,CAAC,QAAS,sBACV,CAAC,UAAW,aACZ,CAAC,WAAY,eACb,CAAC,MAAO,OACR,CAAC,QAAS,SACV,CAAC,eAAgB,iBAErBC,YAAa,CAAC,CAAC,SAAU,MAAO,CAAC,YAAa,UAC9CC,OAAQH,KAAKb,MAAMiB,oBAI3B,UAACd,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,WACI,SAACJ,EAAA,OAAD,UACCU,KAAKb,MAAMkB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKb,MAAMqB,YAAaC,QAAST,KAAKb,MAAMsB,UAChH,QAED,SAACnB,EAAA,OAAD,UACKoB,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASC,UAAW,CACvC,CAAC,cAAD,iBAAe,wFACRC,OAAOC,QAAQ,wCADP,gCAEaH,EAAAA,EAAAA,MAAAA,KAAmB,CAACI,cAAc,aAAcC,MAAM,eAFnE,OAEDC,EAFC,OAGP,EAAKC,SAAS,CAAC5B,eAAgB,CAAC,CAAC6B,GAAI,EAAGC,EAAG,KAAMC,EAAG,IAAKC,EAAEL,MAHpD,0DAWvC,SAACvC,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACI,SAAC4B,EAAD,CACIC,SAAU,SAACC,EAAGC,GAAO,EAAKvC,MAAMqC,SAASC,EAAGC,IAC5CnB,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCmB,gBAAiB1B,KAAKb,MAAMuC,gBAC5BrB,MAAOL,KAAKb,MAAMkB,MAClBG,YAAaR,KAAKb,MAAMqB,YACxBC,QAAST,KAAKb,MAAMsB,QACpBkB,SAAW3B,KAAKb,MAAMC,KAAM,UAAU,UACtCwC,WAAY,SAAAxC,GACR,EAAK6B,SAAS,CAAC7B,KAAMA,SAI/BY,KAAKb,MAAMC,MAAM,SAACyC,EAAD,CAAYzC,KAAMY,KAAKb,MAAMC,KAAM0C,SAAU,SAAAZ,GAAK,EAAKa,YAAYb,IAAMc,SAAU,WAAK,EAAK1B,SAAS,EAAKnB,MAAMqB,cAAeyB,QAAS,WAAK,EAAKhB,SAAS,CAAC7B,KAAM,UAAY,QAEzM,4DACD,WAAkB8B,GAAlB,2FACwBR,EAAAA,EAAAA,MAAAA,IAAkB,CAACQ,GAAIA,IAD/C,OACqDgB,GAA7CA,EADR,QACuE,GAC/DR,EAAkB1B,KAAKb,MAAMuC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAKgB,EAAQhB,MACrEQ,EAAgBS,GAAkBD,EAClClC,KAAKiB,SAAS,CAACS,gBAAiBA,EAAiBtC,KAAM8C,IAL3D,mGADC,IACD,4DAOA,WAAkBI,EAAUxC,GAA5B,gFACIE,KAAKiB,SAAS,CAACb,cAAc,SAACmC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SADlE,SAEwB/B,EAAAA,EAAAA,MAAAA,OAAqB4B,EAAU,CAACjC,OAAM,EAAMP,MAAMA,IAF1E,cAEUO,EAFV,gBAGkCK,EAAAA,EAAAA,MAAAA,OAAqB4B,EAAU,CAACI,MAAM,GAAI5C,MAAMA,IAHlF,OAGU4B,EAHV,OAIOrB,EAAM,GAAN,MAAkB,EAAGL,KAAKiB,SAAS,CAACb,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKiB,SAAS,CAACb,aAAc,wBACvDJ,KAAKiB,SAAS,CAACb,aAAc,gCAClCJ,KAAKiB,SAAS,CACV0B,MAAOL,EACPM,WAAY9C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASoC,KAAKC,MAAMzC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbkB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MAd9B,qGAPA,IAOA,yDAiBA,WAAezC,GAAf,uFACkCG,EAAAA,EAAAA,MAAAA,OAAqBV,KAAKb,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAX1C,EAAQ,GAAQT,MAAME,KAAKb,MAAMyD,aAD9H,OACUlB,EADV,OAEQ1B,KAAKiB,SAAS,CACVT,YAAaD,EACbmB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MALlC,mGAjBA,MAiBA,EA5FE/D,CAAciE,EAAAA,WAqGd5B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYpC,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAwBjB,OArBA,8BACD,WAAS,IAAD,OACJ,GAAGhD,KAAKd,MAAMmB,MAAM,EAAE,CAClB,IADkB,EACdgD,EAAO,GADO,UAEDrD,KAAKd,MAAMwC,iBAFV,yBAER4B,EAFQ,QAGdD,EAAKE,MAAK,gBAAiBrC,GAAIoC,EAAIpC,GAAIsC,cAAe,SAAAhC,GAAI,EAAKtC,MAAM0C,WAAW,EAAK1C,MAAMwC,gBAAgB+B,MAAK,SAAApB,GAAC,OAAGA,EAAEnB,KAAOwC,SAASlC,EAAEzC,OAAO4E,QAAQ,MAAMzC,SAAnJ,WAA2J,eAAI0C,MAAO,OAAON,EAAIpC,GAAtB,UAA0B,cAAG2C,yBAAyBC,EAAAA,EAAAA,IAAUR,EAAIxC,eAAgBiD,QAAS,SAAAvC,GAC9PwC,aAAaC,QAAQ,mBAArB,+CAAiFX,EAAIpC,GAArF,iBACA,EAAKhC,MAAMqC,SAASC,EAAG,gBACf,eAAIqC,yBAAyBC,EAAAA,EAAAA,IAAUR,EAAIY,UAAa,eAAIL,yBAAyBC,EAAAA,EAAAA,IAAUR,EAAIa,aAH5Fb,EAAIpC,MAD3B,IAAI,EAAJ,qBAA6C,IAF3B,8BASlB,OACA,gBAAKkD,MAAO,CAACzC,SAAU3B,KAAKd,MAAMyC,SAAU0C,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACI,kBAAOJ,MAAO,CAACK,UAAU,QAAzB,UAAkC,2BAAI,eAAID,MAAM,MAAV,yBAA+B,eAAIA,MAAM,MAAV,iCAAiC,4CACtG,2BAAQnB,SAIhB,OAAO,SAAC,KAAD,QAEd,EAzBC/B,CAAiB4B,EAAAA,WA2BjBrB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY3C,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACT+B,GAAI,EAAKhC,MAAME,KAAK8B,GACpBH,MAAO,EAAK7B,MAAME,KAAK2B,MACvBD,cAAe,EAAK5B,MAAME,KAAK0B,cAC/B4D,SAAU,EAAKxF,MAAME,KAAKsF,SAC1BC,IAAK,EAAKzF,MAAME,KAAKuF,IACrBC,MAAO,EAAK1F,MAAME,KAAKwF,MACvBC,aAAc,EAAK3F,MAAME,KAAKyF,aAC9BV,QAAS,EAAKjF,MAAME,KAAK+E,QACzBD,MAAO,EAAKhF,MAAME,KAAK8E,OAXb,EAiHjB,OApGA,8BACD,WAAS,IAAD,OACJ,OAAO,UAACY,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjG,MAAM+C,WAA9F,WACH,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB9E,KAAKb,MAAM+B,SAEpC,SAAC4D,EAAA,OAAD,WACI,UAACrG,EAAA,EAAD,YACI,UAAC4G,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,qBACA,SAACA,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAM4B,MAAO0E,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACF,MAAO2E,EAAM3G,OAAOyG,iBAE1G,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,6BACA,SAACA,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,OAAOG,EAAAA,EAAAA,IAAiB3F,KAAKb,MAAM2B,eAAgB2E,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACH,cAAe4E,EAAM3G,OAAOyG,iBAE5I,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,4BACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAKH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACyD,SAAUgB,EAAM3G,OAAOyG,SAAUA,MAAOxF,KAAKb,MAAMuF,iBAE7K,UAACW,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,iCACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAAC0D,IAAKe,EAAM3G,OAAOyG,SAAUA,MAAOxF,KAAKb,MAAMwF,YAEvI,UAACU,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,sBACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAAC2D,MAAOc,EAAM3G,OAAOyG,SAAUA,MAAOxF,KAAKb,MAAMyF,cAEzI,UAACS,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,6BACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAAC4D,aAAca,EAAM3G,OAAOyG,SAAUA,MAAOxF,KAAKb,MAAM0F,qBAEhJ,UAACQ,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,mCACA,SAACA,EAAA,EAAD,WAAK,qBAAUlB,MAAO,CAACI,MAAO,QAASqB,OAAQ,QAASL,MAAOxF,KAAKb,MAAM+E,MAAMlE,KAAKb,MAAM+E,MAAM4B,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAK,GAAIL,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACiD,MAAOwB,EAAM3G,OAAOyG,iBAE1M,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,0BACA,SAACA,EAAA,EAAD,WAAK,qBAAUlB,MAAO,CAACI,MAAO,QAASqB,OAAQ,SAAUL,MAAOxF,KAAKb,MAAMgF,QAAQnE,KAAKb,MAAMgF,QAAQ2B,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAK,GAAIL,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACkD,QAASuB,EAAM3G,OAAOyG,iBAEjN,SAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,SAAC4F,EAAA,EAAD,WAAK,8BAAO,cAAGxG,KAAK,4EAA4EC,OAAO,SAASgH,IAAI,aAAxG,kBAAP,kEAET,SAACV,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACA,SAAC,KAAD,CAAcE,MAAM,YAAYzB,SAAO,iBAAE,yFACvB,KAAnB,EAAK5E,MAAM4B,OAAc,EAAK5B,MAAM4B,MAAMiF,QAAQ,MAAM,GADd,yCAElC,CAAC7F,QAAQ,EAAO8F,MAAO,0CAFW,UAGR,KAA3B,EAAK9G,MAAM2B,cAHwB,yCAIlC,CAACX,QAAQ,EAAO8F,MAAO,uDAJW,cAMrCC,EAAgB,CAChBhF,GAAI,EAAK/B,MAAM+B,GACfH,MAAO,EAAK5B,MAAM4B,MAClBD,cAAe,EAAK3B,MAAM2B,cAC1B6D,IAAK,EAAKxF,MAAMwF,IAChBE,aAAc,EAAK1F,MAAM0F,aACzBD,MAAO,EAAKzF,MAAMyF,MAClBT,QAAS,EAAKhF,MAAMgF,QACpBD,MAAO,EAAK/E,MAAM+E,MAClBQ,SAAU,EAAKvF,MAAMuF,UAfgB,UAiBrBhE,EAAAA,EAAAA,MAAAA,KAAmBwF,GAjBE,sBAkBzC,EAAKhH,MAAM4C,SAAS,EAAK3C,MAAM+B,IAlBU,kBAmBlC,CAACf,QAAQ,IAnByB,8CAsBhDO,EAAAA,EAAAA,OAAe,WAAU,SAAC,KAAD,CAAc0D,MAAO,CAAC+B,WAAY,QAASxH,QAAQ,SAAS6G,MAAM,aAAUzB,SAAO,iBAAE,gGACxGnD,OAAOC,QAAQ,wJADyF,iCAE/EH,EAAAA,EAAAA,OAAAA,IAAmB,CAAC0F,SAAU,EAAKjH,MAAM+B,KAFsC,OAEjGmF,EAFiG,OAGnGC,EAAmB,GAHgF,UAInFD,GAJmF,IAIvG,IAAI,EAAJ,qBAAUE,EAAoB,QAC1BD,EAAiB/C,KAAK,CAACrC,GAAIqF,EAAOrF,GAAIkF,SAAU,OALmD,mCAOpGE,EAAiBE,OAAO,GAP4E,kCAOnE9F,EAAAA,EAAAA,OAAAA,KAAoB4F,GAP+C,yBAQjG5F,EAAAA,EAAAA,MAAAA,OAAqB,EAAKvB,MAAM+B,IARiE,eASvG,EAAKhC,MAAM+C,UACX,EAAK/C,MAAM8C,WAV4F,kBAWhG,CAAC7B,QAAQ,IAXuF,8CAazG,oBAKjB,gCACD,WACOH,KAAKb,MAAM+B,KAAKlB,KAAKd,MAAME,KAAK8B,IAC/BlB,KAAKiB,SAAS,CACVC,GAAIlB,KAAKd,MAAME,KAAK8B,GACpBH,MAAOf,KAAKd,MAAME,KAAK2B,MACvBD,cAAed,KAAKd,MAAME,KAAK0B,cAC/B4D,SAAU1E,KAAKd,MAAME,KAAKsF,SAC1BC,IAAK3E,KAAKd,MAAME,KAAKuF,IACrBC,MAAO5E,KAAKd,MAAME,KAAKwF,MACvBC,aAAc7E,KAAKd,MAAME,KAAKyF,aAC9BV,QAASnE,KAAKd,MAAME,KAAK+E,QACzBD,MAAOlE,KAAKd,MAAME,KAAK8E,YAGlC,EAlHCrC,CAAmBqB,EAAAA,W,uCC7HnBuD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYvH,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACuH,OAAQ,KAAMC,KAAM,KAAMC,UAAW,IAFrC,EAwIjB,OArIA,8BACD,WAAS,IAAD,OACJ,OAAO,UAAC9B,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjG,MAAM+C,WAA9F,WACH,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,SAACN,EAAA,QAAD,OAEJ,UAACA,EAAA,OAAD,WACK9E,KAAKb,MAAMuH,SAAQ,iBAAKtC,MAAO,CAC5ByC,QAAS,OACTC,oBAAqB,aACrBC,OAAQ,OACRC,OAAQ,KAJQ,WAMhB,oCAAU,eAAG5C,MAAO,CAAC6C,SAAU,OAArB,iBAAkCjH,KAAKb,MAAMuH,OAAOxF,GAApD,WAAiE,oBAC3E,oCAAgB,0BAAK,kBAAOqE,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOQ,KAAKlH,KAAKb,MAAMuH,OAAOQ,KAAKpB,QAAQ,QAAS,KAAKA,QAAQ,QAAQ,KAAK,GAAIL,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQD,KAAO1F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UAC9O,4CAAqB,0BAAK,kBAAO5B,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOU,KAAM3B,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQC,KAAO5F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UAC9K,yDAAkC,0BAAK,kBAAO5B,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOW,UAAW5B,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQE,UAAY7F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UACrM,4CAAwB,0BAAK,kBAAO5B,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOY,aAAc7B,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQG,aAAe9F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UACjM,4CAAwB,0BAAK,kBAAO5B,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOa,UAAW9B,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQI,UAAY/F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UAC3L,gDAA4B,0BAAK,kBAAO5B,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuH,OAAOc,UAAW/B,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQK,UAAYhG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UAC/L,4CAAwB,0BAAK,SAAC,KAAD,CAAY/C,MAAO,CAACI,MAAO,OAAQoB,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQJ,MAAOxF,KAAKb,MAAMuH,OAAOe,OAAQhC,SAAU,SAAAjE,GAAI,IAAI2F,EAAU,EAAKhI,MAAMuH,OAAOS,EAAQM,OAASjG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAACyF,OAAOS,UACxO,oBAAW,4BACP,SAAC,KAAD,CAAc3B,MAAM,YAAYzB,SAAO,iBAAE,8FACnCrD,EAAAA,EAAAA,OAAAA,KAAoB,EAAKvB,MAAMuH,QADI,cAEzC,EAAKxH,MAAM4C,WAF8B,kBAGlC,CAAC3B,QAAQ,IAHyB,8CAKzC,SAAC,KAAD,CAAcqF,MAAM,aAAU7G,QAAQ,SAASyF,MAAO,CAAC+B,WAAY,QAASpC,SAAO,iBAAE,4GAC7DrD,EAAAA,EAAAA,KAAAA,OAAoB,CAAC,CAACS,EAAG,YAAaC,EAAG,IAAKC,EAAG,EAAKlC,MAAMuH,OAAOxF,KAAM,CAACwG,OAAQ,CAAC,QADtB,OAC3EC,EAD2E,OAE7EC,EAAU,GAFmE,UAG/DD,GAH+D,IAGjF,IAAI,EAAJ,qBAAUhB,EAAc,QACpBiB,EAAQrE,KAAKoD,EAAKzF,IAJ2D,kCAM9EN,OAAOC,QAAP,sDAA2D+G,EAAQpB,OAAO,EAAEoB,EAAQpB,OAAO,8BAA2B,+BAAtH,4FAN8E,sBAO1EoB,EAAQpB,OAAO,GAP2D,kCAOlD9F,EAAAA,EAAAA,KAAAA,OAAoBkH,GAP8B,yBAQvElH,EAAAA,EAAAA,OAAAA,OAAsB,EAAKvB,MAAMuH,OAAOxF,IAR+B,yBASvER,EAAAA,EAAAA,KAAa,gBAT0D,eAU7E,EAAKxB,MAAM8C,WAVkE,kBAWtE,CAAC7B,QAAQ,IAX6D,iCAYnE,CAACA,OAAQ,IAZ0D,oDAiB5FH,KAAKb,MAAMwH,OAAM,iBAAKvC,MAAO,CAC1ByC,QAAS,OACTC,oBAAqB,aACrBC,OAAQ,OACRC,OAAQ,UAJM,WAMd,mCAAS,eAAG5C,MAAO,CAAC6C,SAAU,OAArB,kBAAmCjH,KAAKb,MAAMwH,KAAKzF,GAAnD,WAAgE,oBACzE,yCAAqB,0BAAK,kBAAOqE,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKO,KAAKlH,KAAKb,MAAMwH,KAAKO,KAAKpB,QAAQ,QAAS,KAAKA,QAAQ,QAAQ,KAAK,GAAIL,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMX,KAAO1F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACvO,4CAAqB,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKS,KAAM3B,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMT,KAAO5F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACpK,yDAAkC,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKU,UAAW5B,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMR,UAAY7F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UAC3L,4CAAwB,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKW,aAAc7B,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMP,aAAe9F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACvL,4CAAwB,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKY,UAAW9B,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMN,UAAY/F,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACjL,gDAA4B,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKa,UAAW/B,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAML,UAAYhG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACrL,kEACU,kCADV,SACiC,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKmB,eAAgBrC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMC,eAAiBtG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACpM,+CAA2B,0BAAK,SAAC,KAAD,CAAYzD,MAAO,CAACI,MAAO,OAAQoB,QAAS5F,KAAKb,MAAMyH,UAAWpB,MAAOxF,KAAKb,MAAMwH,KAAKoB,UAAWtC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAME,UAAYvG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACnO,8CAAoB,iBAAMnI,UAAU,WAAhB,wBAA8C,0BAAK,kBAAO6F,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKqB,SAAUvC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMG,SAAWxG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACzN,4DAAkC,cAAGnI,UAAU,WAAb,8BAA8C,0BAAK,kBAAO6F,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKsB,iBAAkBxC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMI,iBAAmBzG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACvP,wCAAoB,0BAAK,kBAAOtC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwH,KAAKuB,UAAWzC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMK,UAAY1G,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UAC7K,4CAAwB,0BAAK,SAAC,KAAD,CAAYzD,MAAO,CAACI,MAAO,OAAQoB,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQJ,MAAOxF,KAAKb,MAAMwH,KAAKc,OAAQhC,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMJ,OAASjG,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UAC9N,4BAAK,sCAAL,QAA6B,0BAAK,SAAC,KAAD,CAAYzD,MAAO,CAACI,MAAO,OAAQoB,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQJ,MAAOxF,KAAKb,MAAMwH,KAAKwB,SAAU1C,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMM,SAAW3G,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,UACvO,yCAAqB,0BAAK,qBAAUrC,MAAOxF,KAAKb,MAAMwH,KAAKyB,SAAU3C,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMO,SAAW5G,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,KAAUzD,MAAO,CAACI,MAAO,QAASqB,OAAQ,cAC7M,6CAAyB,0BAAK,qBAAUL,MAAOxF,KAAKb,MAAMwH,KAAK0B,aAAc5C,SAAU,SAAAjE,GAAI,IAAIqG,EAAQ,EAAK1I,MAAMwH,KAAKkB,EAAMQ,aAAe7G,EAAEzC,OAAOyG,MAAM,EAAKvE,SAAS,CAAC0F,KAAKkB,KAAUzD,MAAO,CAACI,MAAO,QAASqB,OAAQ,cACzN,oBAAW,4BACP,SAAC,KAAD,CAAcL,MAAM,YAAYzB,SAAO,iBAAE,8FACnCrD,EAAAA,EAAAA,KAAAA,KAAkB,EAAKvB,MAAMwH,MADM,cAEzC,EAAKzH,MAAM4C,WAF8B,kBAGlC,CAAC3B,QAAQ,IAHyB,8CAK7C,SAAC,KAAD,CAAcqF,MAAM,aAAU7G,QAAQ,SAASyF,MAAO,CAAC+B,WAAY,QAASpC,SAAO,iBAAE,oGACzDrD,EAAAA,EAAAA,KAAAA,OAAoB,CAAC,CAACS,EAAG,YAAaC,EAAG,IAAKC,EAAG,EAAKlC,MAAMwH,KAAKoB,YAAa,CAAC1H,OAAO,IAD7B,UAC3EiI,EAD2E,SAEnEA,EAAU,GAAGjI,MAClB,GAHwE,yCAItE,CAACF,QAAS,EAAG8F,MAAO,iFAJkD,WAKvErF,OAAOC,QAAQ,8GALwD,kCAMvEH,EAAAA,EAAAA,KAAAA,OAAoB,EAAKvB,MAAMwH,KAAKzF,IANmC,yBAOvER,EAAAA,EAAAA,KAAa,gBAP0D,eAQ7E,EAAKxB,MAAM8C,WARkE,kBAStE,CAAC7B,QAAQ,IAT6D,iCAUpE,CAACA,OAAQ,IAV2D,4DAepG,+BACD,WAAoB,IAAD,OACToI,EAAW,mCAAG,4GACM7H,EAAAA,EAAAA,OAAAA,OAAsB,CAACgH,OAAQ,CAAC,KAAM,QAAS5H,MAAO,CAAC,eAD7D,OACV0I,EADU,OAEZC,EAAe,GAFH,UAGID,GAHJ,IAGhB,IAAI,EAAJ,qBAAU9B,EAAkB,QACxB+B,EAAalF,KAAK,CAACmD,EAAOxF,GAAIwF,EAAOU,OAJzB,8BAMhB,EAAKnG,SAAS,CAAC2F,UAAW6B,IANV,2CAAH,qDASjB,GADAF,IACGvI,KAAKd,MAAME,KAAK2I,UAAU,EAAE,CAC3B,IAAMW,EAAS,mCAAG,oGACUhI,EAAAA,EAAAA,OAAAA,IAAmB,CAACQ,GAAI,EAAKhC,MAAME,KAAK2I,YADlD,OACRY,EADQ,OAEd,EAAK1H,SAAS,CAACyF,OAAQiC,EAAU,KAFnB,2CAAH,qDAIfD,IAEJ,GAAG1I,KAAKd,MAAME,KAAKwJ,QAAQ,EAAE,CACzB,IAAMC,EAAO,mCAAG,oGACUnI,EAAAA,EAAAA,KAAAA,IAAiB,CAACQ,GAAI,EAAKhC,MAAME,KAAKwJ,UADhD,OACNE,EADM,OAEZ,EAAK7H,SAAS,CAAC0F,KAAMmC,EAAQ,KAFjB,2CAAH,qDAIbD,OAEP,gCACD,SAAmBE,GAAW,IAAD,OACzB,GAAGA,EAAU3J,KAAK2I,WAAW/H,KAAKd,MAAME,KAAK2I,UACzC,GAAG/H,KAAKd,MAAME,KAAK2I,UAAU,EAAE,CAC3B,IAAMW,EAAS,mCAAG,oGACUhI,EAAAA,EAAAA,OAAAA,IAAmB,CAACQ,GAAI,EAAKhC,MAAME,KAAK2I,YADlD,OACRY,EADQ,OAEd,EAAK1H,SAAS,CAACyF,OAAQiC,EAAU,KAFnB,2CAAH,qDAIfD,SACE1I,KAAKiB,SAAS,CAACyF,OAAQ,OAEjC,GAAGqC,EAAU3J,KAAKwJ,SAAS5I,KAAKd,MAAME,KAAKwJ,QACvC,GAAG5I,KAAKd,MAAME,KAAKwJ,QAAQ,EAAE,CACzB,IAAMC,EAAO,mCAAG,oGACUnI,EAAAA,EAAAA,KAAAA,IAAiB,CAACQ,GAAI,EAAKhC,MAAME,KAAKwJ,UADhD,OACNE,EADM,OAEZ,EAAK7H,SAAS,CAAC0F,KAAMmC,EAAQ,KAFjB,2CAAH,qDAIbD,SACE7I,KAAKiB,SAAS,CAAC0F,KAAM,WAElC,EAzICF,CAAmBvD,EAAAA,WA2InB8F,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY9J,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAAC8J,KAAM,GAAIC,OAAQ,GAChC,EAAKC,cAAgB,GAHP,EAmUjB,OA/TA,8BACD,WAAS,IAAD,OACAC,EAAQ,GACRC,EAAS,GACThH,EAAI,EACJiH,EAAI,EACRtJ,KAAKuJ,UAAY,KALb,gBAMavJ,KAAKd,MAAMsK,QANxB,yBAMMC,EANN,QAOApH,IACA,IAAIqH,EAAW,GACZD,EAAIrI,EAAEF,KAAK,EAAK/B,MAAM+J,QAAQQ,EAAW,YAAa,EAAKH,UAAYrG,EAAAA,aAClE,EAAK/D,MAAM+J,OAAO,GAAG,EAAK/J,MAAMwK,KAAKC,MAAK,SAAAvH,GAAC,OAAEA,EAAEnB,KAAKuI,EAAIrI,EAAEF,QAAKwI,EAAW,iBAClFN,EAAM7F,MAAK,eAAI7D,UAAWgK,EAAUG,IAAKJ,EAAIrI,EAAEF,KAAK,EAAK/B,MAAM+J,OAAO,EAAKK,UAAU,KAAc/F,cAAe,SAAAhC,GAAIA,EAAEsI,kBAAkB,EAAK5K,MAAM0C,WAAW6H,EAAIrI,IAAzJ,SAA+JqI,EAAIM,MAA9E1H,IAC7F+G,EAAM5C,QAAU,EAAK2C,gBACpBG,IACAD,EAAO9F,MAAK,iBAAarC,GAAI,YAAYoI,EAAGlF,MAAO,CAAC4F,aAAc,mBAAoBC,cAAe,OAAQjD,OAAQ,QAAzG,WAAkH,kBAAOtH,UAAU,WAAjB,UAA4B,2BAAQ0J,OAAsB,gBAAKhF,MAAO,CAACK,UAAW,UAAxB,SAAoC6E,MAAtMA,IACtBF,EAAQ,KAThB,IAAI,EAAJ,qBAAoC,IANhC,8BAkBDE,EAAE,GAAGD,EAAO9F,MAAK,iBAAerC,GAAI,aAAaoI,EAAE,GAAIlF,MAAO,CAAC4C,OAAQ,QAAtD,WAA+D,kBAAOtH,UAAU,WAAjB,UAA4B,2BAAQ0J,OAAsB,gBAAKhF,MAAO,CAACK,UAAW,UAAxB,SAAoC6E,EAAE,MAArJA,EAAE,IAChC,IAAIY,GAAmB,kBAAOxK,UAAU,WAAW0E,MAAO,CAACI,MAAM,QAA1C,UACnB,8BACI,2BACI,eAAI9E,UAAU,QACd,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,QACd,eAAIA,UAAU,WAElB,2BACI,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,MACpC,SAACD,EAAA,EAAD,CAAaC,GAAI,IADjB,KACuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,QACd,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,QACd,eAAIA,UAAU,WAElB,2BACI,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,KAApC,KAA2C,SAACD,EAAA,EAAD,CAAaC,GAAI,MAC5D,SAACD,EAAA,EAAD,CAAaC,GAAI,IADjB,KACuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,QACd,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,MAAM,SAACD,EAAA,EAAD,CAAaC,GAAI,QAC3D,eAAI1K,UAAU,QACd,eAAIA,UAAU,WAElB,2BACI,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,KAApC,KAA2C,SAACD,EAAA,EAAD,CAAaC,GAAI,KAA5D,KAAmE,SAACD,EAAA,EAAD,CAAaC,GAAI,KACpF,SAACD,EAAA,EAAD,CAAaC,GAAI,KAAK,SAACD,EAAA,EAAD,CAAaC,GAAI,KADvC,KAC8C,SAACD,EAAA,EAAD,CAAaC,GAAI,IAD/D,KACqE,SAACD,EAAA,EAAD,CAAaC,GAAI,MACtF,SAACD,EAAA,EAAD,CAAaC,GAAI,IAFjB,KAEuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,QACd,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,QACd,eAAIA,UAAU,WAElB,2BACI,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,MACpC,SAACD,EAAA,EAAD,CAAaC,GAAI,IADjB,KACuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,QACd,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,eAAI1K,UAAU,QACd,eAAIA,UAAU,WAElB,2BACI,eAAIA,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,IAApC,KAA0C,SAACD,EAAA,EAAD,CAAaC,GAAI,KAA3D,KAAkE,SAACD,EAAA,EAAD,CAAaC,GAAI,IAAnF,KAAyF,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACvH,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,KAApC,KAA2C,SAACD,EAAA,EAAD,CAAaC,GAAI,KAA5D,KAAmE,SAACD,EAAA,EAAD,CAAaC,GAAI,MACpF,SAACD,EAAA,EAAD,CAAaC,GAAI,IADjB,KACuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAExC,2BACI,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACpC,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,0BAAqC,SAACyK,EAAA,EAAD,CAAaC,GAAI,SACtD,gBAAI1K,UAAU,KAAd,WAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,IAApC,KAA0C,SAACD,EAAA,EAAD,CAAaC,GAAI,KAA3D,KAAkE,SAACD,EAAA,EAAD,CAAaC,GAAI,MACnF,SAACD,EAAA,EAAD,CAAaC,GAAI,IADjB,KACuB,SAACD,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,QACrD,eAAI1K,UAAU,KAAd,UAAmB,SAACyK,EAAA,EAAD,CAAaC,GAAI,cAIxB,gBAArBpK,KAAKd,MAAMmL,WACVH,GAAmB,kBAAOxK,UAAU,WAAW0E,MAAO,CAACI,MAAM,QAA1C,UACnB,8BACI,2BACI,eAAI9E,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAa3K,GAAG,UAAU4K,GAAI,UAEzD,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,gBAAI1K,UAAU,SAAd,WAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,KAAK,mBAAM,SAACD,EAAA,EAAD,CAAaC,GAAI,WAExE,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,eAElB,2BACI,eAAIA,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,eAElB,2BACI,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,EAAG5K,GAAG,kBAElD,2BACI,eAAIE,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,eAElB,2BACI,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,EAAG5K,GAAG,kBAElD,2BACI,eAAIE,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,EAAG5K,GAAG,kBAElD,2BACI,eAAIE,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,WAE5C,2BACI,eAAI1K,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,YACd,eAAIA,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,QACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,UAE5C,2BACI,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,OACxC,eAAI1K,UAAU,SAAd,UAAuB,SAACyK,EAAA,EAAD,CAAaC,GAAI,eAKpD,IAAIE,EAAc,CACd,CAAC,8BAAD,iBAA+B,kFACxB1J,OAAOC,QAAQ,iFADS,gCAEjBH,EAAAA,EAAAA,KAAa,gBAFI,uBAGjB,EAAKxB,MAAMqL,SAHM,6CA6BnC,OAtBG7J,EAAAA,EAAAA,OAAe,YACd4J,EAAY/G,KAAK,CAAC,yBAAD,iBAA0B,wFACpC3C,OAAOC,QAAQ,kEADqB,iCAEfH,EAAAA,EAAAA,OAAAA,KAAoB,CAACwG,KAAK,eAAgBE,KAAK,eAAgBC,UAAW,eAAgBI,OAAQ,IAFnF,cAE7BzG,EAF6B,gBAG7BN,EAAAA,EAAAA,KAAAA,KAAkB,CAACwG,KAAK,aAAcE,KAAK,aAAcC,UAAW,aAAcU,UAAW/G,EAAOmH,SAAU,EAAGV,OAAQ,IAH5F,WAIhC7G,OAAOC,QAAQ,6EAJiB,iCAKzBH,EAAAA,EAAAA,KAAa,gBALY,wBAMzB,EAAKxB,MAAMqL,SANc,8CAW3CD,EAAY/G,KAAK,CAAC,wBAAD,iBAAyB,kFACnC3C,OAAOC,QAAQ,6EADoB,gCAEdH,EAAAA,EAAAA,KAAAA,KAAkB,CAACwG,KAAK,aAAcE,KAAK,aAAcC,UAAW,aAAcU,UAAW,EAAGI,SAAU,EAAGV,OAAQ,IAFvG,kBAG/B7G,OAAOC,QAAQ,4EAHgB,gCAIxBH,EAAAA,EAAAA,KAAa,gBAJW,uBAKxB,EAAKxB,MAAMqL,SALa,+CAUvC,gCACc,IAAhBlB,EAAO7C,OAAW,MAAK,SAAClH,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACpB,UAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACA,SAACH,EAAA,WAAD,CAAiBI,UAAU,wBAA3B,UACI,SAAC8K,EAAD,CAAgBH,SAAUrK,KAAKd,MAAMmL,SAAUI,YAAa,SAAAC,GAAW,EAAKzJ,SAAS,CAACiI,OAAQwB,KAAaC,QAAS,SAAAhB,GAAO,EAAK1I,SAAS,CAAC0I,KAAMA,UAEpJ,UAACrK,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,WACI,SAACJ,EAAA,OAAD,WACI,SAACsL,EAAA,UAAD,CAAcrF,KAAK,OAAQnB,MAAO,CAACK,UAAW,QAASD,MAAO,OAAQH,QAAS,UAAWwG,YAAa,QAASC,UAAU,IAAIC,YAAY,WAAWC,QAAS,SAAAxJ,GAC1J,GAAe,KAAZA,EAAEyJ,QAAa,CACd,IAAMC,EAAMC,SAASC,cAAc,gBAAgB5J,EAAEzC,OAAOyG,OACzD0F,GAAKA,EAAIG,eAAe,CAACC,SAAU,kBAIlD,SAAChM,EAAA,OAAD,WACI,SAAC,KAAD,CAASqB,UAAW2J,eAKhC,gBAAKlG,MAAO,CAACzC,SAAU3B,KAAKd,MAAMyC,UAAlC,SACqB,IAAhB0H,EAAO7C,QACJ,0BACI,SAAC2D,EAAA,EAAD,CAAa3H,UAAU,OAAvB,SACK0H,OAGZ,yBAAMb,WAGlB,8BACD,SAAiBkC,GACH,IAAPA,GAAUvL,KAAKb,MAAMuL,SAAS1K,KAAKb,MAAMqM,QAAQ,EAChDxL,KAAKiB,SAAS,CAACyJ,SAAU1K,KAAKb,MAAMuL,SAAS,IAC/B,IAAPa,EACPvL,KAAKiB,SAAS,CAACyJ,SAAU,KACV,IAARa,GAAWvL,KAAKb,MAAMuL,SAAS,EACtC1K,KAAKiB,SAAS,CAACyJ,SAAU1K,KAAKb,MAAMuL,SAAS,KAC9B,IAARa,GACPvL,KAAKiB,SAAS,CAACyJ,SAAU1K,KAAKb,MAAMqM,QAAQ,MAEnD,gCACD,SAAmBzC,EAAW0C,GACvBzL,KAAKb,MAAMwK,MAAM3J,KAAKb,MAAMwK,KAAKnD,OAAO,EACpCiF,EAAUf,UAAU1K,KAAKb,MAAMuL,UAAW1K,KAAKiB,SAAS,CAACiI,OAAQlJ,KAAKb,MAAMwK,KAAK3J,KAAKb,MAAMuL,UAAUxJ,KAChF,GAAnBlB,KAAKb,MAAM+J,QAAWlJ,KAAKiB,SAAS,CAACiI,OAAQ,IACpDlJ,KAAKuJ,WAAWvJ,KAAKuJ,UAAUmC,QAAQL,eAAe,CAACC,SAAU,SAAUK,MAAO,eACxF,EApUC3C,CAAiB9F,EAAAA,WAsUvB,SAASsH,EAAetL,GACpB,OAAwB0M,EAAAA,EAAAA,UAAS,IAAjC,eAAOjC,EAAP,KAAagB,EAAb,KACA,GAAgCiB,EAAAA,EAAAA,UAAS,GAAzC,eAAOlB,EAAP,KAAiBD,EAAjB,KACA,GAA0BmB,EAAAA,EAAAA,UAAS,IAAnC,eAAOjJ,EAAP,KAAckJ,EAAd,MACAC,EAAAA,EAAAA,YAAU,WACHnC,EAAKnD,OAAO,GAAGtH,EAAMuL,YAAYd,EAAKe,GAAUxJ,MACpD,CAACyI,EAAMe,KACVoB,EAAAA,EAAAA,YAAU,WAAK5M,EAAMyL,QAAQhB,KAAQ,CAACA,IAEtC,IAAMoC,EAAiB,SAAAC,GACnB,GAAU,IAAPA,EACItB,EAAS,IAAIf,EAAKnD,OAAQiE,EAAY,GACpCA,EAAYC,EAAS,QACvB,IAAY,IAARsB,EACUvB,EAAH,IAAXC,EAA0Bf,EAAKnD,OAAO,EACxBkE,EAAS,QACvB,GAAW,IAAPsB,EAAS,CACLb,SAASC,cAAc,cAC/BC,eAAe,CAACC,SAAU,SAAUK,MAAO,aAItD,OAAO,iCACP,SAACrM,EAAA,OAAD,WACI,SAACsL,EAAA,UAAD,CAAcrF,KAAK,OAAOnB,MAAO,CAACC,QAAS,WAAYyG,UAAU,IAAIC,YAAY,4BAA4BC,QAAO,mCAAE,WAAMxJ,GAAN,0EACjG,KAAdA,EAAEyJ,QAD6G,oBAE1F,KAAjBzJ,EAAEzC,OAAOyG,MAFkG,gBAG1GmF,EAAQ,IAHkG,0BAIpGnJ,EAAEzC,OAAOyG,OAAO7C,EAJoF,iCAKtFjC,EAAAA,EAAQxB,EAAMmL,UAAU4B,OAAO,CAAC,CAAC9K,EAAG,SAAUC,EAAG,IAAKC,EAAE,IAAD,OAAMG,EAAEzC,OAAOyG,MAAf,OAA2B,CAACkC,OAAQ,CAAC,QALN,QAKpGwE,EALoG,QAMjG1F,OAAO,GACZqF,EAASrK,EAAEzC,OAAOyG,OAClBiF,EAAY,GACZE,EAAQuB,IAERvB,EAAQ,IAX8F,wBAc1GoB,EAAe,GAd2F,4CAAF,0DAmBvHpC,EAAKnD,OAAO,IAAG,SAAClH,EAAA,OAAD,WACZ,iBAAK8E,MAAO,CAACyC,QAAQ,OAAQV,WAAY,OAAQgG,OAAQ,gCAAzD,WACI,SAACC,EAAA,EAAD,CAAQ3J,KAAK,KAAK9D,QAAQ,eAAeyF,MAAO,CAACiI,aAAc,qBAAsBtI,QAAS,WAAKgI,GAAgB,IAAKO,SAAwB,IAAd3C,EAAKnD,OAAvI,UAA8J,SAAC,IAAD,CAAiB5H,KAAM2N,EAAAA,IAAYnI,MAAO,CAAC6C,SAAU,aACnN,iBAAK7C,MAAO,CAAC4F,aAAc,+BAAgCwC,UAAW,+BAAgCnI,QAAS,WAAY2C,OAAQ,IAAKyF,OAAQ,WAAY1I,QAAS,WAAKgI,EAAe,IAAzL,UAA+LrB,EAAS,EAAxM,MAA8Mf,EAAKnD,WACnN,SAAC4F,EAAA,EAAD,CAAQ3J,KAAK,KAAK9D,QAAQ,eAAgByF,MAAO,CAACiI,aAAc,qBAAsBtI,QAAS,WAAKgI,EAAe,IAAKO,SAAwB,IAAd3C,EAAKnD,OAAvI,UAA8J,SAAC,IAAD,CAAiB5H,KAAM8N,EAAAA,IAAWtI,MAAO,CAAC6C,SAAU,oBAI7N,IAEK0F,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYzN,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACT4D,gBAAiB,KACjByG,OAAQ,IAJE,EAoFjB,OA9EA,8BACD,WAAS,IAAD,OACJ,OAAO,iCACH,SAAC/K,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACI,SAACsJ,EAAD,CACIuB,QAAM,iBAAE,8EAAW,EAAKA,SAAhB,2CACRf,OAAQxJ,KAAKb,MAAMqK,OACnBa,SAAUrK,KAAKd,MAAMmL,SACrB3I,gBAAiB1B,KAAKb,MAAMuC,gBAC5BrB,MAAOL,KAAKb,MAAMkB,MAClBG,YAAaR,KAAKb,MAAMqB,YACxBoM,QAAS5M,KAAKb,MAAMyN,QACpBjL,SAAW3B,KAAKb,MAAM4D,gBAAiB,UAAU,UACjDnB,WAAY,SAAAxC,GACR,EAAK6B,SAAS,CAAC7B,KAAMA,SAIhCY,KAAKb,MAAMC,MAAK,SAACqH,EAAD,CAAYrH,KAAMY,KAAKb,MAAMC,KAAM0C,SAAU,WAAK,EAAKb,SAAS,CAAC7B,KAAM,QAAS6C,QAAS,WAAK,EAAKhB,SAAS,CAAC7B,KAAM,QAAS4C,UAAQ,iBAAE,qFAAW,EAAKf,SAAS,CAAC7B,KAAM,OAAhC,SAA6C,EAAKmL,SAAlD,6CAAgE,UAE9N,+BACD,WAAoBvK,KAAKuK,WAAS,gCAClC,SAAmBxB,GACZ/I,KAAKd,MAAMmL,UAAUtB,EAAUsB,UAAUrK,KAAKuK,SAC9CvK,KAAKuJ,WAAWvJ,KAAKuJ,UAAUmC,QAAQL,eAAe,CAACC,SAAU,SAAUK,MAAO,aACxF,uDACD,+FACI3L,KAAKiB,SAAS,CAACuI,OAAQ,KAD3B,SAEuB9I,EAAAA,EAAQV,KAAKd,MAAMmL,UAAUwC,OAAO,CAACxM,OAAO,IAFnE,cAEUyM,EAFV,gBAGuBpM,EAAAA,EAAQV,KAAKd,MAAMmL,UAAUwC,SAHpD,OAGU5D,EAHV,OAIUG,EAAQpJ,KAAK+M,iBAAiB9D,EAAMjJ,KAAKd,MAAMmL,UACrDrK,KAAKiB,SAAS,CAACuI,OAAQJ,EAAO0D,KAAMjK,KAAKC,MAAMgK,EAAK,GAAL,MAAiB9M,KAAKmJ,eAAe,EAAG3I,YAAa,IALxG,kGADC,IACD,8BAOA,SAAiByI,EAAMoB,GACnB,IAD4B,EACxBjB,EAAQ,GADgB,UAGbH,GAHa,IAG5B,IAAI,EAAJ,qBAAoB,CAAC,IAAX7H,EAAU,QACZ4L,EAAa,GACjB,GAAG5L,EAAE6L,YAID,IAHA,IAAMC,EAAaC,KAAKC,MAAMhM,EAAE6L,aAC1BI,EAAcF,KAAKC,MAAMhM,EAAEkM,cAC3BC,EAAgBJ,KAAKC,MAAMhM,EAAEoM,gBAC3BC,EAAK,EAAGA,EAAKP,EAAW1G,OAAQiH,IAAK,CACzC,IAAIC,EAAO,eAAeR,EAAWO,GACjCE,EAAQ,GACTN,GAA8B,IAAjBA,EAAYI,KACxBC,EAAKL,EAAYI,GACjBE,GAAQ,iCAAO,SAAC,IAAD,CAAiBvJ,MAAO,CAAC6C,SAAS,QAASrI,KAAMgP,EAAAA,UAEpE,IAAIC,EAAS,UACVN,IAAeM,EAAON,EAAcE,IACvCT,EAAWzJ,MAAK,yBAAa,eAAGzE,KAAM4O,EAAM3O,OAAO,SAASgH,IAAI,aAAnC,UAAiD8H,EAAQF,MAA7DF,IAIjC,GAAa,gBAAVpD,EAAyB,CACxB,IAAIjD,EAAI,eAAWhG,EAAEgG,KAAb,UACJF,EAAO9F,EAAE8F,KACV9F,EAAEwH,QAAQ,GAAiB,OAAdxH,EAAE2G,YACdX,EAAK,2BAAD,OAA6BhG,EAAEgG,KAA/B,WACJF,EAAI,kCAA8B9F,EAAE8F,KAAhC,YAERkC,EAAM7F,KAAK,CAACnC,EAAGA,EAAG2I,KAAM,EACxB,eAAYrK,UAAU,KAAKmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAEkG,eAAxD,MACR,eAAY5H,UAAU,KAAKmE,yBAAyBC,EAAAA,EAAAA,IAAUsD,IAAtD,MACR,eAAY1H,UAAU,KAAKmE,yBAAyBC,EAAAA,EAAAA,IAAUoD,IAAtD,MACR,gBAAYxH,UAAU,KAAtB,WAA2B,iBAAMmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAEiH,iBAAsB,eAAI3I,UAAU,UAAd,SAAyBsN,MAA7G,MACR,eAAYtN,UAAU,KAAKmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAE+C,UAAxD,YAES,iBAAXkG,GACNjB,EAAM7F,KAAK,CAACnC,EAAGA,EAAG2I,KAAM,EACxB,eAAYrK,UAAU,SAASmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAEkG,eAA5D,MACR,eAAY5H,UAAU,SAASmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAE4G,WAA5D,MACR,gBAAYtI,UAAU,SAAtB,WAA+B,iBAAMmE,yBAAyBC,EAAAA,EAAAA,IAAU1C,EAAEiH,iBAAsB,eAAI3I,UAAU,UAAd,SAAyBsN,MAAjH,SAxCY,8BA4C5B,OAAO5D,MACV,EArFCuD,CAAczJ,EAAAA,WCtgBd4K,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY5O,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,KACNC,eAAgB,MAJN,EAwFlB,OAlFC,8BAED,WAAS,IAAD,OACJ,OAAO,iCACH,SAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACI,SAACH,EAAA,WAAD,CAAiBI,UAAU,wBAA3B,UACI,SAACJ,EAAA,OAAD,WACI,SAAC,KAAD,CACAS,WAAYC,KAAKb,MAAME,eACvBM,QAAQ,SACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CG,cAAe,CACX,CAAC,KAAM,OAEXC,YAAa,CAAC,CAAC,SAAU,OACzBC,OAAQH,KAAKb,MAAMiB,oBAI3B,UAACd,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,WACI,SAACJ,EAAA,OAAD,UACCU,KAAKb,MAAMkB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKb,MAAMqB,YAAaC,QAAST,KAAKb,MAAMsB,UAChH,QAED,SAACnB,EAAA,OAAD,UACKoB,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASC,UAAW,CACvC,CAAC,iBAAD,iBAAkB,wFACXC,OAAOC,QAAQ,2CADJ,gCAEUH,EAAAA,EAAAA,OAAAA,KAAoB,CAACqN,MAAO,eAFtC,OAEJ/M,EAFI,OAGV,EAAKC,SAAS,CAAC5B,eAAgB,CAAC,CAAC6B,GAAI,EAAGC,EAAG,KAAMC,EAAG,IAAKC,EAAEL,MAHjD,0DAW1C,SAACvC,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACI,SAACsO,EAAD,CACI1N,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCmB,gBAAiB1B,KAAKb,MAAMuC,gBAC5BrB,MAAOL,KAAKb,MAAMkB,MAClBG,YAAaR,KAAKb,MAAMqB,YACxBC,QAAST,KAAKb,MAAMsB,QACpBkB,SAAW3B,KAAKb,MAAMC,KAAM,UAAU,UACtCwC,WAAY,SAAAxC,GACR,EAAK6B,SAAS,CAAC7B,KAAMA,SAI/BY,KAAKb,MAAMC,MAAM,SAAC6O,EAAD,CAAa7O,KAAMY,KAAKb,MAAMC,KAAM0C,SAAU,SAAAZ,GAAK,EAAKa,YAAYb,IAAMc,SAAU,WAAK,EAAK1B,SAAS,EAAKnB,MAAMqB,cAAeyB,QAAS,WAAK,EAAKhB,SAAS,CAAC7B,KAAM,UAAY,QAE1M,4DACD,WAAkB8B,GAAlB,gFACOA,EAAG,GADV,iCAE4BR,EAAAA,EAAAA,OAAAA,IAAmB,CAACQ,GAAIA,IAFpD,OAE0DgB,GAA9CA,EAFZ,QAE4E,GAChER,EAAkB1B,KAAKb,MAAMuC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAKgB,EAAQhB,MACrEQ,EAAgBS,GAAkBD,EAClClC,KAAKiB,SAAS,CAACS,gBAAiBA,EAAiBtC,KAAM8C,IAN/D,wBAQQlC,KAAKiB,SAAS,CAACS,gBAAiB,GAAItC,KAAM,OARlD,oGADC,IACD,4DAWA,WAAkBkD,EAAUxC,GAA5B,yFACwBY,EAAAA,EAAAA,OAAAA,OAAsB4B,EAAU,CAACjC,OAAM,EAAMP,MAAMA,IAD3E,cACUO,EADV,gBAEkCK,EAAAA,EAAAA,OAAAA,OAAsB4B,EAAU,CAACI,MAAM,GAAI5C,MAAMA,IAFnF,OAEU4B,EAFV,OAGOrB,EAAM,GAAN,MAAkB,EAAGL,KAAKiB,SAAS,CAACb,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKiB,SAAS,CAACb,aAAc,wBACvDJ,KAAKiB,SAAS,CAACb,aAAc,gCAClCJ,KAAKiB,SAAS,CACV0B,MAAOL,EACPM,WAAY9C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASoC,KAAKC,MAAMzC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbkB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MAb9B,qGAXA,IAWA,yDAgBA,WAAezC,GAAf,uFACkCG,EAAAA,EAAAA,OAAAA,OAAsBV,KAAKb,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAX1C,EAAQ,GAAQT,MAAME,KAAKb,MAAMyD,aAD/H,OACUlB,EADV,OAEQ1B,KAAKiB,SAAS,CACVT,YAAaD,EACbmB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MALlC,mGAhBA,MAgBA,EAzFE8K,CAAe5K,EAAAA,WAkGf8K,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY9O,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAwBjB,OArBA,8BACD,WAAS,IAAD,OACJ,GAAGhD,KAAKd,MAAMmB,MAAM,EAAE,CAClB,IADkB,EACdgD,EAAO,GADO,UAEDrD,KAAKd,MAAMwC,iBAFV,IAElB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC4B,EAAkC,QACxCD,EAAKE,MAAK,gBAAiBrC,GAAIoC,EAAIpC,GAAIsC,cAAe,SAAAhC,GAAI,EAAKtC,MAAM0C,WAAW,EAAK1C,MAAMwC,gBAAgB+B,MAAK,SAAApB,GAAC,OAAGA,EAAEnB,KAAOwC,SAASlC,EAAEzC,OAAO4E,QAAQ,MAAMzC,SAAnJ,WAA2J,eAAI0C,MAAO,OAAON,EAAIpC,GAAtB,SAA2BoC,EAAI4K,cAAgB,0BAAK5K,EAAI6K,SAAT,IAAoB7K,EAAI8K,cAAJ,WAAsB9K,EAAI8K,cAA1B,KAA2C,SAAU,0BACxR9K,EAAI+K,KADoR,KAC5Q/K,EAAIgL,QADwQ,MAC9P,uBAAIhL,EAAIyK,QADsP,KACzOzK,EAAIiL,MADqO,KAC5NjL,EAAIkL,IADwN,IAClNlL,EAAImL,SAE3E,0BAAKnL,EAAIoL,gBAAiBpL,EAAIqL,OAAO,MAAMrL,EAAIqL,OAAO,UAHvCrL,EAAIpC,MAHT,8BASlB,OACA,gBAAKkD,MAAO,CAACzC,SAAU3B,KAAKd,MAAMyC,SAAU0C,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOE,MAAM,OAAOD,SAAO,EAA3B,WACI,kBAAOH,MAAO,CAACK,UAAU,QAAzB,UAAkC,2BAAI,eAAID,MAAM,MAAV,yBAA+B,eAAIA,MAAM,MAAV,uBAA6B,eAAIA,MAAM,MAAV,8BAAoC,kDACtI,2BAAQnB,SAIhB,OAAO,SAAC,KAAD,QAEd,EAzBC2K,CAAkB9K,EAAAA,WA2BlB+K,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY/O,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACT+B,GAAI,EAAKhC,MAAME,KAAK8B,GACpBgN,WAAY,EAAKhP,MAAME,KAAK8O,WAC5BC,SAAU,EAAKjP,MAAME,KAAK+O,SAC1BC,cAAe,EAAKlP,MAAME,KAAKgP,cAC/BC,KAAM,EAAKnP,MAAME,KAAKiP,KACtBC,QAAS,EAAKpP,MAAME,KAAKkP,QACzBP,MAAO,EAAK7O,MAAME,KAAK2O,MACvBQ,MAAO,EAAKrP,MAAME,KAAKmP,MACvBG,gBAAiB,EAAKxP,MAAME,KAAKsP,gBACjCF,IAAK,EAAKtP,MAAME,KAAKoP,IACrBC,KAAM,EAAKvP,MAAME,KAAKqP,KACtBE,OAAQ,EAAKzP,MAAME,KAAKuP,QAdd,EAkHjB,OAlGA,8BACD,WAAS,IAAD,OACJ,OAAO,UAAC7J,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjG,MAAM+C,WAA9F,WACX,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB9E,KAAKb,MAAM+B,SAEpC,UAAC4D,EAAA,OAAD,YACI,UAACO,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAM+O,WAAWlO,KAAKb,MAAM+O,WAAW,GAAIzI,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACiN,WAAY1M,EAAEzC,OAAOyG,iBAErI,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,wBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMgP,SAASnO,KAAKb,MAAMgP,SAAS,GAAI1I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACkN,SAAU3M,EAAEzC,OAAOyG,iBAE/H,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,6BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMiP,cAAcpO,KAAKb,MAAMiP,cAAc,GAAI3I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACmN,cAAe5M,EAAEzC,OAAOyG,iBAE9I,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMkP,KAAKrO,KAAKb,MAAMkP,KAAK,GAAI5I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACoN,KAAM7M,EAAEzC,OAAOyG,iBAEnH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,uBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMmP,QAAQtO,KAAKb,MAAMmP,QAAQ,GAAI7I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACqN,QAAS9M,EAAEzC,OAAOyG,iBAE5H,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAM4O,MAAM/N,KAAKb,MAAM4O,MAAM,GAAItI,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC8M,MAAOvM,EAAEzC,OAAOyG,iBAEtH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMoP,MAAMvO,KAAKb,MAAMoP,MAAM,GAAI9I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACsN,MAAO/M,EAAEzC,OAAOyG,iBAEtH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,mBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMqP,IAAIxO,KAAKb,MAAMqP,IAAI,GAAI/I,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACuN,IAAKhN,EAAEzC,OAAOyG,iBAEhH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMsP,KAAKzO,KAAKb,MAAMsP,KAAK,GAAIhJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACwN,KAAMjN,EAAEzC,OAAOyG,iBAEnH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,+BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMuP,gBAAgB1O,KAAKb,MAAMuP,gBAAgB,GAAIjJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACyN,gBAAiBlN,EAAEzC,OAAOyG,iBAEpJ,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,sBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAMwP,OAAO3O,KAAKb,MAAMwP,OAAO,GAAIlJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC0N,OAAQnN,EAAEzC,OAAOyG,iBAEzH,SAACH,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcE,MAAM,YAAYzB,SAAO,iBAAE,8FACxCrD,EAAAA,EAAAA,OAAAA,KAAoB,CACtBQ,GAAI,EAAK/B,MAAM+B,GACfgN,WAAY,EAAK/O,MAAM+O,WACvBC,SAAU,EAAKhP,MAAM0P,UACrBT,cAAe,EAAKjP,MAAMiP,cAC1BC,KAAM,EAAKlP,MAAMkP,KACjBC,QAAS,EAAKnP,MAAMmP,QACpBP,MAAO,EAAK5O,MAAM4O,MAClBQ,MAAO,EAAKpP,MAAMoP,MAClBG,gBAAiB,EAAKvP,MAAMuP,gBAC5BF,IAAK,EAAKrP,MAAMqP,IAChBC,KAAM,EAAKtP,MAAMsP,KACjBE,OAAQ,EAAKxP,MAAMwP,SAbuB,cAe9C,EAAKzP,MAAM4C,SAAS,EAAK3C,MAAM+B,IAfe,kBAgBvC,CAACf,QAAQ,IAhB8B,8CAkBlD,SAACiM,EAAA,EAAD,CAAQzN,QAAQ,SAASyF,MAAO,CAAC+B,WAAY,QAASpC,SAAO,iBAAE,kFAChDnD,OAAOC,QAAQ,mGADiC,gCAEzCH,EAAAA,EAAAA,OAAAA,OAAsB,EAAKvB,MAAM+B,IAFQ,OAG/C,EAAKhC,MAAM+C,UACX,EAAK/C,MAAM8C,WAJoC,2CAA/D,qCAUH,gCACD,WACOhC,KAAKb,MAAM+B,KAAKlB,KAAKd,MAAME,KAAK8B,IAC/BlB,KAAKiB,SAAS,CACVC,GAAIlB,KAAKd,MAAME,KAAK8B,GACpBgN,WAAYlO,KAAKd,MAAME,KAAK8O,WAC5BC,SAAUnO,KAAKd,MAAME,KAAK+O,SAC1BC,cAAepO,KAAKd,MAAME,KAAKgP,cAC/BC,KAAMrO,KAAKd,MAAME,KAAKiP,KACtBC,QAAStO,KAAKd,MAAME,KAAKkP,QACzBP,MAAO/N,KAAKd,MAAME,KAAK2O,MACvBQ,MAAOvO,KAAKd,MAAME,KAAKmP,MACvBG,gBAAiB1O,KAAKd,MAAME,KAAKsP,gBACjCF,IAAKxO,KAAKd,MAAME,KAAKoP,IACrBC,KAAMzO,KAAKd,MAAME,KAAKqP,KACtBE,OAAQ3O,KAAKd,MAAME,KAAKuP,aAGnC,EAnHCV,CAAoB/K,EAAAA,WAuHpB4L,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY5P,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,KACNC,eAAgB,KAChB4D,OAAQ,GALE,EA6FlB,OAtFC,8BACD,WAAS,IAAD,OACJ,OAAO,iCACH,SAAC3D,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACI,SAACH,EAAA,WAAD,CAAiBI,UAAU,wBAA3B,UACI,SAACJ,EAAA,OAAD,WACI,SAAC,KAAD,CACAS,WAAYC,KAAKb,MAAME,eACvBM,QAAQ,aACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CG,cAAe,CACX,CAAC,SAAU,QACX,CAAC,UAAW,WACZ,CAAC,YAAa,iBACd,CAAC,KAAM,MACP,CAAC,OAAQ,cAEbC,YAAa,CAAC,CAAC,SAAU,MAAO,CAAC,YAAa,aAAW,CAAC,WAAY,eACtEC,OAAQH,KAAKb,MAAMiB,oBAI3B,UAACd,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,WACI,SAACJ,EAAA,OAAD,UACCU,KAAKb,MAAMkB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKb,MAAMqB,YAAaC,QAAST,KAAKb,MAAMsB,UAChH,QAED,SAACnB,EAAA,OAAD,UACKoB,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASC,UAAW,CACvC,CAAC,kBAAD,iBAAmB,wFACZC,OAAOC,QAAQ,6CADH,gCAESH,EAAAA,EAAAA,QAAAA,KAAqB,CAACqO,UAAW,EAAGC,OAAQ,iBAAkBC,MAAM,IAAIC,MAAOC,gBAFxF,OAELnO,EAFK,OAGX,EAAKC,SAAS,CAAC5B,eAAgB,CAAC,CAAC6B,GAAI,EAAGC,EAAG,KAAMC,EAAG,IAAKC,EAAEL,MAHhD,0DAW3C,SAACvC,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACI,SAAC0P,EAAD,CACI9O,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCmB,gBAAiB1B,KAAKb,MAAMuC,gBAC5BrB,MAAOL,KAAKb,MAAMkB,MAClBG,YAAaR,KAAKb,MAAMqB,YACxBC,QAAST,KAAKb,MAAMsB,QACpBkB,SAAW3B,KAAKb,MAAMC,KAAM,UAAU,UACtCwC,WAAY,SAAAxC,GACR,EAAK6B,SAAS,CAAC7B,KAAMA,SAI/BY,KAAKb,MAAMC,MAAM,SAACiQ,EAAD,CAAgBjQ,KAAMY,KAAKb,MAAMC,KAAM0C,SAAU,SAAAZ,GAAK,EAAKa,YAAYb,IAAMc,SAAU,WAAK,EAAK1B,SAAS,EAAKnB,MAAMqB,cAAeyB,QAAS,WAAK,EAAKhB,SAAS,CAAC7B,KAAM,UAAY,QAE7M,4DACD,WAAkB8B,GAAlB,kFACOA,EAAG,GADV,iCAE4BR,EAAAA,EAAAA,QAAAA,IAAoB,CAACQ,GAAIA,IAFrD,OAE2DgB,GAA/CA,EAFZ,QAE6E,GACjER,EAAkB1B,KAAKb,MAAMuC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAKgB,EAAQhB,MACrEQ,EAAgBS,GAAkBD,EAClClC,KAAKiB,SAAS,CAACS,gBAAiBA,EAAiBtC,KAAM8C,IAN/D,yCAQsCxB,EAAAA,EAAAA,QAAAA,OAAuBV,KAAKb,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAOjD,KAAKb,MAAM8D,OAAQnD,MAAME,KAAKb,MAAMyD,aARrI,QAQclB,EARd,OASQ1B,KAAKiB,SAAS,CAACS,gBAAiBA,EAAiBtC,KAAM,OAT/D,oGADC,IACD,4DAYA,WAAkBkD,EAAUxC,GAA5B,yFACwBY,EAAAA,EAAAA,QAAAA,OAAuB4B,EAAU,CAACjC,OAAM,EAAMP,MAAMA,IAD5E,cACUO,EADV,gBAEkCK,EAAAA,EAAAA,QAAAA,OAAuB4B,EAAU,CAACI,MAAM,GAAI5C,MAAMA,IAFpF,OAEU4B,EAFV,OAGOrB,EAAM,GAAN,MAAkB,EAAGL,KAAKiB,SAAS,CAACb,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKiB,SAAS,CAACb,aAAc,wBACvDJ,KAAKiB,SAAS,CAACb,aAAc,gCAClCJ,KAAKiB,SAAS,CACV0B,MAAOL,EACPM,WAAY9C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASoC,KAAKC,MAAMzC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbkB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MAb9B,qGAZA,IAYA,yDAgBA,WAAezC,GAAf,uFACkCG,EAAAA,EAAAA,QAAAA,OAAuBV,KAAKb,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAX1C,EAAQ,GAAQT,MAAME,KAAKb,MAAMyD,aADhI,OACUlB,EADV,OAEQ1B,KAAKiB,SAAS,CACVgC,OAAqB,IAAX1C,EAAQ,GAClBC,YAAaD,EACbmB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MANlC,mGAhBA,MAgBA,EA9FE8L,CAAkB5L,EAAAA,WAwGlBkM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYlQ,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAkCjB,OA/BA,8BACD,WAAS,IAAD,OACJ,GAAGhD,KAAKd,MAAMmB,MAAM,EAAE,CAClB,IADkB,EACZiP,EAAW,CACb,EAAG,qBACH,EAAG,qBACH,EAAG,cACH,EAAG,yBACH,EAAG,yBACH,EAAG,aAGHjM,EAAO,GAVO,UAWDrD,KAAKd,MAAMwC,iBAXV,IAWlB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC4B,EAAkC,QACpCiM,EAAMjM,EAAIiM,IACL,KAANA,GAAgB,OAANA,IAAYA,EAAM,gBAAgBjM,EAAIpC,IACnDmC,EAAKE,MAAK,gBAAiBrC,GAAIoC,EAAIpC,GAAIsC,cAAe,SAAAhC,GAAI,EAAKtC,MAAM0C,WAAW,EAAK1C,MAAMwC,gBAAgB+B,MAAK,SAAApB,GAAC,OAAGA,EAAEnB,KAAOwC,SAASlC,EAAEzC,OAAO4E,QAAQ,MAAMzC,SAAnJ,WAA2J,eAAI0C,MAAO,OAAON,EAAIpC,GAAtB,SAA2BoC,EAAIkM,SAAW,wBAAKF,EAAShM,EAAIyL,cAAgB,eAAIlL,yBAAyBC,EAAAA,EAAAA,IAAUR,EAAImM,SAAY,2BAAI,cAAG3Q,KAAMyQ,EAAKxQ,OAAO,SAArB,uBACxSuE,EAAIiM,KAAI,SAAC,IAAD,CAAiBnL,MAAO,CAAC6C,SAAS,OAAQd,WAAY,QAASvH,KAAMgP,EAAAA,MAAsB,UADpFtK,EAAIpC,MAdT,8BAmBlB,OACA,gBAAKkD,MAAO,CAACzC,SAAU3B,KAAKd,MAAMyC,SAAU0C,QAAQ,UAApD,UACI,UAACC,EAAA,EAAD,CAAOE,MAAM,OAAMD,SAAO,EAA1B,WACI,kBAAOH,MAAO,CAACK,UAAU,QAAzB,UAAkC,2BAAI,eAAID,MAAM,MAAV,wBAA2B,eAAIA,MAAM,MAAV,kBAAwB,wCAAmB,eAAIA,MAAM,MAAV,wBAC5G,2BAAQnB,SAIhB,OAAO,SAAC,KAAD,QAEd,EAnCC+L,CAAqBlM,EAAAA,WAqCrBmM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYnQ,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACT+B,GAAI,EAAKhC,MAAME,KAAK8B,GACpB6N,UAAW,EAAK7P,MAAME,KAAK2P,UAC3BnG,QAAS,EAAK1J,MAAME,KAAKwJ,QACzB8G,OAAQ,EAAKxQ,MAAME,KAAKsQ,OACxBV,OAAQ,EAAK9P,MAAME,KAAK4P,OACxBC,KAAM,EAAK/P,MAAME,KAAK6P,KACtBU,OAAQ,EAAKzQ,MAAME,KAAKuQ,OACxBC,SAAU,EAAK1Q,MAAME,KAAKwQ,SAC1BC,MAAO,EAAK3Q,MAAME,KAAKyQ,MACvBC,SAAU,EAAK5Q,MAAME,KAAK0Q,SAC1BC,QAAS,EAAK7Q,MAAME,KAAK2Q,QACzBlB,UAAW,EAAK3P,MAAME,KAAKyP,UAC3B1K,QAAS,EAAKjF,MAAME,KAAK+E,QACzB6L,KAAM,EAAK9Q,MAAME,KAAK4Q,KACtBT,IAAK,EAAKrQ,MAAME,KAAKmQ,IACrBU,aAAc,EAAK/Q,MAAME,KAAK6Q,aAC9BC,qBAAsB,MAnBZ,EA6KlB,OAxJC,8BACD,WAAS,IAAD,OACJ,OAAO,UAACpL,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjG,MAAM+C,WAA9F,WACP,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,iBAAqB9E,KAAKb,MAAM+B,SAEpC,UAAC4D,EAAA,OAAD,YACI,UAACO,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAeE,MAAOxF,KAAKb,MAAMuQ,OAAO1P,KAAKb,MAAMuQ,OAAO,GAAIS,IAAI,OAAOC,UAAU,SAASC,UAAU,SAAS5K,SAAU,SAACD,EAAOtE,GAAM,EAAKD,SAAS,CAACyO,OAAQlK,EAAOoD,QAAS1H,IAAK,EAAKoP,mBAAmBpP,YAEpN,UAACmE,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,+BACA,SAACtJ,EAAA,EAAD,UAAMtF,KAAKd,MAAME,KAAKmR,cAEzBvQ,KAAKb,MAAM+Q,uBAAsB,UAAC7K,EAAA,EAAD,CAAK3F,UAAU,OAAf,WAC9B,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yCACA,SAACtJ,EAAA,EAAD,CAAKlB,MAAO,CAAC6C,SAAU,MAAOuJ,gBAAiB,qBAA/C,SAAsExQ,KAAKb,MAAM+Q,2BAErF,UAAC7K,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,sBAAuB,CAAC,EAAG,sBAAuB,CAAC,EAAG,eAAgB,CAAC,EAAG,0BAA2B,CAAC,EAAG,0BAA2B,CAAC,EAAG,cAAeJ,MAAOxF,KAAKb,MAAM4P,UAAU/O,KAAKb,MAAM4P,UAAU,GAAItJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC8N,UAAWrL,SAASlC,EAAEzC,OAAOyG,iBAEjR,IAAvBxF,KAAKb,MAAM4P,WAAsC,IAAvB/O,KAAKb,MAAM4P,WAAsC,IAAvB/O,KAAKb,MAAM4P,UAAc,EAC1E,UAAC1J,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,sBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM6P,OAAOhP,KAAKb,MAAM6P,OAAO,GAAIvJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC+N,OAAQxN,EAAEzC,OAAOyG,eAFxI,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM8P,KAAKjP,KAAKb,MAAM8P,KAAK,GAAIxJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACgO,KAAMzN,EAAEzC,OAAOyG,eAFlI,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMwQ,OAAO3P,KAAKb,MAAMwQ,OAAO,GAAIlK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC0O,OAAQnO,EAAEzC,OAAOyG,eAFxI,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMyQ,SAAS5P,KAAKb,MAAMyQ,SAAS,GAAInK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC2O,SAAUpO,EAAEzC,OAAOyG,eAF9I,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,cAAe,CAAC,EAAG,2BAA4B,CAAC,EAAG,4BAA6BJ,MAAOxF,KAAKb,MAAM0Q,MAAM7P,KAAKb,MAAM0Q,MAAM,GAAIpK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4O,MAAOnM,SAASlC,EAAEzC,OAAOyG,gBAFxR,MAIX,KACsB,IAAvBxF,KAAKb,MAAM4P,UAAc,EACtB,UAAC1J,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM2Q,SAAS9P,KAAKb,MAAM2Q,SAAS,GAAIrK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC6O,SAAUtO,EAAEzC,OAAOyG,eAF9I,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM4Q,QAAQ/P,KAAKb,MAAM4Q,QAAQ,GAAItK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC8O,QAASvO,EAAEzC,OAAOyG,eAF3I,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,wBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM0P,UAAU7O,KAAKb,MAAM0P,UAAU,GAAIpJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4N,UAAWrN,EAAEzC,OAAOyG,eAFjJ,MAIX,KACsB,IAAvBxF,KAAKb,MAAM4P,WAAsC,IAAvB/O,KAAKb,MAAM4P,UAAc,EAChD,UAAC1J,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,uBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM6P,OAAOhP,KAAKb,MAAM6P,OAAO,GAAIvJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC+N,OAAQxN,EAAEzC,OAAOyG,eAFxI,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,mBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM2Q,SAAS9P,KAAKb,MAAM2Q,SAAS,GAAIrK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC6O,SAAUtO,EAAEzC,OAAOyG,eAF9I,MAIT,UAACH,EAAA,EAAD,CAAc3F,UAAU,OAAxB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM8P,KAAKjP,KAAKb,MAAM8P,KAAK,GAAIxJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACgO,KAAMzN,EAAEzC,OAAOyG,eAFlI,OAIX,MACF,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,qBAAUlB,MAAO,CAACI,MAAO,QAASqB,OAAQ,SAAUL,MAAOxF,KAAKb,MAAMgF,QAAQnE,KAAKb,MAAMgF,QAAQ,GAAIsB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACkD,QAAS3C,EAAEzC,OAAOyG,iBAE7J,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM6Q,KAAKhQ,KAAKb,MAAM6Q,KAAK,GAAIvK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC+O,KAAMxO,EAAEzC,OAAOyG,iBAE3I,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,UAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,mBAAiB,mBAAM,qDACvB,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMoQ,IAAIvP,KAAKb,MAAMoQ,IAAI,GAAI9J,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACsO,IAAK/N,EAAEzC,OAAOyG,iBAExI,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACA,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oCACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM8Q,aAAajQ,KAAKb,MAAM8Q,aAAa,GAAIxK,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACgP,aAAczO,EAAEzC,OAAOyG,MAAMiL,UAAU,EAAE,cAEjL,SAACpL,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,UAAC4F,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcE,MAAM,YAAYzB,SAAO,iBAAE,iFACvB,IAAvB,EAAK5E,MAAM4P,WAAsC,IAAvB,EAAK5P,MAAM4P,WAAsC,IAAvB,EAAK5P,MAAM4P,WAAiB,EAAK5P,MAAM0Q,OAAS,EAAK1Q,MAAM6P,QAAS,EAAK7P,MAAM8P,KADrF,yCAEvC,CAAC9O,QAAQ,EAAO8F,MAAO,2CAFgB,uBAIxCvF,EAAAA,EAAAA,QAAAA,KAAqB,CACvBQ,GAAI,EAAK/B,MAAM+B,GACf0H,QAAS,EAAKzJ,MAAMyJ,QACpBmG,UAAW,EAAK5P,MAAM4P,UACtBC,OAAQ,EAAK7P,MAAM6P,OACnBC,KAAM,EAAK9P,MAAM8P,KACjBU,OAAQ,EAAKxQ,MAAMwQ,OACnBC,SAAU,EAAKzQ,MAAMyQ,SACrBC,MAAO,EAAK1Q,MAAM0Q,MAClB1L,QAAS,EAAKhF,MAAMgF,QACpB2L,SAAU,EAAK3Q,MAAM2Q,SACrBC,QAAS,EAAK5Q,MAAM4Q,QACpBlB,UAAW,EAAK1P,MAAM0P,UACtBmB,KAAM,EAAK7Q,MAAM6Q,KACjBT,IAAK,EAAKpQ,MAAMoQ,IAChBU,aAAc,EAAK9Q,MAAM8Q,eAnBiB,cAqB9C,EAAK/Q,MAAM4C,SAAS,EAAK3C,MAAM+B,IArBe,kBAsBvC,CAACf,QAAQ,IAtB8B,8CAyBtD,SAACiM,EAAA,EAAD,CAAQzN,QAAQ,SAASyF,MAAO,CAAC+B,WAAY,QAASpC,SAAO,iBAAE,kFACxDnD,OAAOC,QAAQ,8GADyC,gCAEjDH,EAAAA,EAAAA,QAAAA,OAAuB,EAAKvB,MAAM+B,IAFe,OAGvD,EAAKhC,MAAM4C,SAAS,MACpB,EAAK5C,MAAM8C,WAJ4C,2CAA/D,qCAUH,+BACD,WACIhC,KAAKsQ,mBAAmBtQ,KAAKd,MAAME,KAAKwJ,WAC3C,gCACD,WACO5I,KAAKb,MAAM+B,KAAKlB,KAAKd,MAAME,KAAK8B,KAC/BlB,KAAKsQ,mBAAmBtQ,KAAKd,MAAME,KAAKwJ,SACxC5I,KAAKiB,SAAS,CACVC,GAAIlB,KAAKd,MAAME,KAAK8B,GACpB6N,UAAW/O,KAAKd,MAAME,KAAK2P,UAC3BnG,QAAS5I,KAAKd,MAAME,KAAKwJ,QACzB8G,OAAQ1P,KAAKd,MAAME,KAAKsQ,OACxBV,OAAQhP,KAAKd,MAAME,KAAK4P,OACxBC,KAAMjP,KAAKd,MAAME,KAAK6P,KACtBU,OAAQ3P,KAAKd,MAAME,KAAKuQ,OACxBC,SAAU5P,KAAKd,MAAME,KAAKwQ,SAC1BC,MAAO7P,KAAKd,MAAME,KAAKyQ,MACvBC,SAAU9P,KAAKd,MAAME,KAAK0Q,SAC1BC,QAAS/P,KAAKd,MAAME,KAAK2Q,QACzBlB,UAAW7O,KAAKd,MAAME,KAAKyP,UAC3B1K,QAASnE,KAAKd,MAAME,KAAK+E,QACzB6L,KAAMhQ,KAAKd,MAAME,KAAK4Q,KACtBT,IAAKvP,KAAKd,MAAME,KAAKmQ,IACrBU,aAAcjQ,KAAKd,MAAME,KAAK6Q,kBAGzC,mEACD,WAAyBrH,GAAzB,4EACOA,EAAQ,GADf,gCAEiClI,EAAAA,EAAAA,KAAAA,IAAiB,CAACQ,GAAI0H,GAAU,CAAClB,OAAQ,CAAC,kBAF3E,QAEYW,EAFZ,QAGwB7B,OAAS,EACrBxG,KAAKiB,SAAS,CAACiP,qBAAsB7H,EAAa,GAAGA,eAErDrI,KAAKiB,SAAS,CAACiP,qBAAsB,OANjD,mGADC,MACD,EA9KEb,CAAuBnM,EAAAA,W,wCChYvBwN,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYxR,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTwR,eAAgB,KAChBC,cAAe,KACfC,eAAgB,MALN,EA+LlB,OAxLC,8BACD,WAAS,IAAD,OAEAC,EAAY,KAChB,GAAG9Q,KAAKb,MAAMwR,eAAe,CACzB,IAAII,EAAe,GAGbC,EAAsB,CACxBC,OAAQ,CAAC,gBAAiB,YAAa,gBACvCC,SAAU,CACR,CACE1B,MAAO,aACPzF,KAAM/J,KAAKb,MAAMwR,eACjBH,gBAAiB,CAAC,UAAW,UAAW,WACxCW,YAAa,CAAC,UAAW,UAAW,WACpCC,YAAa,KAKrBL,EAAaxN,MAAK,iBAAaa,MAAO,CAAC4C,OAAQ,OAAQqK,aAAc,OAAQ7M,MAAO,QAASqB,OAAQ,SAAnF,WAA6F,oDAA+B,SAAC,KAAD,CAAKD,QAAS,CAAC0L,QAAS,CAACC,OAAO,CAACC,SAAU,YAAazH,KAAMiH,MAAjL,MAG3B,IAAMS,EAAoB,CACtBR,OAAQ,CAAC,wBAAyB,UAAW,QAAS,YAAa,qBAAsB,QAAS,YAClGC,SAAU,CACR,CACE1B,MAAO,aACPzF,KAAM/J,KAAKb,MAAMuS,aACjBlB,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpFW,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChFC,YAAa,KAIrBL,EAAaxN,MAAK,iBAAaa,MAAO,CAAC4C,OAAQ,OAAQqK,aAAc,OAAQ7M,MAAO,QAASqB,OAAQ,SAAnF,WAA6F,wCAAmB,SAAC,KAAD,CAAKD,QAAS,CAAC0L,QAAS,CAACC,OAAO,CAACC,SAAU,YAAazH,KAAM0H,MAArK,MAG3B,IAAME,EAAsB,CACxBV,OAAQ,CAAC,OAAQ,OAAQ,QACzBC,SAAU,CACN,CACI1B,MAAO,eACPzF,KAAM/J,KAAKb,MAAMyS,eACjBpB,gBAAiB,CAAC,WAClBW,YAAa,CAAC,WACdC,YAAa,EAEb7L,KAAM,QAEV,CACIiK,MAAO,WACPzF,KAAM/J,KAAKb,MAAM0S,eACjBrB,gBAAiB,CAAC,WAClBW,YAAa,CAAC,WACdC,YAAa,KAIzBL,EAAaxN,MAAK,iBAAaa,MAAO,CAACiN,aAAc,OAAQ7M,MAAO,OAAQqB,OAAQ,SAAlE,WAA4E,yCAAoB,SAAC,KAAD,CAAKD,QAAS,CAACkM,aAAa,EAAOR,QAAS,CAACC,OAAO,CAAC1K,SAAS,EAAM2K,SAAU,YAAazH,KAAM4H,MAAxL,MAG3B,IAAII,EAA6B,CAAC,OAAQ,OAAQ,UAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzHA,EAA2BC,QAAQ,IAAI9C,MAAQ+C,WAAW,GAC1D,IAAMC,EAA8B,CAChCjB,OAAQc,EACRb,SAAU,CACN,CACI1B,MAAO,eACPzF,KAAM/J,KAAKb,MAAMgT,uBACjB3B,gBAAiB,CAAC,WAClBW,YAAa,CAAC,WACdC,YAAa,EAEb7L,KAAM,QAEV,CACIiK,MAAO,WACPzF,KAAM/J,KAAKb,MAAMiT,uBACjB5B,gBAAiB,CAAC,WAClBW,YAAa,CAAC,WACdC,YAAa,KAIzBL,EAAaxN,MAAK,iBAAaa,MAAO,CAACiN,aAAc,OAAQ7M,MAAO,OAAQqB,OAAQ,SAAlE,WAA4E,4CAAuB,SAAC,KAAD,CAAKD,QAAS,CAACkM,aAAa,EAAOR,QAAS,CAACC,OAAO,CAAC1K,SAAS,EAAM2K,SAAU,YAAazH,KAAMmI,MAA3L,MAE3BpB,GAAY,yBAAMC,IAItB,IAAIsB,EAAW,KACf,GAAGrS,KAAKb,MAAMyR,cAAc,CACxB,IAAI0B,EAAc,GAEZC,EAAqB,CACvBtB,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5HC,SAAU,CACR,CACE1B,MAAO,GACPzF,KAAM/J,KAAKb,MAAMyR,cACjBJ,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,WAC9DW,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,WAC1DC,YAAa,KAIrBkB,EAAY/O,MAAK,iBAAaa,MAAO,CAAC4C,OAAQ,OAAQqK,aAAc,OAAQ7M,MAAO,QAASqB,OAAQ,SAAnF,WAA6F,6CAAwB,SAAC,KAAD,CAAKD,QAAS,CAAC0L,QAAS,CAACC,OAAO,CAAC1K,SAAS,EAAO2K,SAAU,YAAazH,KAAMwI,MAA1L,MAG1B,IAAMC,EAAiB,CACnBvB,OAAQ,CAAC,WAAY,kBACrBC,SAAU,CACR,CACE1B,MAAO,GACPzF,KAAM/J,KAAKb,MAAMsT,UACjBjC,gBAAiB,CAAC,UAAW,WAC7BW,YAAa,CAAC,UAAW,WACzBC,YAAa,KAIrBkB,EAAY/O,MAAK,iBAAaa,MAAO,CAAC4C,OAAQ,OAAQqK,aAAc,OAAQ7M,MAAO,QAASqB,OAAQ,SAAnF,WAA6F,iEAAsC,SAAC,KAAD,CAAKD,QAAS,CAAC0L,QAAS,CAACC,OAAO,CAAC1K,SAAS,EAAM2K,SAAU,YAAazH,KAAMyI,MAAvM,MAE1BH,GAAW,gBAAKjO,MAAO,CAACyC,QAAS,OAAQ6L,SAAU,QAAxC,SAAkDJ,IAIjE,IAAIK,EAAe,KACnB,GAAG3S,KAAKb,MAAM0R,eAAe,CACzB,IAAI+B,EAAkB,GAIhBC,EAAsB,CACxB5B,OAAQ,CAAC,uBAAwB,cAAe,wBAAyB,sBACzEC,SAAU,CACR,CACE1B,MAAO,GACPzF,KAAM/J,KAAKb,MAAM0R,eACjBL,gBAAiB,CAAC,UAAW,UAAW,UAAW,WACnDW,YAAa,CAAC,UAAW,UAAW,UAAW,WAC/CC,YAAa,KAIrBwB,EAAgBrP,MAAK,iBAAaa,MAAO,CAAC4C,OAAQ,OAAQqK,aAAc,OAAQ7M,MAAO,QAASqB,OAAQ,SAAnF,WAA6F,0DAAqC,SAAC,KAAD,CAAKD,QAAS,CAAC0L,QAAS,CAACC,OAAO,CAACC,SAAU,YAAazH,KAAM8I,MAAvL,MAE9BF,GAAe,gBAAKvO,MAAO,CAACyC,QAAS,OAAQ6L,SAAU,QAAxC,SAAkDE,IAErE,OAAO,iCACP,SAACtT,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,SAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,UACI,SAACH,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,UACI,SAACJ,EAAA,OAAD,UACKoB,EAAAA,EAAAA,OAAe,YAAW,SAAC,KAAD,CAASC,UAAW,CACvC,CAAC,2BAAD,iBAA4B,kFACrBC,OAAOC,QAAQ,oFADM,iCAEGH,EAAAA,EAAAA,KAAa,qBAFhB,UAGN,MAHM,8BAIhB,EAAKoS,aAJW,kBAKT,CAAC3S,QAAQ,IALA,gCAOT,CAACA,QAAQ,EAAO8F,MAAO,8CAPd,yDAgBpD,UAACxH,EAAA,EAAD,CAAWiB,UAAU,WAArB,WACI,UAACqT,EAAA,EAAD,CAAMC,iBAAiB,QAAQtT,UAAU,OAAzC,WACI,SAACuT,EAAA,EAAD,CAAKC,SAAS,QAAQtP,MAAM,QAA5B,SAAqCyO,KACrC,SAACY,EAAA,EAAD,CAAKC,SAAS,SAAStP,MAAM,SAA7B,SAAuCkN,KACvC,SAACmC,EAAA,EAAD,CAAKC,SAAS,YAAYtP,MAAM,uBAAhC,SAAwD+O,QAE5D,gBAAKvO,MAAO,CAAC+O,MAAO,QAASC,MAAO,qBAApC,SAA2DpT,KAAKb,MAAMkU,uBAG7E,+BACD,WAAoBrT,KAAK8S,eAAa,2DACtC,oGAC0BpS,EAAAA,EAAAA,WAAAA,SAD1B,OACU4S,EADV,OAEItT,KAAKiB,SAAS,CACVoS,aAAclG,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,iBAAXA,EAAEgM,QAAyBtE,MACtE4G,eAAgBxD,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,mBAAXA,EAAEgM,QAA2BtE,MAC1E2H,aAAcvE,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,gBAAXA,EAAEgM,QAAwBtE,MACrE8H,eAAgB1E,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,mBAAXA,EAAEgM,QAA2BtE,MAC1E6H,eAAgBzE,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,mBAAXA,EAAEgM,QAA2BtE,MAC1EqI,uBAAwBjF,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,2BAAXA,EAAEgM,QAAmCtE,MAC1FoI,uBAAwBhF,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,2BAAXA,EAAEgM,QAAmCtE,MAC1F6G,cAAezD,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,iBAAXA,EAAEgM,QAAyBtE,MACvE0I,UAAWtF,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,cAAXA,EAAEgM,QAAsBtE,MAChE8G,eAAgB1D,KAAKC,MAAMkG,EAAQ7P,MAAK,SAAApB,GAAC,MAAe,mBAAXA,EAAEgM,QAA2BtE,QAZlF,kGADsC,MACtC,EAhME2G,CAAmBxN,EAAAA,WAiNnBqQ,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrU,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTqU,QAAS,GACTC,aAAc,GACdC,MAAO,IALG,EAoHlB,OA7GC,8BACD,WAAS,IAAD,OACAC,EAAgB,GAIpB,OAHGjT,EAAAA,EAAAA,OAAe,YAAaiT,EAAgB,IACvCjT,EAAAA,EAAAA,OAAe,YAAaiT,EAAgB,IAC5CjT,EAAAA,EAAAA,OAAe,WAAUiT,EAAgB,MAC1C,iCAAE,SAAClV,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACT,UAACqT,EAAA,EAAD,CAAMC,iBAAkBW,EAAejU,UAAU,OAAjD,UACKgB,EAAAA,EAAAA,OAAe,cAAa,UAACuS,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,kBAAeQ,MAAO,CAACC,QAAS,SAAxD,WACzB,SAACgB,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,SAAC4F,EAAA,EAAD,iHAEJ,SAACD,EAAA,EAAD,WAAK,UAACC,EAAA,EAAD,YACD,SAAC,KAAD,CAAcE,MAAM,gCAAgCzB,SAAO,iBAAE,oGACxCrD,EAAAA,EAAAA,KAAa,WAD2B,UAEjD,OADFkT,EADmD,0CAG/CC,EAAAA,EAAAA,IAAM,KAHyC,cAIrD,EAAKC,cAJgD,kBAK9C,CAAC3T,QAAQ,IALqC,WAMzC,MAALyT,EAN8C,0CAO9C,CAACzT,QAAQ,EAAO8F,MAAO,gFAPuB,iCAQ3C,CAAC9F,QAAQ,EAAO8F,MAAO,mCARoB,+CAU7D,SAAC,KAAD,CAAcT,MAAM,8BAA8BzB,SAAO,iBAAE,oGACtCrD,EAAAA,EAAAA,KAAa,iBADyB,UAE/C,OADFkT,EADiD,0CAG7CC,EAAAA,EAAAA,IAAM,KAHuC,cAInD,EAAKC,cAJ8C,kBAK5C,CAAC3T,QAAQ,IALmC,WAMvC,MAALyT,EAN4C,0CAO5C,CAACzT,QAAQ,EAAO8F,MAAO,gFAPqB,iCAQzC,CAAC9F,QAAQ,EAAO8F,MAAO,mCARkB,oDAW/D,SAACZ,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WACD,UAAChB,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACI,4BACI,2BACI,mCACA,qCACA,oCACA,2CACA,6CAGR,2BACKxE,KAAKb,MAAMqU,QAAQO,KAAI,SAAAC,GACpB,IAAI7T,GAAO,eAAIT,UAAU,eAAd,mBAGX,OAFkB,IAAfsU,EAAIC,SAAc9T,GAAO,eAAIT,UAAU,iBAAd,qBACpB,IAAIwP,MAAOgF,EAAAA,EAAAA,IAAQF,EAAIG,QAAQ,OAAShU,GAAO,eAAIT,UAAU,eAAd,uBAChD,2BAAiB,wBAAKsU,EAAII,OAAO3D,UAAU,EAAG,OAAS,wBAAKuD,EAAIK,SAAalU,GAAO,wBAAK6T,EAAIM,SAAW,0BAAKzR,KAAK0R,MAAM,IAAKP,EAAIM,MAAMN,EAAI3T,OAAO,GAA1C,SAA/F2T,EAAI9S,mBAKvCR,EAAAA,EAAAA,OAAe,cAAa,UAACuS,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,eAAeQ,MAAO,CAACC,QAAS,SAAxD,WACzB,SAACgB,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,SAAC4F,EAAA,EAAD,8HAEJ,SAACD,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WACL,SAAChB,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,UACQ,2BAAQxE,KAAKb,MAAMsU,aAAaM,KAAI,SAAAS,GAChC,GAAGA,EAASC,IAAI,CACZ,IAAIC,EAAYF,EAASG,KAAKC,MAAM,IACpCF,EAAU,IAAM,IAChBA,EAAU,IAAM,IAChBA,EAAU,IAAM,IAChB,IAAIG,EAAcH,EAAUI,KAAK,IAAIrE,UAAU,EAAG,IAClD,OAAO,gBAAIrM,MAAO,CAAC2Q,cAAe,OAA3B,WAAmC,gBAAI3Q,MAAO,CAACC,QAAS,YAArB,WAAkC,uBAAImQ,EAASnG,KAAKmG,EAASnG,KAAKoC,UAAU,EAAG+D,EAASnG,KAAK7H,OAAO,IAAG,sCAAmB,mBAAM,cAAG9G,UAAU,WAAb,SAAyBmV,QAAqB,wBAAKL,EAASnG,MAAK,cAAGtP,OAAO,SAASD,KAAI,yBAAoB0V,EAASG,KAA7B,YAAqCH,EAASnG,MAArE,iBAAqF,QAAU,yBAAI,cAAGtP,OAAO,SAASD,KAAI,yBAAoB0V,EAASG,KAA7B,QAAvB,wBAAgF,yBAAI,cAAG5V,OAAO,SAASD,KAAI,yBAAoB0V,EAASG,KAA7B,QAAvB,4BAEla,OAAO,gBAAIvQ,MAAO,CAAC2Q,cAAe,OAA3B,WAAmC,eAAI3Q,MAAO,CAACC,QAAS,YAArB,UAAkC,2DAAwC,mBAAS,mCAMhJ3D,EAAAA,EAAAA,OAAe,WAAU,SAACuS,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,mBAAmBQ,MAAO,CAACC,QAAS,SAA5D,UACtB,UAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,MAAM,OAArB,WACQ,kBAAOJ,MAAO,CAACK,UAAU,QAAzB,UAAkC,2BAAI,eAAID,MAAM,MAAV,mBAAyB,eAAIA,MAAM,MAAV,qBAA2B,eAAIA,MAAM,MAAV,sBAA4B,eAAIA,MAAM,MAAV,yBACtH,2BACKxE,KAAKb,MAAMuU,MAAMK,KAAI,SAAAiB,GAAI,OAAO,2BACjC,yBAAI,eAAGtV,UAAU,YAAYqE,QAAS,WAAK,EAAK9C,SAAS,CAAC7B,KAAM4V,KAA5D,UAAmEA,EAAEC,WAArE,IAAkFD,EAAEE,gBACxF,wBAAK/H,KAAKC,MAAM4H,EAAEG,QAAQL,KAAK,SAC/B,wBAAKE,EAAEI,SACP,wBAAKJ,EAAEK,qBAAqB,IAAInG,MAAOgF,EAAAA,EAAAA,IAAQc,EAAEK,qBAAqB,MAAQ,SAAC,IAAD,CAAiBzW,KAAM0W,EAAAA,IAAOlC,MAAM,OAAOhP,MAAO,CAAC6C,SAAU,OAAQd,WAAY,WAAY,SAAC,IAAD,CAAiBvH,KAAM2W,EAAAA,IAAQnC,MAAM,SAAShP,MAAO,CAAC6C,SAAU,OAAQd,WAAY,cAJrN6O,EAAE9T,mBAU/DlB,KAAKb,MAAMC,OAAM,SAACoW,EAAD,CAAaxT,SAAU,WAAK,EAAKyT,aAAcxT,QAAS,WAAK,EAAKhB,SAAS,CAAC7B,KAAM,QAASA,KAAMY,KAAKb,MAAMC,KAAM0C,SAAU,SAAAkB,YAEjJ,+BACD,WACOtC,EAAAA,EAAAA,OAAe,UAAUV,KAAKyV,YAC9B/U,EAAAA,EAAAA,OAAe,aAAaV,KAAK8T,cACjCpT,EAAAA,EAAAA,OAAe,aAAaV,KAAK0V,qBACvC,iEACD,2FACI1V,KAAKiB,SAAS,CAACwS,aAAc,KADjC,SAEkC/S,EAAAA,EAAAA,KAAa,qBAAqB,GAFpE,OAEUiV,EAFV,OAII3V,KAAKiB,SAAS,CAACwS,aAAckC,IAJjC,kGADC,IACD,4DAMA,2FACI3V,KAAKiB,SAAS,CAACuS,QAAS,KAD5B,SAE6B9S,EAAAA,EAAAA,SAAAA,SAF7B,OAEUkV,EAFV,OAGI5V,KAAKiB,SAAS,CAACuS,QAASoC,IAH5B,kGANA,IAMA,0DAKA,2FACI5V,KAAKiB,SAAS,CAACyS,MAAO,KAD1B,SAE2BhT,EAAAA,EAAAA,KAAAA,OAAoB,CAACZ,MAAO,CAAC,eAFxD,OAEU+V,EAFV,OAGI7V,KAAKiB,SAAS,CAACyS,MAAOmC,IAH1B,kGALA,MAKA,EArHEtC,CAAerQ,EAAAA,WA2HfsS,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYtW,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgW,OAAQhI,KAAKC,MAAM,EAAKlO,MAAME,KAAK+V,SAFnC,EA0EjB,OAvEA,8BACD,WAoBI,IApBK,IAAD,OAmBAW,EAAY,GAnBZ,aAoBA,sBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAS,GACV,EAAK9W,MAAMgW,OAAOe,SAASH,KAAQE,EAAS,gBAC/CH,EAAUvS,MAAK,gBAAiBa,MAAO,CAACqI,OAAQ,WAAY/M,UAAWuW,EAAQlS,QAAS,WACpF,IAAIoS,EAAU,EAAKhX,MAAMgW,OACtBgB,EAAQD,SAASH,GAChBI,EAAUA,EAAQpC,KAAI,SAAA1R,GAAM,GAAGA,GAAG0T,EAAO,OAAO1T,KAEhD8T,EAAQ5S,KAAKwS,GAEjB,EAAK9U,SAAS,CAACkU,OAAQgB,KAPZ,SAQXH,GARqBD,KAH7B,MAAkCK,OAAOC,QAnB1B,CACX,KAAQ,mBACR,MAAS,cACT,OAAU,iCACV,OAAU,0BACV,MAAS,qBACT,OAAU,oBACV,OAAU,yBACV,QAAW,yBACX,OAAU,wBACV,MAAS,6BACT,OAAU,+BACV,OAAU,mCACV,QAAW,gCACX,kBAAqB,wBACrB,SAAY,wBACZ,SAAY,6BAGhB,eAA0D,IAc1D,OAAO,UAACvR,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKjG,MAAM+C,WAA9F,WACP,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UACI,UAACN,EAAA,QAAD,WAAkB9E,KAAKd,MAAME,KAAK6V,WAAlC,IAA+CjV,KAAKd,MAAME,KAAK8V,UAA/D,QAA+ElV,KAAKd,MAAME,KAAK8B,GAA/F,UAEJ,SAAC4D,EAAA,OAAD,WACI,UAACrG,EAAA,EAAD,YACI,SAAC4G,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,UAAC4F,EAAA,EAAD,iBAAStF,KAAKd,MAAME,KAAKiW,oBAAzB,yBAEJ,SAAChQ,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,SAAC4F,EAAA,EAAD,CAAKlB,MAAO,CAAC+H,OAAQ,gCAAiCE,aAAc,MAAO+G,MAAO,sBAAuBpM,OAAQ,SAAU3C,QAAS,QAApI,SAA8IrE,KAAKd,MAAME,KAAKgW,WAElK,SAAC/P,EAAA,EAAD,WAAK,SAACC,EAAA,EAAD,WAAK,wCACV,SAACD,EAAA,EAAD,CAAK3F,UAAU,OAAf,UAAsB,SAAC4F,EAAA,EAAD,CAAKlB,MAAO,CAAC+H,OAAQ,gCAAiCE,aAAc,MAAO+G,MAAO,sBAAuBpM,OAAQ,SAAU3C,QAAS,QAApI,SAA8IyR,OACpK,UAACzQ,EAAA,EAAD,YAAK,SAACC,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,YAAYzB,QAAS,WAM/C,OALArD,EAAAA,EAAAA,KAAAA,KAAkB,CACdQ,GAAI,EAAKhC,MAAME,KAAK8B,GACpBiU,OAAQhI,KAAKmJ,UAAU,EAAKnX,MAAMgW,UAEtC,EAAKjW,MAAM8C,WACJ,CAAC7B,QAAQ,SAEd,SAACmF,EAAA,EAAD,WAAK,SAAC8G,EAAA,EAAD,CAAQzN,QAAQ,SAASoF,SAAO,iBAAE,kFACtCnD,OAAOC,QAAQ,iHADuB,gCAE/BH,EAAAA,EAAAA,KAAAA,OAAoB,EAAKxB,MAAME,KAAK8B,IAFL,OAGrC,EAAKhC,MAAM+C,UACX,EAAK/C,MAAM8C,WAJ0B,2CAAlC,+CAStB,gCACD,SAAmB+G,GACZA,EAAU3J,KAAK8B,IAAIlB,KAAKd,MAAME,KAAK8B,IAClClB,KAAKiB,SAAS,CAACkU,OAAQhI,KAAKC,MAAMpN,KAAKd,MAAME,KAAK+V,cAEzD,EA3ECK,CAAoBtS,EAAAA,WA6EpBqT,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrX,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTqX,IAAK,MACL5O,QAAS,GACT6O,QAAS,GACTC,SAAU,GACVC,WAAY,KACZC,SAAU,EACVC,WAAY,KACZC,SAAU,KACVC,WAAY,KACZC,kBAAmB,KACnBC,UAAW,KACXC,YAAa,KACbC,aAAc,KACdC,cAAe,KACfC,UAAW,KACXC,aAAc,GACdC,eAAgB,KAChBC,SAAU,KACVC,aAAc,IACdC,WAAY,EACZC,YAAa,KACbC,cAAe,CAAC,CAAClX,EAAAA,EAAAA,GAAAA,GAAeA,EAAAA,EAAAA,GAAAA,YAChCmX,qBAAsBnX,EAAAA,EAAAA,GAAAA,GACtBoX,cAAe,MA1BL,EA2SjB,OA/QA,8BACD,WAAS,IAAD,OACJ,OAAO,SAACrZ,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACH,UAACqT,EAAA,EAAD,CAAMC,iBAAiB,IAAItT,UAAU,OAArC,WACI,UAACuT,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,YAAYQ,MAAO,CAACC,QAAS,SAArD,WACI,UAACgB,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAelB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMuX,SAAUvG,IAAI,OAAOC,UAAU,SAASC,UAAU,SAAS5K,SAAQ,mCAAE,WAAOD,EAAOtE,GAAd,iEAC3H,EAAKD,SAAS,CAACyV,SAAUlR,EAAOmR,WAAYzV,IAD+E,2CAAF,gEAIrI,UAACmE,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,sBAAuB,CAAC,EAAG,sBAAuB,CAAC,EAAG,eAAgB,CAAC,EAAG,0BAA2B,CAAC,EAAG,0BAA2B,CAAC,EAAG,cAAeH,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC2V,SAAUlT,SAASlC,EAAEzC,OAAOyG,iBAE5N,IAAtBxF,KAAKb,MAAMyX,UAAoC,IAAtB5W,KAAKb,MAAMyX,UAAoC,IAAtB5W,KAAKb,MAAMyX,SAAa,EACvE,UAACvR,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,sBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4V,WAAYrV,EAAEzC,OAAOyG,eAF7F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC6V,SAAUtV,EAAEzC,OAAOyG,eAF3F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC8V,WAAYvV,EAAEzC,OAAOyG,eAF7F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC+V,kBAAmBxV,EAAEzC,OAAOyG,eAFpG,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,cAAe,CAAC,EAAG,2BAA4B,CAAC,EAAG,4BAA6BH,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACgW,UAAWvT,SAASlC,EAAEzC,OAAOyG,gBAF/O,MAIX,KACqB,IAAtBxF,KAAKb,MAAMyX,SAAa,EACrB,UAACvR,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,qBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACkW,aAAc3V,EAAEzC,OAAOyG,eAF/F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACiW,YAAa1V,EAAEzC,OAAOyG,eAF9F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,wBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACmW,cAAe5V,EAAEzC,OAAOyG,eAFhG,MAIX,KACqB,IAAtBxF,KAAKb,MAAMyX,UAAoC,IAAtB5W,KAAKb,MAAMyX,SAAa,EAC9C,UAACvR,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,uBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4V,WAAYrV,EAAEzC,OAAOyG,eAF7F,MAIT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,mBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACkW,aAAc3V,EAAEzC,OAAOyG,eAF/F,MAIT,UAACH,EAAA,EAAD,CAAc3F,UAAU,OAAxB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC6V,SAAUtV,EAAEzC,OAAOyG,eAF3F,OAIX,MACF,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOnB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC8W,SAAUvW,EAAEzC,OAAOyG,iBAEpG,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,4BACA,SAACtJ,EAAA,EAAD,WAAK,SAACsF,EAAA,QAAD,WACD,SAACA,EAAA,UAAD,CAAcrF,KAAK,OAAOyS,UAAQ,EAACC,OAAO,YAAYxS,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACoW,UAAW7V,EAAEzC,OAAOmZ,mBAG/G,UAAC7S,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKsJ,GAAI,KACT,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,YAAYzB,SAAO,iBAAE,iGACzB,MAAtB,EAAK5E,MAAMkY,UADoC,yCAEvC,CAAClX,QAAQ,EAAO8F,MAAO,wCAFgB,UAGjB,IAAtB,EAAK9G,MAAMyX,UAAoC,IAAtB,EAAKzX,MAAMyX,UAAoC,IAAtB,EAAKzX,MAAMyX,UAAiB,EAAKzX,MAAM0X,YAAa,EAAK1X,MAAM2X,SAH1E,yCAIvC,CAAC3W,QAAQ,EAAO8F,MAAO,2CAJgB,UAKd,OAA1B,EAAK9G,MAAMwX,WAL6B,0CAMvC,CAACxW,QAAQ,EAAO8F,MAAO,yCANgB,YAOxC,EAAK9G,MAAM4Y,WAAU,EAAK5Y,MAAMwX,WAPQ,uBAUrB,MADrBwB,EAAQ,EAAKhZ,MAAM4Y,UACdtH,UAAU,EAAE,KAAS0H,EAAQ,IAAIA,GACN,KAAjCA,EAAM1H,UAAU0H,EAAM3R,OAAO,KAAS2R,GAAc,KAXT,UAYnBzX,EAAAA,EAAAA,QAAAA,KAAqB,CAC5CkI,QAAS,EAAKzJ,MAAMwX,WACpB5H,UAAW,EAAK5P,MAAMyX,SACtB5H,OAAQ,EAAK7P,MAAM0X,WACnB5H,KAAM,EAAK9P,MAAM2X,SACjBnH,OAAQ,EAAKxQ,MAAM4X,WACnBnH,SAAU,EAAKzQ,MAAM6X,kBACrBnH,MAAO,EAAK1Q,MAAM8X,UAClBnH,SAAU,EAAK3Q,MAAMgY,aACrBpH,QAAS,EAAK5Q,MAAM+X,YACpBrI,UAAW,EAAK1P,MAAMiY,cACtBpH,KAAMmI,EACN5I,IAAK,KAxBqC,cAYxC6I,EAZwC,QA2B9B,GA3B8B,iBAgC1C,KAJIC,EAAa,IAAIC,UACVC,OAAO,aAAcH,GAChCC,EAAWE,OAAO,OAAQ,EAAKpZ,MAAM4Y,UAC/BS,EAAU,EAAKrZ,MAAMkY,UAAU7Q,OAC7BnE,EAAE,EAAGA,EAAEmW,EAASnW,IAAKgW,EAAWE,OAAO,QAAS,EAAKpZ,MAAMkY,UAAUhV,IAhCnC,iBAiCzB3B,EAAAA,EAAAA,YAAoB2X,GAjCK,WAkC3B,OADTzE,EAjCoC,QAkCpCzT,OAlCoC,0CAkCf,CAACA,QAAQ,EAAO8F,MAAM,iEAAD,OAAmEmS,EAAnE,mCAlCN,WAmClB,GAAhBxE,EAAG6E,KAAKjS,OAnC0B,wBAmCfkS,QAAQjE,IAAR,8DAAgEb,EAAG6E,KAAK3D,KAAK,QAnC9D,kBAmC8E,CAAC3U,QAAQ,EAAMwY,QAAQ,4GAAD,OAA2GP,EAA3G,sBAnCpG,aAoClCxE,EAAG6E,KAAKjS,OAAO,GApCmB,wBAoChBkS,QAAQjE,IAAR,8DAAgEb,EAAG6E,KAAK3D,KAAK,QApC7D,kBAoC6E,CAAC3U,QAAQ,EAAMwY,QAAQ,kCAAD,OAAoC/E,EAAG6E,KAAKjS,OAA5C,oFAA2H4R,EAA3H,sBApCnG,iCAqC9B,CAACjY,QAAQ,EAAMwY,QAAQ,8BAAD,OAAgCP,EAAhC,sBArCQ,yDAuCnC,CAACjY,QAAQ,EAAO8F,MAAO,2EAvCY,yDAyCpC,CAAC9F,QAAQ,EAAO8F,MAAO,0CAzCa,uDA6CtD,UAACgN,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,cAAcQ,MAAO,CAACC,QAAS,SAAvD,WACI,UAACgB,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAelB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMmY,aAAcnH,IAAI,aAAaC,UAAU,OAAOC,UAAU,OAAO5K,SAAQ,mCAAE,WAAOD,EAAOtE,GAAd,iEACjI,EAAKD,SAAS,CAACqW,aAAc9R,EAAO+R,eAAgBrW,IAD6E,2CAAF,gEAI3I,UAACmE,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,4BACA,SAACtJ,EAAA,EAAD,WAAK,SAACsF,EAAA,QAAD,WACD,SAACA,EAAA,UAAD,CAAcrF,KAAK,OAAOyS,UAAQ,EAACC,OAAO,aAAaxS,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACuW,SAAUhW,EAAEzC,OAAOmZ,mBAG/G,UAAC7S,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKsJ,GAAI,KACT,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcC,KAAK,SAASC,MAAM,YAAYzB,SAAO,iBAAE,iGACpC,MAArB,EAAK5E,MAAMqY,SAD8C,yCAEjD,CAACrX,QAAQ,EAAO8F,MAAO,wCAF0B,UAGxB,MAA3B,EAAK9G,MAAMoY,eAHwC,yCAIjD,CAACpX,QAAQ,EAAO8F,MAAO,oCAJ0B,wBAMlCvF,EAAAA,EAAAA,KAAAA,IAAiB,CAACsP,KAAM,EAAK7Q,MAAMmY,cAAe,CAAC5P,OAAQ,CAAC,KAAM,cANhC,QAMlDkR,EANkD,OAQpDC,EAAU,GACVC,EAAU,GAT0C,UAUtC,EAAK3Z,MAAMqY,UAV2B,mHAU9CuB,EAV8C,QAW9CC,EAAQD,EAAK1K,KAAKoC,UAAU,EAAEsI,EAAK1K,KAAK7H,OAAO,KAC/CyS,EAAQL,EAAQnV,MAAK,SAAApB,GAAC,OAAIA,EAAE6W,UAAYF,MAZM,iCAe1BD,EAAKI,OAfqB,OAe1CC,EAf0C,OAgBhDN,EAAQvV,KAAK,CAACrC,GAAI+X,EAAM/X,GAAImY,UAAWD,IAhBS,wBAkBhDP,EAAQtV,KAAKwV,EAAK1K,MAlB8B,sRAqBrDyK,EAAQtS,OAAO,GArBsC,kCAqB7B9F,EAAAA,EAAAA,KAAAA,KAAkBoY,GArBW,aAsBrDD,EAAQrS,OAAO,GAtBsC,wBAsBnCkS,QAAQjE,IAAR,oCAAsCoE,EAAQ/D,KAAK,QAtBhB,kBAsBgC,CAAC3U,QAAQ,EAAMwY,QAAQ,+BAAD,OAAiCE,EAAQrS,OAAzC,4DAtBtD,WAuBhC,GAAhBqS,EAAQrS,OAvBwC,wBAuB7BkS,QAAQjE,IAAR,oCAAsCoE,EAAQ/D,KAAK,QAvBtB,kBAuBsC,CAAC3U,QAAQ,EAAMwY,QAAS,qFAvB9D,iCAwB5C,CAACxY,QAAQ,IAxBmC,4EA6BpE,UAAC8S,EAAA,EAAD,CAAKC,SAAS,IAAItP,MAAM,SAASQ,MAAO,CAACC,QAAS,SAAlD,WACI,UAACgB,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAOH,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACwW,aAAcjW,EAAEzC,OAAOyG,iBAExX,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,4BACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS5F,KAAKb,MAAMyY,cAAenS,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4W,qBAAsBrW,EAAEzC,OAAOyG,iBAEpH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,0BACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,yBAA0B,CAAC,EAAG,yBAA0B,CAAC,EAAG,cAAeH,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACyW,WAAYlW,EAAEzC,OAAOyG,iBAEhK,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,sBACA,SAACtJ,EAAA,EAAD,WAAK,SAACsF,EAAA,QAAD,WACD,SAACA,EAAA,UAAD,CAAcrF,KAAK,OAAOyS,UAAQ,EAACC,OAAO,aAAaxS,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC0W,YAAanW,EAAEzC,OAAOmZ,mBAGlH,UAAC7S,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,KACT,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,mBAAmBzB,SAAO,iBAAE,2GACtB,MAAxB,EAAK5E,MAAMwY,YADmC,yCAEtC,CAACxX,QAAQ,EAAO8F,MAAO,4CAFe,UAGvC,EAAK9G,MAAMwY,YAAYnR,OAAO,GAAK,EAHI,yCAItC,CAACrG,QAAQ,EAAO8F,MAAO,sFAJe,OAkB7C,IAZe,IACXqT,EADW,IAEXC,GAAgB,EAChBC,EAAc,GACd7B,EAAc,EAAKxY,MAAMwY,aAG7BA,EAAc8B,MAAMC,KAAK/B,IACbgC,MAAK,SAACC,EAAGC,GAAO,OAAGA,EAAExL,KAAOuL,EAAEvL,KAAa,GAAgB,KAI/DhM,EAAE,EAAGA,EAAEsV,EAAYnR,OAAQnE,IAC5BiX,GAbQ,MAcPA,EAAa,EACbC,IACAC,EAAYjW,KAAK,IAAI+U,UACrBkB,EAAYD,GAAchB,OAAO,SAAU,EAAKpZ,MAAMsY,cACtD+B,EAAYD,GAAchB,OAAO,OAAQ,EAAKpZ,MAAMuY,YACpD8B,EAAYD,GAAchB,OAAO,aAAc,EAAKpZ,MAAM0Y,uBAE9DyB,IACAE,EAAYD,GAAchB,OAAO,QAASZ,EAAYtV,IAGtDyX,EAAU,EACVC,EAAS,EAhCgC,MAiC1BP,EAjC0B,iDAiCnCQ,EAjCmC,eAkCzBtZ,EAAAA,EAAAA,aAAqBsZ,GAlCI,QAkCnCC,EAlCmC,OAmC1B,IAAZH,IAAeA,EAAQG,EAAE,IAC5BF,EAASE,EAAE,GApC8B,2CAsC7C,EAAKhZ,SAAS,CAAC6W,cAAe,CAACgC,EAASC,KAtCK,kBAuCtC,CAAC5Z,QAAQ,IAvC6B,mDA2CxDH,KAAKb,MAAM2Y,gBAAe,SAACzS,EAAA,EAAD,WACvB,SAACC,EAAA,EAAD,WAAK,UAAC5G,EAAA,EAAD,CAAOC,QAAQ,UAAUsD,QAAS,WAAK,EAAKhB,SAAS,CAAC6W,cAAe,QAASoC,aAAW,EAAzF,WACD,SAACxb,EAAA,UAAD,sCAAqD,iEAAuC,uBAAIsB,KAAKb,MAAM2Y,cAAc,KAApE,SAAgF,uBAAI9X,KAAKb,MAAM2Y,cAAc,KAA7G,0DAAuK,SAACpZ,EAAA,OAAD,CAAYI,KAAK,IAAIiF,QAAS,SAAAvC,GAClQwC,aAAaC,QAAQ,mBAArB,0CAA4E,EAAK9E,MAAM2Y,cAAc,GAArG,2CAA0I,EAAK3Y,MAAM2Y,cAAc,GAAnK,iBACA,EAAK5Y,MAAMqC,SAASC,EAAG,WAF6M,uBAAvK,eAKjE,SAAC6D,EAAA,EAAD,CAAK3F,UAAU,OAAf,UAAsB,UAAC4F,EAAA,EAAD,kEAAwD,cAAGxG,KAAK,wFAAR,kBAAxD,mBAIjC,+BACD,WAAoB,IAAD,OAoBZ4B,EAAAA,EAAAA,OAAe,UACdA,EAAAA,EAAAA,KAAAA,OAAoB,CAACZ,MAAO,CAAC,eAAeqa,MAAK,SAAAzG,GAC7C,IADoD,EAChD0G,EAAU,GADsC,UAElC1G,GAFkC,IAEpD,IAAI,EAAJ,qBAAwB,CAAC,IAAf2G,EAAc,QACpBD,EAAQ7W,KAAK,CAAC8W,EAAKnZ,GAAImZ,EAAKnF,aAHoB,8BAKpD,EAAKjU,SAAS,CAAC2W,cAAewC,OAC/BE,OAAM,SAAA9Y,GAAI,MAAMA,SAE1B,EA5SC+U,CAAerT,EAAAA,W,UC7ZfqX,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrb,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACiB,aAAc,GAAIL,WAAY,KAAMya,YAAY,EAAOC,UAAU,EAAMpa,MAAM,EAAG0C,gBAAgB,CAACC,IAAI,GAAII,UAAU,OAFnH,EA8HlB,OA3HC,8BACD,WAAS,IAAD,OACEzC,EAAY,CACd,CAAC,8BAAD,iBAA+B,oGACHD,EAAAA,EAAAA,OAAAA,OAAsB,EAAKvB,MAAMwD,MAAO,CAAC+E,OAAQ,CAAC,WAAY,eAAgB,SAAU,gBAAiB,OAAOgT,QAAO,EAAM5a,MAAM,EAAKX,MAAMyD,aAD3I,OACrB+X,EADqB,OAE3BjC,QAAQjE,IAAIkG,GACZ/Z,OAAOga,KAAKD,EAAW,UAHI,6CAcnC,OARGja,EAAAA,EAAAA,OAAe,WACdC,EAAU4C,KAAK,CAAC,0BAAD,iBAA2B,wFACnC3C,OAAOC,QAAQ,0CADoB,gCAEdH,EAAAA,EAAAA,OAAAA,KAAoB,CAAC6E,KAAM,EAAGsV,IAAK,iBAFrB,OAE5B7Z,EAF4B,OAGlC,EAAKC,SAAS,CAAClB,WAAY,CAAC,CAACmB,GAAI,EAAGC,EAAG,KAAMC,EAAG,IAAKC,EAAEL,MAHrB,8CAOvC,iCACH,SAAC1B,EAAA,EAAD,CAAQC,MAAM,SAASC,GAAG,QAA1B,UACI,UAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACI,SAACH,EAAA,WAAD,CAAiBI,UAAU,wBAA3B,UACI,SAACJ,EAAA,OAAD,WACI,SAAC,KAAD,CACAK,QAAQ,SACRC,YAAa,SAACC,EAAEC,GAAW,EAAKF,YAAYC,EAAEC,IAC9CC,WAAYC,KAAKb,MAAMY,WACvBE,cAAe,CACX,CAAC,QAAS,QACV,CAAC,OAAQ,OACT,CAAC,KAAM,MACP,CAAC,SAAU,QACX,CAAC,YAAa,aACd,CAAC,WAAY,wBACb,CAAC,mBAAoB,wBACrB,CAAC,OAAQ,mBACT,CAAC,aAAc,gBACf,CAAC,WAAY,aAEjBC,YAAa,CAAC,CAAC,SAAU,MAAO,CAAC,+CAAgD,SAAU,CAAC,iBAAkB,iBAC9GC,OAAQH,KAAKb,MAAMiB,aACnB0a,cAAe,CACX,CAAC,4CAA6C,iBAC9C,CAAC,4CAA6C,gBAC9C,CAAC,kLAAmL,iBACpL,CAAC,mOAAoO,2BAKjP,UAACxb,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,WACI,SAACJ,EAAA,OAAD,UACCU,KAAKb,MAAMkB,MAAM,GAClB,SAAC,KAAD,CAAWC,SAAU,SAAAC,GAAU,EAAKD,SAASC,IAAWC,YAAaR,KAAKb,MAAMqB,YAAaC,QAAST,KAAKb,MAAMsB,UAChH,QAED,SAACnB,EAAA,OAAD,WACI,SAAC,KAAD,CAASqB,UAAWA,eAKpC,UAAClC,EAAA,EAAD,CAAWiB,UAAU,WAArB,WACI,SAACqb,GAAD,CACIza,SAAU,SAAAC,GAAY,EAAKD,SAASC,IACpCmB,gBAAiB1B,KAAKb,MAAMuC,gBAC5BrB,MAAOL,KAAKb,MAAMkB,MAClBG,YAAaR,KAAKb,MAAMqB,YACxBC,QAAST,KAAKb,MAAMsB,QACpBua,gBAAiBhb,KAAKb,MAAM6b,gBAC5BrZ,SAAW3B,KAAKb,MAAM4D,gBAAgBC,IAAIwD,OAAO,EAAG,UAAU,UAC9D5E,WAAY,SAAAxC,GACR,EAAK6B,SAAS,CAAC8B,gBAAiB3D,EAAK+D,UAAW8X,WAAY7b,EAAKA,QAErEqb,SAAUza,KAAKb,MAAMsb,WAEN,GAAlBza,KAAKb,MAAMkB,OAAS,SAAC,KAAD,IAAe,QAEtCL,KAAKb,MAAM4D,gBAAgBC,IAAIwD,OAAO,GAAG,SAAC0U,GAAD,CAAalZ,SAAU,WAAK,EAAK1B,SAAS,EAAKnB,MAAMqB,cAAeyB,QAAS,WAAK,EAAKhB,SAAS,CAAC8B,gBAAiB,CAACC,IAAK,OAAQG,UAAWnD,KAAKb,MAAM4D,gBAAiB3D,KAAMY,KAAKb,MAAM8b,WAAYnZ,SAAU,SAAAkB,GAAM,EAAKmY,aAAanY,IAAOyX,SAAUza,KAAKb,MAAMsb,SAAUW,aAAc,WAAK,EAAKA,gBAAiBC,eAAgB,WACzW,EAAKlc,MAAMsb,SAAU,EAAKxZ,SAAS,CAACwZ,UAAU,IAC5C,EAAKxZ,SAAS,CAACwZ,UAAU,OAExB,QAEjB,6DACD,iHACwB/Z,EAAAA,EAAAA,OAAAA,IAAmB,CAACQ,GAAIlB,KAAKb,MAAM8b,WAAW/Z,KADtE,OAC4EgB,GAApEA,EADR,QAC8F,GACtFR,EAAkB1B,KAAKb,MAAMuC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAKgB,EAAQhB,MACrEQ,EAAgBS,GAAkBD,EAG5BoZ,EAAYtb,KAAKb,MAAMuC,gBAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAO,EAAK/B,MAAM8b,WAAW/Z,MACxFlB,KAAKb,MAAMuC,gBAAgB8E,OAAO8U,EAAU,GAC3Ctb,KAAKiB,SAAS,CAACS,gBAAiBA,EAAiBuZ,WAAYjb,KAAKb,MAAMuC,gBAAgB4Z,EAAU,GAAIN,gBAAiB,CAAChb,KAAKb,MAAMuC,gBAAgB4Z,EAAU,GAAGpa,MATxK,kGADC,IACD,6DAYA,WAAmB8B,GAAnB,4FAEoBA,GAFpB,sHAEc9B,EAFd,iBAG4BR,EAAAA,EAAAA,OAAAA,IAAmB,CAACQ,GAAIA,IAHpD,OAG0DgB,GAA9CA,EAHZ,QAG4E,GAChER,EAAkB,EAAKvC,MAAMuC,gBAC3BS,EAAiBT,EAAgBU,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAKgB,EAAQhB,MACrEQ,EAAgBS,GAAkBD,EAClC,EAAKjB,SAAS,CAACS,gBAAiBA,EAAiBqB,gBAAiB,CAACC,IAAIA,GAAMiY,WAAY/Y,IAPjG,oXAZA,IAYA,4DAUA,WAAkBI,EAAUxC,GAA5B,gFACIE,KAAKiB,SAAS,CAACb,cAAc,SAACmC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SADlE,SAEwB/B,EAAAA,EAAAA,OAAAA,OAAsB4B,EAAU,CAACjC,OAAM,EAAMP,MAAMA,IAF3E,cAEUO,EAFV,gBAGkCK,EAAAA,EAAAA,OAAAA,OAAsB4B,EAAU,CAACI,MAAM,GAAI5C,MAAMA,IAHnF,OAGU4B,EAHV,OAIOrB,EAAM,GAAN,MAAkB,EAAGL,KAAKiB,SAAS,CAACb,aAAa,GAAD,OAAKC,EAAM,GAAN,MAAL,4BACvB,IAApBA,EAAM,GAAN,MAAuBL,KAAKiB,SAAS,CAACb,aAAc,wBACvDJ,KAAKiB,SAAS,CAACb,aAAc,gCAClCJ,KAAKiB,SAAS,CACV0B,MAAOL,EACPM,WAAY9C,EACZO,MAAOA,EAAM,GAAN,MACPI,QAASoC,KAAKC,MAAMzC,EAAM,GAAN,MAAkB,IAAI,EAC1CG,YAAa,EACbkB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MAd9B,qGAVA,IAUA,yDAiBA,WAAezC,GAAf,uFACkCG,EAAAA,EAAAA,OAAAA,OAAsBV,KAAKb,MAAMwD,MAAO,CAACD,MAAM,GAAIO,OAAoB,IAAX1C,EAAQ,GAAQT,MAAME,KAAKb,MAAMyD,aAD/H,OACUlB,EADV,OAEQ1B,KAAKiB,SAAS,CACVT,YAAaD,EACbmB,gBAAiBA,EACjBqB,gBAAiB,CAACC,IAAI,MALlC,mGAjBA,MAiBA,EA/HEuX,CAAerX,EAAAA,WAwIf6X,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAY7b,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CAACgE,UAAW,CAACC,UAAW,KAAMJ,IAAI,KAFjC,EAyBjB,OAtBA,8BACD,WAAS,IAAD,OACJ,GAAGhD,KAAKd,MAAMmB,MAAM,EAAE,CAClB,IADkB,EACdgD,EAAO,GADO,UAEDrD,KAAKd,MAAMwC,iBAFV,IAElB,IAAI,EAAJ,qBAA4C,CAAC,IAAnC4B,EAAkC,QACxCD,EAAKE,MAAK,SAACgY,GAAD,CAAYd,SAAUza,KAAKd,MAAMub,SAAUe,SAAUlY,EAAIpC,GAAG,QAASA,GAAIoC,EAAIpC,GAAI9B,KAAMkE,GAAUA,EAAIpC,MAHjG,8BAMlB,OACA,gBAAKkD,MAAO,CAACzC,SAAU3B,KAAKd,MAAMyC,SAAU0C,QAAQ,UAApD,UAEI,SAAC,KAAD,CAAUoX,aAAa,EAAM/b,UAAU,aAAagc,eAChD,SAACtc,EAAM+D,GAAa,EAAKuY,eAAetc,EAAM+D,IAChDwY,OAAQ3b,KAAKd,MAAM8b,gBAFrB,SAEwC3X,MAG5C,OAAO,OAEd,4BACD,SAAeuY,EAASzY,GACjByY,EAAS5b,KAAKd,MAAM0C,WAAW,CAACuB,UAAWA,EAAW/D,KAAMwc,EAAQ1c,MAAME,OACxEY,KAAKd,MAAM0C,WAAW,CAACuB,UAAWA,EAAW/D,KAAM,WAC3D,EA1BC2b,CAAkB7X,EAAAA,WA4BlBqY,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAkCD,OAlCCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACF,WACI,IAAMhV,EAASvG,KAAKd,MAAME,KACtBgF,EAAQ,CAACyB,OAAQnF,EAAAA,EAAAA,QAAAA,SAAyB,KAAM8D,MAAO9D,EAAAA,EAAAA,QAAAA,QAAwB,MAEnF,GAAoB,MAAjB6F,EAAOsV,SAAe,CACrB,IAAIC,EAAY,GAchB,OAbmB,IAAhBvV,EAAOkB,OAAYqU,GAAW,oBAC5BA,GAAW,qBAEhB,iBAAKpc,UAAU,SAASwB,GAAIqF,EAAOrF,GAAIkD,MAAOA,EAA9C,WACI,gBAAK2X,IAAI,GAAG3X,MAAO,CAAC4X,UAAW,OAAQ3P,aAAc,OAAQ3M,UAAWoc,EAAWG,IAAK1V,EAAOsV,SAAS,SACvG7b,KAAKd,MAAMub,UAAS,gBAAK/a,UAAU,aAAamE,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAO2V,iBAAiB3V,EAAO2V,iBAAiB3V,EAAOe,gBAAsB,KAChKtH,KAAKd,MAAMub,UACZ,iBAAK/a,UAAU,cAAf,WACI,iBAAM0E,MAAO,CAAC+O,MAAO,OAAQgJ,SAAU,SAAUC,UAAW,OAAQC,SAAU,SAAUxY,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOzF,kBAClI,iBAAMsD,MAAO,CAAC+O,MAAO,SAAUtP,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOkJ,WAE5E,QAcL,OARA,gBAAK/P,UAAU,SAASwB,GAAIqF,EAAOrF,GAAIkD,MAAOA,EAA9C,UACI,iBAAK1E,UAAU,gBAAf,WACI,gBAAKA,UAAU,qBAAqBmE,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOzF,kBAC9E,gBAAKpB,UAAU,oBAAoBmE,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOe,iBAC7E,gBAAK5H,UAAU,oBAAoBmE,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOkJ,SAC7E,gBAAK/P,UAAU,oBAAoBmE,yBAAyBC,EAAAA,EAAAA,IAAUyC,EAAOsU,gBAK5F,EAlCCU,CAAmBrY,EAAAA,WAoCnBgY,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYhc,GAAO,IAAD,yBACd,cAAMA,IACDC,MAAQ,CACTmd,SAAU,GACVC,UAAU,EACVC,cAAc,EACdC,WAAY,GACZC,UAAW,EACXxb,GAAI,EAAKhC,MAAME,KAAK8B,GACpBqE,KAAM,EAAKrG,MAAME,KAAKmG,KACtB+B,aAAc,EAAKpI,MAAME,KAAKkI,aAC9BE,UAAW,EAAKtI,MAAME,KAAKoI,UAC3BpB,SAAU,EAAKlH,MAAME,KAAKgH,SAC1BuW,SAAU,EAAKzd,MAAME,KAAKud,SAC1B/T,QAAS,EAAK1J,MAAME,KAAKwJ,QACzB8G,OAAQ,EAAKxQ,MAAME,KAAKsQ,OACxBkN,SAAU,EAAK1d,MAAME,KAAKwd,SAC1BV,iBAAkB,EAAKhd,MAAME,KAAK8c,iBAClCrB,IAAK,EAAK3b,MAAME,KAAKyb,IAErBgC,eAAgB,GAChBC,sBAAuB,GACvBC,eAAgB,KAChBC,eAAgB,GAChBC,cAAe,KACfC,aAAc,GACdC,WAAY,KACZC,cAAe,KACfC,gBAAiB,IA5BP,EAqXlB,OAvVC,8BACD,WAAS,IAAD,OACJ,GAAGrd,KAAKb,MAAMod,SACV,OAAO,UAACzX,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQ,WAAK,EAAKlE,SAAS,CAACsb,UAAU,KAA5G,WACH,SAACzX,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,SAACN,EAAA,QAAD,sDAC9B,UAACA,EAAA,OAAD,YACI,SAACO,EAAA,EAAD,CAAK3F,UAAU,OAAf,UACI,UAAC4F,EAAA,EAAD,YAAK,cAAGxG,KAAK,4EAA4EC,OAAO,SAASgH,IAAI,aAAxG,kBAAL,iEAEJ,UAACV,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,qBACA,SAACA,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAM0d,eAAgBpX,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAAC4b,eAAgBnX,EAAM3G,OAAOyG,iBAE5H,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,6BACA,SAACA,EAAA,EAAD,WAAK,kBAAOC,KAAK,OAAOC,MAAOxF,KAAKb,MAAM2d,sBAAuBrX,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAAC6b,sBAAuBpX,EAAM3G,OAAOyG,iBAE1I,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,4BACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAKH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACqc,iBAAkB5X,EAAM3G,OAAOyG,iBAEzJ,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,iCACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACsc,aAAc7X,EAAM3G,OAAOyG,iBAEpH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,sBACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACuc,eAAgB9X,EAAM3G,OAAOyG,iBAEtH,UAACH,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,6BACA,SAACA,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYM,QAAS,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,OAAQH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACwc,oBAAqB/X,EAAM3G,OAAOyG,iBAE3H,SAACH,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YAAK,SAAC,KAAD,CAAcC,KAAK,SAASC,MAAM,uBAAuBzB,SAAO,iBAAE,2FACpC,KAA5B,EAAK5E,MAAM0d,gBAAuB,EAAK1d,MAAM0d,eAAe7W,QAAQ,MAAM,GADV,yCAExD,CAAC7F,QAAQ,EAAO8F,MAAO,0CAFiC,UAGtB,KAAnC,EAAK9G,MAAM2d,sBAH8C,yCAIxD,CAAC3c,QAAQ,EAAO8F,MAAO,uDAJiC,cAM3DC,EAAgB,CAChBnF,MAAO,EAAK5B,MAAM0d,eAClB/b,cAAe,EAAK3B,MAAM2d,sBAC1BnY,IAAK,EAAKxF,MAAMoe,aAChB1Y,aAAc,EAAK1F,MAAMse,oBACzB7Y,MAAO,EAAKzF,MAAMqe,gBAEnB,EAAKre,MAAMme,iBAAiB,IAAGpX,EAAcxB,SAAS,EAAKvF,MAAMme,kBAbL,UAc3C5c,EAAAA,EAAAA,MAAAA,KAAmBwF,GAdwB,eAczDlF,EAdyD,OAe1B,IAAlC,EAAK9B,MAAMiE,UAAUH,IAAIwD,QACxB,EAAKvF,SAAS,CAAC0b,SAAU,EAAKxd,MAAM2d,sBAAuB1W,SAAUpF,EAAOub,UAAU,IACtF,EAAKmB,WAAW,EAAKve,MAAMqd,gBAE3B,EAAKvb,SAAS,CAAC+b,eAAgB,EAAK7d,MAAM2d,sBAAuBC,eAAgB/b,EAAOub,UAAU,IAClG,EAAKoB,aApBsD,kBAsBxD,CAACxd,QAAQ,IAtB+C,+CAwBlE,SAACiM,EAAA,EAAD,CAAQzN,QAAQ,YAAYyF,MAAO,CAAC+B,WAAY,QAASpC,QAAS,WAAK,EAAK9C,SAAS,CAACsb,UAAU,KAAhG,kCAId,GAAqC,IAAlCvc,KAAKd,MAAMiE,UAAUH,IAAIwD,OAAW,CAC1C,IAAIoX,EAAO,GACX,GAAG5d,KAAKb,MAAMsd,WAAWjW,OAAO,EAAE,CAC9B,IAD8B,EAC1BqX,GAAY,EADc,UAEZ7d,KAAKb,MAAMsd,YAFC,IAE9B,IAAI,EAAJ,qBAAwC,CAAC,IAA/Brd,EAA8B,QACpCye,IACA,IAAItO,EAAMnQ,EAAKmQ,IACN,OAANA,GAAkB,KAANA,IAAUA,EAAI,eAAD,OAAgBnQ,EAAK8B,KACjD0c,EAAKra,MAAK,0BAAoB,cAAGzE,KAAMyQ,EAAKxQ,OAAO,SAASgH,IAAI,aAAlC,SAAgD3G,EAAKoQ,SAA/DqO,KANM,+BASlC,IAAIC,EAAU,KAUY,IAAvB9d,KAAKb,MAAMqI,YAEVsW,EAAU,EACN,SAACzY,EAAA,EAAD,CAAa3F,UAAU,YAAvB,UACI,SAAC4F,EAAA,EAAD,WAAK,kBAAM5F,UAAU,WAAhB,WAA2B,oCAA3B,oCAAuE,cAAGZ,KAAK,yGAAsGC,OAAO,SAASgH,IAAI,aAAlI,8BAAvE,UADA,MAGT,UAACV,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,4BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOlB,MAAO,CAACI,MAAM,QAASe,KAAK,OAAOC,MAAOxF,KAAKb,MAAMyd,SAAS5c,KAAKb,MAAMyd,SAAS,GAAInX,SAAU,SAAAjE,GACxF,KAAjBA,EAAEzC,OAAOyG,MACR,EAAKvE,SAAS,CAAC2b,SAAU,OAClBmB,MAAMvc,EAAEzC,OAAOyG,QAAyB,MAAjBhE,EAAEzC,OAAOyG,OACvC,EAAKvE,SAAS,CAAC2b,SAAUlZ,SAASlC,EAAEzC,OAAOyG,gBAN1C,MAYT,UAACH,EAAA,EAAD,CAAa3F,UAAU,OAAvB,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,4BACA,SAACtJ,EAAA,EAAD,WAAK,kBAAOlB,MAAO,CAACI,MAAM,QAASe,KAAK,OAAOC,MAAOxF,KAAKb,MAAM+c,iBAAiBlc,KAAKb,MAAM+c,iBAAiB,GAAIzW,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACib,iBAAkB1a,EAAEzC,OAAOyG,eAFrK,OAMjB,IAAIwY,EAAa,KACjB,GAAGtd,EAAAA,EAAAA,OAAe,YAAYV,KAAKb,MAAMmd,SAAS9V,OAAO,EAAE,CACvD,IADuD,EACnDyX,EAAc,GADqC,UAElCje,KAAKb,MAAMmd,UAFuB,yBAE7CnY,EAF6C,QAGnD8Z,EAAY1a,MAAK,iBAAsBa,MAAO,CAACiN,aAAc,QAA5C,WAAqD,kBAAM3R,UAAU,WAAhB,WAA2B,uBAAIyE,EAAQkW,OAAvC,OAAqDlW,EAAQiQ,OAAOjQ,EAAQiQ,OAAO3D,UAAU,EAAG,IAAI,KAApG,QAAiH,kBAAOtM,EAAQA,QAASzD,EAAAA,EAAAA,GAAAA,KAAgByD,EAAQ+Z,SAASxd,EAAAA,EAAAA,OAAe,sBAAqB,cAAGhB,UAAU,WAAW0E,MAAO,CAACqI,OAAQ,WAAY1I,SAAO,iBAAE,kFAC1UnD,OAAOC,QAAQ,8GAD2T,gCAEnUH,EAAAA,EAAAA,QAAAA,OAAuByD,EAAQjD,IAFoS,OAGzU,EAAKid,eAHoU,2CAA7D,2BAMlQ,OANSha,EAAQjD,MADvC,IAAI,EAAJ,qBAA0C,IAFa,8BAWvD8c,GAAa,gBAAKte,UAAU,aAAf,SAA6Bue,IAE9C,IAAIG,EAAa,KAoBjB,OAnBG1d,EAAAA,EAAAA,OAAe,aACd0d,GAAa,4BACb,qBAAUrT,YAAY,kBAAkB3G,MAAO,CAACI,MAAO,OAAQqB,OAAQ,SAAUJ,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAACoc,gBAAiB7b,EAAEzC,OAAOyG,SAAUA,MAAOxF,KAAKb,MAAMke,mBACpK,SAAC,KAAD,CAAcjZ,MAAO,CAAC6C,SAAU,OAAQkM,MAAO,QAAStI,YAAa,QAASrF,MAAM,sBAAsBzB,SAAO,iBAAE,iFAChF,IAA5B,EAAK5E,MAAMke,gBADiG,gCAErG3c,EAAAA,EAAAA,QAAAA,KAAqB,CACvBwd,QAASxd,EAAAA,EAAAA,GAAAA,GACT2d,UAAW,EAAKlf,MAAM+B,GACtBiD,QAAS,EAAKhF,MAAMke,kBALmF,cAO3G,EAAKpc,SAAS,CAACoc,gBAAiB,KAChC,EAAKc,eARsG,kBASpG,CAAChe,QAAQ,IAT2F,gCAWpG,CAACA,QAAQ,EAAO8F,MAAO,wCAX6E,kDAgBhH,UAACnB,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQnF,KAAKd,MAAM+C,QAAzF,WACH,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,UAACN,EAAA,QAAD,iBAAqB9E,KAAKb,MAAM+B,SAC9D,SAAC4D,EAAA,OAAD,WACI,UAACwZ,EAAA,EAAD,CAAWtL,iBAAkB,EAA7B,WACI,UAACsL,EAAA,OAAD,CAAgBpL,SAAU,EAA1B,WACI,SAACoL,EAAA,SAAD,4BACA,UAACA,EAAA,OAAD,YACA,UAACjZ,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYlB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAMoG,KAAKvF,KAAKb,MAAMoG,KAAK,EAAGK,QAAS,CAAC,CAAC,EAAG,OAAO,CAAC,EAAG,cAAc,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,aAAc,CAAC,EAAG,sBAAuB,CAAC,EAAG,UAAWH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACsE,KAAM7B,SAASgC,EAAM3G,OAAOyG,UAAWsW,UAAU,sBAErS,UAACzW,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAclB,MAAO,CAACI,MAAO,QAASiB,SAAU,SAACD,EAAOtE,GAAM,EAAKD,SAAS,CAAC0b,SAAUnX,EAAOY,SAAUlF,EAAI2b,eAAgBrX,EAAOsX,sBAAuBtX,KAAUA,MAAOxF,KAAKb,MAAMwd,SAAS3c,KAAKb,MAAMwd,SAAS,GAAIxM,IAAI,QAAQC,UAAU,QAAQC,UAAU,kBAErP,IAAlBrQ,KAAKb,MAAMoG,MAAUvF,KAAKb,MAAMoG,KAAK,IAAG,UAACF,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACrC,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,SAAC,KAAD,CAAclB,MAAO,CAACI,MAAO,QAAUgB,MAAOxF,KAAKb,MAAMuQ,OAAO1P,KAAKb,MAAMuQ,OAAO,GAAIS,IAAI,OAAOC,UAAU,SAASC,UAAU,SAAS5K,SAAQ,mCAAE,WAAOD,EAAOtE,GAAd,8EAClJ,EAAKD,SAAS,CAACyO,OAAQlK,EAAOoD,QAAS1H,IAD2G,SAExHR,EAAAA,EAAAA,KAAAA,IAAiB,CAACQ,GAAIA,GAAK,CAACwG,OAAQ,CAAC,eAFmF,QAE5I6W,EAF4I,QAGnI/X,OAAO,GAClB,EAAKvF,SAAS,CAACuG,UAAW+W,EAAY,GAAG/W,YAJqG,2CAAF,+DAQ5H,OAA3BxH,KAAKd,MAAME,KAAKyc,WAAiB,UAACxW,EAAA,EAAD,CAAK3F,UAAU,OAAf,WAC9B,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,oBACA,SAACtJ,EAAA,EAAD,WAAK,qBAAUlB,MAAO,CAACI,MAAO,QAASgB,MAAOxF,KAAKb,MAAM0b,IAAKpV,SAAU,SAAAjE,GAAI,EAAKP,SAAS,CAAC4Z,IAAKrZ,EAAEzC,OAAOyG,gBAE1F,IAAlBxF,KAAKb,MAAMoG,MAAUvF,KAAKb,MAAMoG,KAAK,GAAGvF,KAAKb,MAAMyJ,QAAQ,IAAG,UAACvD,EAAA,EAAD,CAAK3F,UAAU,OAAf,WAC3D,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,WAAK,iBAAMlB,MAAO,CAACI,MAAO,QAASX,yBAAyBC,EAAAA,EAAAA,IAAU9D,KAAKb,MAAMmI,qBAEpFwW,GACD,SAACzY,EAAA,EAAD,CAAK3F,UAAU,YAAf,UACI,UAAC4F,EAAA,EAAD,YACI,SAAC8G,EAAA,EAAD,CAAQhI,MAAO,CAACyG,YAAa,QAAS9G,QAAS,WAAK,EAAK2Z,YAAW,IAApE,+BACA,SAAC,KAAD,CAAc3Z,QAAS,WAAK,OAAO,EAAK2Z,cAAgBlY,MAAM,oBAGtE,SAACH,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WAAK,SAACsF,EAAA,EAAD,WACD,SAACA,EAAA,QAAD,CAAYnI,KAAK,KAAK8C,KAAK,SAASiK,MAAM,0BAA0BgP,QAASxe,KAAKd,MAAMub,SAAUhV,SAAUzF,KAAKd,MAAMmc,6BAKlIuC,EAAKpX,OAAO,IAAG,UAAC8X,EAAA,OAAD,CAAgBpL,SAAU,EAA1B,WACZ,SAACoL,EAAA,SAAD,0BACA,SAACA,EAAA,OAAD,UACKV,QAGT,UAACU,EAAA,OAAD,CAAgBpL,SAAU,EAA1B,WACI,SAACoL,EAAA,SAAD,0BACA,UAACA,EAAA,OAAD,WACKN,EACAI,QAGR1d,EAAAA,EAAAA,OAAe,WAAU,UAAC4d,EAAA,OAAD,CAAgBpL,SAAU,EAA1B,WACtB,SAACoL,EAAA,SAAD,iCACA,SAACA,EAAA,OAAD,WACA,SAAClS,EAAA,EAAD,CAAQzN,QAAQ,SAASoF,SAAO,iBAAE,kFAC3BnD,OAAOC,QAAQ,gHADY,gCAEpBH,EAAAA,EAAAA,OAAAA,OAAsB,EAAKvB,MAAM+B,IAFb,OAG1B,EAAKhC,MAAM+C,UACX,EAAK/C,MAAM8C,WAJe,2CAAlC,4CAiBhB,IAAIyc,EAAY,KAChB,OAAOze,KAAKb,MAAMud,WACd,KAAK,EACD+B,GAAY,SAAC,KAAD,CAAchZ,SAAU,SAACD,EAAOtE,GAAM,EAAKD,SAAS,CAAC+b,eAAgBxX,EAAOuX,eAAgB7b,KAAOsE,MAAOxF,KAAKb,MAAM6d,eAAgB7M,IAAI,QAASC,UAAU,QAAQC,UAAU,aAC1L,MACJ,KAAK,EACDoO,GAAY,SAAC,KAAD,CAAejZ,MAAOxF,KAAKb,MAAM+d,aAAc/M,IAAI,OAAOC,UAAU,SAASC,UAAU,SAAS5K,SAAU,SAACD,EAAOtE,GAAM,EAAKD,SAAS,CAACic,aAAc1X,EAAOyX,cAAe/b,OACvL,MACJ,KAAK,EACDud,GACA,SAAC,KAAD,CAAYra,MAAO,CAACI,MAAO,OAAQoB,QAAS,CAAC,CAAC,EAAG,OAAO,CAAC,EAAG,cAAc,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,aAAc,CAAC,EAAG,wBAAyB,CAAC,EAAG,UAAWH,SAAU,SAAAC,GAAQ,EAAKzE,SAAS,CAACkc,WAAYzX,EAAM3G,OAAOyG,WAC3N,MACJ,QACIiZ,GAAY,gBAAKra,MAAO,CAACgP,MAAO,OAApB,qCAGpB,OAAO,UAACtO,EAAA,EAAD,CAAWC,MAAM,EAAMC,UAAU,MAAMC,QAAQ,EAAMC,UAAU,EAAOC,OAAQnF,KAAKd,MAAM+C,QAAzF,WACH,SAAC6C,EAAA,SAAD,CAAkBM,aAAW,EAA7B,UAA8B,UAACN,EAAA,QAAD,WAAkB9E,KAAKd,MAAMiE,UAAUH,IAAIwD,OAA3C,gBAC9B,UAAC1B,EAAA,OAAD,YACI,UAACO,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACI,SAAC4F,EAAA,EAAD,WAAK,SAAC,KAAD,CAAYlB,MAAO,CAACI,MAAO,SAAUoB,QALlC,CAAC,CAAC,EAAG,QAAQ,CAAC,EAAG,QAAQ,CAAC,EAAE,eAK8BH,SAAU,SAAAC,GACpE,EAAKzE,SAAS,CAACyb,UAAWhZ,SAASgC,EAAM3G,OAAOyG,eAExD,SAACF,EAAA,EAAD,UAAMmZ,QAEV,SAACpZ,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WAAK,SAAC,KAAD,CAAcE,MAAM,4BAAsBzB,QAAS,WAAK,OAAO,EAAK4Z,2BAK5F,+BACD,WAAoB,IAAD,OAEZ3d,KAAKb,MAAMyJ,QAAQ,GAClBlI,EAAAA,EAAAA,QAAAA,IAAoB,CAACkI,QAAS5I,KAAKb,MAAMyJ,UACxCuR,MAAK,SAAA1Y,GACF,EAAKR,SAAS,CAACwb,WAAYhb,OAE9B6Y,OAAM,SAAA9Y,GAAM,MAAMA,KAGvBxB,KAAKme,iBACR,gCACD,WAAqB,IAAD,OACbne,KAAKb,MAAM+B,KAAKlB,KAAKd,MAAME,KAAK8B,KAC5BlB,KAAKd,MAAME,KAAKwJ,QAAQ,EACvBlI,EAAAA,EAAAA,QAAAA,IAAoB,CAACkI,QAAS5I,KAAKd,MAAME,KAAKwJ,UAC7CuR,MAAK,SAAA1Y,GACF,EAAKR,SAAS,CACVsb,UAAU,EACVrb,GAAI,EAAKhC,MAAME,KAAK8B,GACpBqE,KAAM,EAAKrG,MAAME,KAAKmG,KACtB+B,aAAc,EAAKpI,MAAME,KAAKkI,aAC9BE,UAAW,EAAKtI,MAAME,KAAKoI,UAC3BpB,SAAU,EAAKlH,MAAME,KAAKgH,SAC1BuW,SAAU,EAAKzd,MAAME,KAAKud,SAC1B/T,QAAS,EAAK1J,MAAME,KAAKwJ,QACzB8G,OAAQ,EAAKxQ,MAAME,KAAKsQ,OACxBkN,SAAU,EAAK1d,MAAME,KAAKwd,SAC1BV,iBAAkB,EAAKhd,MAAME,KAAK8c,iBAClCO,WAAYhb,OAGnB6Y,OAAM,SAAA9Y,GAAM,MAAMA,KACfxB,KAAKiB,SAAS,CAACsb,UAAU,EAC7Brb,GAAIlB,KAAKd,MAAME,KAAK8B,GACpBqE,KAAMvF,KAAKd,MAAME,KAAKmG,KACtB+B,aAActH,KAAKd,MAAME,KAAKkI,aAC9BE,UAAWxH,KAAKd,MAAME,KAAKoI,UAC3BpB,SAAUpG,KAAKd,MAAME,KAAKgH,SAC1BuW,SAAU3c,KAAKd,MAAME,KAAKud,SAC1B/T,QAAS5I,KAAKd,MAAME,KAAKwJ,QACzB8G,OAAQ1P,KAAKd,MAAME,KAAKsQ,OACxBkN,SAAU5c,KAAKd,MAAME,KAAKwd,SAC1BV,iBAAkBlc,KAAKd,MAAME,KAAK8c,iBAClCO,WAAY,KAGb/b,EAAAA,EAAAA,OAAe,YACdA,EAAAA,EAAAA,QAAAA,IAAoB,CAAC2d,UAAWre,KAAKb,MAAM+B,KAC1CiZ,MAAK,SAAAmC,GAAW,EAAKrb,SAAS,CAACqb,SAAUA,OACzChC,OAAM,SAAA9Y,GAAI,MAAMA,QAG5B,6DACD,wFACOd,EAAAA,EAAAA,OAAe,WADtB,gCAE+BA,EAAAA,EAAAA,QAAAA,IAAoB,CAAC2d,UAAWre,KAAKb,MAAM+B,KAF1E,OAEcob,EAFd,OAGQtc,KAAKiB,SAAS,CAACqb,SAAUA,IAHjC,kGADC,IACD,0DAMA,yGACQoC,GAAW,EACXC,EAAW,GACXC,EAAS,GACa,IAAvB5e,KAAKb,MAAMud,WAA0C,MAA3B1c,KAAKb,MAAM4d,eAJ5C,gBAIkE6B,EAAO,WAAWD,EAAS3e,KAAKb,MAAM4d,eAJxG,0BAKmC,IAAvB/c,KAAKb,MAAMud,WAA2C,OAA5B1c,KAAKb,MAAM4d,gBAAkD,IAA3B/c,KAAKb,MAAM6d,eALnF,wBAKuG0B,GAAS,EAAK1e,KAAKiB,SAAS,CAACsb,UAAU,EAAMM,eAAe7c,KAAKb,MAAM6d,eAAgBF,sBAAuB9c,KAAKb,MAAM6d,iBALhO,kBAKwP,CAAC7c,QAAQ,IALjQ,WAMmC,IAAvBH,KAAKb,MAAMud,WAAyC,MAA1B1c,KAAKb,MAAM8d,cANjD,iBAMsE2B,EAAO,UAAUD,EAAS3e,KAAKb,MAAM8d,cAN3G,2BAOmC,IAAvBjd,KAAKb,MAAMud,WAAsC,MAAvB1c,KAAKb,MAAMge,WAPjD,iBAOmEyB,EAAO,OAAOD,EAAS3e,KAAKb,MAAMge,WAPrG,2BAQmC,IAAvBnd,KAAKb,MAAMud,WAAyC,MAA1B1c,KAAKb,MAAMie,cARjD,iBAQsEwB,EAAO,UAAUD,EAAS3e,KAAKb,MAAMie,cAR3G,+BASSsB,GAAS,EATlB,kBAS8B,CAACve,QAAQ,EAAO8F,MAAO,iDATrD,cAUkB,IAAXyY,GAAkB1e,KAAKb,MAAMud,UAAU,GAV9C,iBAWYmC,EAAc,GAX1B,UAYyB7e,KAAKd,MAAMiE,UAAUH,KAZ9C,IAYQ,IAAI,EAAJ,qBAAU8b,EAAgC,SAClCC,EAAc,CAAC7d,GAAI4d,EAAKZ,QAASxd,EAAAA,EAAAA,GAAAA,KACzBke,GAAUD,EACtBE,EAAYtb,KAAKwb,GAf7B,+CAiBcre,EAAAA,EAAAA,OAAAA,KAAoBme,GAjBlC,eAkBQ7e,KAAKd,MAAM4C,SAAS9B,KAAKd,MAAMiE,UAAUH,KAlBjD,kBAmBe,CAAC7C,QAAQ,IAnBxB,YAoBwB,IAAXue,GAAyC,IAAvB1e,KAAKb,MAAMud,UApB1C,kCAqBqChc,EAAAA,EAAAA,QAAAA,IAAoB,CAAC,WAAcV,KAAKb,MAAMie,cAAe4B,QAAS,EAAGC,UAAW,IArBzH,WAsBkC,IADpBC,EArBd,QAsB0B1Y,OAtB1B,iBAsBqC2Y,MAAM,yFAtB3C,+BAwBkBC,EAAWpf,KAAKd,MAAMiE,UAAUH,IAAI+Q,KAAI,SAAA1R,GAAI,MAAO,CAACgc,UAAWhc,EAAGgd,WAAYH,EAAe,GAAGhe,OAxBlH,UAyBkBR,EAAAA,EAAAA,WAAAA,KAAwB0e,GAzB1C,iCA0BmB,CAACjf,QAAQ,IA1B5B,mGANA,IAMA,2DA8BA,qGAAiBmf,EAAjB,gCACuC,OAA9Btf,KAAKb,MAAM+c,kBAAuD,KAA9Blc,KAAKb,MAAM+c,kBAA+C,OAAtBlc,KAAKb,MAAMyd,UAAuC,KAAtB5c,KAAKb,MAAMyd,SADxH,yCAEe,CAACzc,QAAS,EAAG8F,MAAO,6EAFnC,YAGcjG,KAAKb,MAAMyJ,QAAQ,GAA0B,IAAvB5I,KAAKb,MAAMqI,aAAsC,IAArBxH,KAAKb,MAAMyd,UAAmC,MAArB5c,KAAKb,MAAMyd,UAAiB2C,OAAOC,UAAUxf,KAAKb,MAAMyd,aAAoC,KAAtB5c,KAAKb,MAAMyd,UAAqC,OAAtB5c,KAAKb,MAAMyd,UAAmBhc,OAAOC,QAAQ,2GAHtO,yCAIe,CAACV,OAAQ,IAJxB,UAKsC,IAAvBH,KAAKb,MAAMqI,WAAuC,OAAtBxH,KAAKb,MAAMyd,UAAuC,KAAtB5c,KAAKb,MAAMyd,UAA+C,OAA9B5c,KAAKb,MAAM+c,kBAAuD,KAA9Blc,KAAKb,MAAM+c,iBALlJ,0CAMe,CAAC/b,QAAS,EAAG8F,MAAO,mDANnC,eAQYwZ,EAAQ,CACRve,GAAIlB,KAAKb,MAAM+B,GACfqE,KAAMvF,KAAKb,MAAMoG,KACjB2Y,QAASxd,EAAAA,EAAAA,GAAAA,GACTma,IAAK7a,KAAKb,MAAM0b,KAEjB7a,KAAKb,MAAMyJ,QAAQ,EAAG6W,EAAM7W,QAAU5I,KAAKb,MAAMyJ,QAC/C6W,EAAM7W,QAAU,KAEI,OAAtB5I,KAAKb,MAAMiH,UAA6C,KAA5BpG,KAAKb,MAAM0d,eAAqB7c,KAAKiB,SAAS,CAACsb,UAAU,EAAMC,aAAc8C,IACpGtf,KAAKb,MAAMiH,SAAS,EAAGqZ,EAAMrZ,SAAWpG,KAAKb,MAAMiH,SACrDqZ,EAAMrZ,SAAW,KACG,IAAvBpG,KAAKb,MAAMqI,WAAoC,IAArBxH,KAAKb,MAAMyd,UAAc2C,OAAOC,UAAUxf,KAAKb,MAAMyd,WAC9E6C,EAAM7C,SAAW5c,KAAKb,MAAMyd,SAC5B6C,EAAMvD,iBAAmBlc,KAAKb,MAAM+c,mBAEpCuD,EAAM7C,SAAW,KACjB6C,EAAMvD,iBAAmB,MAzBrC,UA2Bcxb,EAAAA,EAAAA,OAAAA,KAAoB+e,GA3BlC,eA4BWH,GACCnU,SAASC,cAAc,sBAAsBsU,QAC7C1f,KAAKd,MAAMkc,gBAEXpb,KAAKd,MAAM4C,SAAS,CAAC9B,KAAKb,MAAM+B,KAhC5C,kBAkCe,CAACf,OAAQ,IAlCxB,mGA9BA,MA8BA,EAtXE+a,CAAoBhY,EAAAA,W,sBCrM1B,SAASqX,GAAOrb,GACZ,OAA0B0M,EAAAA,EAAAA,UAAS,IAAnC,eAAO+T,EAAP,KAAcC,EAAd,KACA,GAA+BhU,EAAAA,EAAAA,UAAS,IAAxC,eAAOiU,EAAP,KAAiBC,EAAjB,KAYA,OAVAhU,EAAAA,EAAAA,YAAS,iBAAC,iGACH5M,EAAM6gB,EAAEnX,QAAQ,GADb,gCAEwBlI,EAAAA,EAAAA,QAAAA,IAAoB,CAACkI,QAAS1J,EAAM6gB,EAAEnX,SAAU,CAAClB,OAAQ,CAAC,KAAM,QAAS,SAFjG,OAEIsY,EAFJ,OAGEC,EAAc,GAHhB,UAIaD,GAJb,IAIF,IAAI,EAAJ,qBAAUxe,EAAiB,QACvBye,EAAY1c,MAAK,SAAC2c,GAAA,OAAD,WAA2B,cAAGphB,KAAc,KAAR0C,EAAE+N,IAAF,uBAA2B/N,EAAEN,IAAKM,EAAE+N,IAAKxQ,OAAO,SAAzD,SAAmEyC,EAAEgO,SAA3EhO,EAAEN,KAL1C,8BAOF4e,EAAWG,GAPT,2CASP,KACI,UAACE,GAAA,EAAD,CAAM/b,MAAO,CAACI,MAAO,SAAU9E,UAAU,OAAzC,WACH,SAAC,IAAD,CAAiB0E,MAAO,CAACoN,SAAU,WAAY4O,IAAK,OAAQrK,MAAO,QAAShS,QAAS,WAAoB6b,EAAJ,KAARD,EAAqB,IAAmB,KAAO/gB,KAAMyhB,EAAAA,OAClJ,SAACF,GAAA,SAAD,CAAa/b,MAAO,CAACyB,OAAQ,QAAShC,yBAAyBC,EAAAA,EAAAA,IAAU5E,EAAM6gB,EAAEtQ,SACjF,SAAC0Q,GAAA,MAAD,CAAUxhB,QAAQ,SAASsd,IAAG,UAAK/c,EAAM6gB,EAAElE,UAAb,OAAwB8D,EAAxB,WAE9B,SAACQ,GAAA,OAAD,WACI,SAACA,GAAA,OAAD,WAAW,SAACD,GAAA,EAAD,CAAWI,YAAU,EAArB,SAAuBT,WAI9C,SAASU,GAAOrhB,GACZ,OAA0B0M,EAAAA,EAAAA,UAAS,MAAnC,eAAO7K,EAAP,KAAcyf,EAAd,KACA,GAAgC5U,EAAAA,EAAAA,UAAS,MAAzC,eAAO6U,EAAP,KAAiBC,EAAjB,KACA,GAAgC9U,EAAAA,EAAAA,UAAS,MAAzC,eAAO+U,EAAP,KAAiBC,EAAjB,KACA,GAAgChV,EAAAA,EAAAA,UAAS,MAAzC,eAAOiV,EAAP,KAAiBC,EAAjB,KACA,GAAgClV,EAAAA,EAAAA,UAAS,MAAzC,eAAOmV,EAAP,KAAiBC,EAAjB,KAeA,OAbAlV,EAAAA,EAAAA,YAAS,iBAAC,2FACN0U,EAAS,MACTE,EAAY,MACZE,EAAY,MACZE,EAAY,MACZE,EAAY,MALN,SAMiBtgB,EAAAA,EAAAA,MAAAA,IAAkB,CAACQ,GAAIhC,EAAMkH,WAN9C,cAMA6a,EANA,OAONT,EAASS,EAAS,IAPZ,KAQNP,EARM,UAQYhgB,EAAAA,EAAAA,OAAAA,IAAmB,CAAC0F,SAAUlH,EAAMkH,SAAUb,KAAM,GAAI,CAACzF,MAAO,CAAC,YAAY,aAAc4H,OAAQ,CAAC,KAAM,OAAQ,WAAY,aAR1I,+CASNkZ,EATM,UASYlgB,EAAAA,EAAAA,OAAAA,IAAmB,CAAC0F,SAAUlH,EAAMkH,SAAUb,KAAM,GAAI,CAACzF,MAAO,CAAC,YAAY,aAAc4H,OAAQ,CAAC,KAAM,OAAQ,WAAY,aAT1I,+CAUNoZ,EAVM,UAUYpgB,EAAAA,EAAAA,OAAAA,OAAsB,CAAC,CAACS,EAAG,WAAYC,EAAG,IAAKC,EAAGnC,EAAMkH,UAAW,CAACjF,EAAG,OAAQC,EAAG,KAAMC,EAAG,KAAM,CAACF,EAAG,OAAQC,EAAG,KAAMC,EAAG,KAAM,CAACF,EAAG,OAAQC,EAAG,KAAMC,EAAG,MAAO,CAACvB,MAAO,CAAC,YAAY,aAAc4H,OAAQ,CAAC,KAAM,OAAQ,WAAY,aAVhP,+CAWNsZ,EAXM,UAWYtgB,EAAAA,EAAAA,OAAAA,OAAsB,CAAC,CAACS,EAAG,WAAYC,EAAG,IAAKC,EAAGnC,EAAMkH,UAAW,CAACjF,EAAG,OAAQC,EAAG,KAAMC,EAAG,KAAM,CAACF,EAAG,OAAQC,EAAG,KAAMC,EAAG,MAAO,CAACvB,MAAO,CAAC,YAAY,aAAc4H,OAAQ,CAAC,KAAM,OAAQ,WAAY,aAXlN,+EAYP,CAACxI,EAAMkH,WACFrF,GAAM,iCACV,eAAI8C,yBAAyBC,EAAAA,EAAAA,IAAU/C,EAAMD,kBAC7C,UAACrC,EAAA,EAAD,WACKsC,EAAMmD,QAAO,UAACmB,EAAA,EAAD,YACV,SAACC,EAAA,EAAD,CAAKsJ,GAAI,EAAT,kCACA,SAACtJ,EAAA,EAAD,CAAKzB,yBAAyBC,EAAAA,EAAAA,IAAU/C,EAAMmD,YAEjDnD,EAAMoD,UAAS,UAACkB,EAAA,EAAD,CAAK3F,UAAU,OAAf,WACZ,SAAC4F,EAAA,EAAD,CAAKsJ,GAAI,EAAT,yBACA,SAACtJ,EAAA,EAAD,CAAKzB,yBAAyBC,EAAAA,EAAAA,IAAU/C,EAAMoD,eAElD,SAACkB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WACI,UAACgZ,EAAA,EAAD,CAAWtL,iBAAiB,GAA5B,WACA,UAACsL,EAAA,OAAD,CAAgBpL,SAAS,IAAzB,WACI,UAACoL,EAAA,SAAD,sCAA6CmC,GAAS,gCAAQA,EAASja,OAAjB,QAAiC,SAACjE,EAAA,EAAD,CAASE,KAAK,KAAKD,UAAU,eACpH,SAAC8b,EAAA,OAAD,WACI,SAAC7f,EAAA,EAAD,CAAWiB,UAAU,0CAArB,SAAgE+gB,EAASA,EAAS1M,KAAI,SAAAgM,GAAI,OAAO,SAAC,GAAD,CAAmBA,EAAGA,GAATA,EAAE7e,OAAgB,aAExI,UAACod,EAAA,OAAD,CAAgBpL,SAAS,IAAzB,WACI,UAACoL,EAAA,SAAD,gCAAuCqC,GAAS,gCAAQA,EAASna,OAAjB,QAAiC,SAACjE,EAAA,EAAD,CAASE,KAAK,KAAKD,UAAU,eAC9G,SAAC8b,EAAA,OAAD,WACI,SAAC7f,EAAA,EAAD,CAAWiB,UAAU,0CAArB,SAAgEihB,EAASA,EAAS5M,KAAI,SAAAgM,GAAI,OAAO,SAAC,GAAD,CAAmBA,EAAGA,GAATA,EAAE7e,OAAgB,aAExI,UAACod,EAAA,OAAD,CAAgBpL,SAAS,IAAzB,WACI,UAACoL,EAAA,SAAD,8BAAqCuC,GAAS,gCAAQA,EAASra,OAAjB,QAAiC,SAACjE,EAAA,EAAD,CAASE,KAAK,KAAKD,UAAU,eAC5G,SAAC8b,EAAA,OAAD,WACI,SAAC7f,EAAA,EAAD,CAAWiB,UAAU,0CAArB,SAAgEmhB,EAASA,EAAS9M,KAAI,SAAAgM,GAAI,OAAO,SAAC,GAAD,CAAmBA,EAAGA,GAATA,EAAE7e,OAAgB,aAExI,UAACod,EAAA,OAAD,CAAgBpL,SAAS,IAAzB,WACI,UAACoL,EAAA,SAAD,kCAAyCyC,GAAS,gCAAQA,EAASva,OAAjB,QAAiC,SAACjE,EAAA,EAAD,CAASE,KAAK,KAAKD,UAAU,eAChH,SAAC8b,EAAA,OAAD,WACI,SAAC7f,EAAA,EAAD,CAAWiB,UAAU,0CAArB,SAAgEqhB,EAASA,EAAShN,KAAI,SAAAgM,GAAI,OAAO,SAAC,GAAD,CAAmBA,EAAGA,GAATA,EAAE7e,OAAgB,yBAMpJ,KAER,SAASggB,GAAShiB,GACd,OAA0B0M,EAAAA,EAAAA,WAAS,UAACzB,EAAA,EAAD,CAAa3H,UAAU,OAAvB,WAC/B,SAAC0d,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,OACjC,SAAC8V,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,OACjC,SAAC8V,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,OACjC,SAAC8V,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,OACjC,SAAC8V,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,OACjC,SAAC8V,GAAA,OAAD,WAAgB,SAAC/V,EAAA,EAAD,CAAaC,GAAI,UANrC,eAAO+W,EAAP,KAAcC,EAAd,KAQA,GAAgCxV,EAAAA,EAAAA,UAAS,MAAzC,eAAOyV,EAAP,KAAiBC,EAAjB,KAYA,OAVAxV,EAAAA,EAAAA,YAAS,iBAAC,4GACkBpL,EAAAA,EAAAA,MAAAA,OAAqB,CAACgH,OAAQ,CAAC,KAAM,iBAAkB5H,MAAO,CAAC,WADjF,OACAyhB,EADA,OAEFC,EAAW,GAFT,UAGSD,GAHT,IAGN,IAHM,iBAGIE,EAHJ,QAIFD,EAASje,MAAK,SAAC2c,GAAA,OAAD,CAAgBwB,QAAM,EAAC3d,SAAO,iBAAE,8EAC1Cud,EAAYG,EAAEvgB,IAD4B,2CAEhC2C,yBAAyBC,EAAAA,EAAAA,IAAU2d,EAAE3gB,gBAA3C2gB,EAAEvgB,MAHV,EAAJ,qBAA0B,IAHpB,8BAQNkgB,EAASI,GARH,2CASP,KACI,SAAC/iB,EAAA,EAAD,CAAWiB,UAAU,WAArB,UACH,UAAC2F,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKsJ,GAAI,EAAGxK,MAAO,CAACyB,OAAQ,sBAAuBsW,SAAU,UAA7D,UACI,SAAC+D,GAAA,EAAD,CAAWvhB,QAAQ,QAAnB,SACKwiB,OAGT,SAAC7b,EAAA,EAAD,CAAKlB,MAAO,CAACyB,OAAQ,sBAAuBsW,SAAU,UAAtD,SACKkF,GAAS,SAACd,GAAD,CAAQna,SAAUib,IAAa,YC5GzD,SAASM,KACL,MAAO,CAAC,SAAU,UAAW,QAAS,eAAgB,eAAgB,OAAQ,WAAY,OAAQ,SAAU,OAAQ,SAAU,UAAW,UAAW,aAAc,aAAc,aAAc,WAAY,WAE9M,SAASC,GAAS1iB,GACd,IAAI2iB,EAAO,KACX,OAAO3iB,EAAMA,EAAMuC,IAAI,MACnB,KAAK,KACDogB,GAAO,SAACrjB,EAAD,IACP,MACJ,IAAK,aACDqjB,GAAO,SAAC/S,EAAD,IACP,MACJ,IAAK,SACD+S,GAAO,SAAC/T,EAAD,IACP,MACJ,IAAK,QACD+T,GAAO,SAACnR,EAAD,IACP,MACJ,IAAK,SACDmR,GAAO,SAACtO,EAAD,IACP,MACJ,IAAK,QACDsO,GAAO,SAAC5iB,EAAD,CAAOsC,SAAU,SAACC,EAAEC,GAAOvC,EAAMqC,SAASC,EAAGC,MACpD,MACJ,IAAK,SACDogB,GAAO,SAAClV,EAAD,CAAOtC,SAAS,iBACvB,MACJ,IAAK,SACDwX,GAAO,SAAClV,EAAD,CAAOtC,SAAS,iBACvB,MACJ,IAAK,SACDwX,GAAO,SAACtL,EAAD,CAAQhV,SAAU,SAACC,EAAEC,GAAOvC,EAAMqC,SAASC,EAAGC,MACrD,MACJ,IAAK,SACDogB,GAAO,SAACtH,GAAD,IACP,MACJ,IAAK,WACDsH,GAAO,SAACX,GAAD,IACP,MACJ,IAAK,UACDW,GAAO,SAAC,IAAD,IACP,MACJ,QACIA,GAAO,wDAA6B3iB,EAAMuC,OAElD,OAAOogB,EAGX,SAASC,GAAW5iB,GAChB,OAAO,SAACI,EAAA,EAAD,CAAQE,GAAG,OAAOb,QAAQ,OAAOY,MAAM,MAAvC,UACH,UAACd,EAAA,EAAD,CAAWgB,OAAK,EAAhB,WACI,SAACH,EAAA,QAAD,CAAc8E,MAAO,CAACqI,OAAQ,WAAY1I,QAAS,SAAAvC,GAAItC,EAAMqC,SAASC,EAAG,OAAzE,mBACA,SAAClC,EAAA,SAAD,KACA,SAACA,EAAA,WAAD,CAAiBI,UAAU,sBAA3B,UACI,UAACqiB,EAAA,EAAD,YACI,UAACC,EAAA,EAAD,CAAape,MAAM,2BAAnB,WACI,SAACoe,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,+BACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,UAAnD,2BAEJ,UAACwgB,EAAA,EAAD,CAAape,MAAM,gBAAnB,WACI,UAACoe,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,WAA+D,wCAA/D,aACA,UAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,WAA+D,wCAA/D,aACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,eAAnD,yBACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,sCAEJ,UAACwgB,EAAA,EAAD,CAAape,MAAM,gBAAnB,WACI,SAACoe,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,YAAnD,oBACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,qBACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAnD,qBACA,SAACwgB,EAAA,OAAD,CAAkBje,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,UAAnD,2BAEJ,SAACugB,EAAA,OAAD,WACA,SAAC,IAAD,CAAiBnjB,KAAMqjB,EAAAA,IAAcle,QAAS,SAAAvC,GAAMtC,EAAMqC,SAASC,EAAG,WAAYoC,MAAM,2B,8KC/E5G,SAASse,IACL,OAAkCtW,EAAAA,EAAAA,UAASlL,EAAAA,EAAAA,GAAAA,YAA3C,eAAOyhB,EAAP,KAAkBC,EAAlB,KACA,GAAgCxW,EAAAA,EAAAA,UAASlL,EAAAA,EAAAA,GAAAA,WAAzC,eAAO2hB,EAAP,KAAiBC,EAAjB,KACA,GAA0B1W,EAAAA,EAAAA,UAASlL,EAAAA,EAAAA,GAAAA,OAAnC,eAAO6hB,EAAP,KAAcC,EAAd,KACA,GAAsC5W,EAAAA,EAAAA,UAAS,IAA/C,eAAO6W,EAAP,KAAoBC,EAApB,KACA,GAAsC9W,EAAAA,EAAAA,UAAS,IAA/C,eAAO+W,EAAP,KAAoBC,EAApB,KACA,GAA4BhX,EAAAA,EAAAA,UAASlL,EAAAA,EAAAA,QAAAA,SAArC,eAAOmiB,EAAP,KAAeC,EAAf,KACA,GAAkClX,EAAAA,EAAAA,UAASlL,EAAAA,EAAAA,QAAAA,YAA3C,eAAOqiB,EAAP,KAAkBC,EAAlB,KAEMC,EAAkB,EACpB,UAAC,IAAD,CAAavjB,UAAU,OAAvB,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,iCACA,SAAC,IAAD,WAAK,SAAC,UAAD,CAAYsU,IAAI,MAAMC,IAAI,MAAM1gB,KAAK,KAAK+C,MAAOqd,EAAQpd,SAAU,SAAAjE,GACpEd,EAAAA,EAAAA,WAAmB,UAAWc,EAAEzC,OAAOyG,OACvC9E,EAAAA,EAAAA,WAAmB,WAAY,GAAQgD,SAASlC,EAAEzC,OAAOyG,QACzDsd,EAAUthB,EAAEzC,OAAOyG,cALjB,IASd,OAAO,UAAC,IAAD,CAAWpB,MAAO,CAACC,QAAS,eAA5B,WACH,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,sDACV,UAAC,IAAD,CAAK3E,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,uBACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcrJ,KAAK,OAAO9C,KAAK,KAAK+C,MAAO2c,EAAW1c,SAAU,SAAAjE,GAAI4gB,EAAa5gB,EAAEzC,OAAOyG,gBAEnG,UAAC,IAAD,CAAK9F,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,wBACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcrJ,KAAK,OAAO9C,KAAK,KAAK+C,MAAO6c,EAAU5c,SAAU,SAAAjE,GAAI8gB,EAAY9gB,EAAEzC,OAAOyG,gBAEjG,UAAC,IAAD,CAAK9F,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,6BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcrJ,KAAK,OAAO9C,KAAK,KAAK+C,MAAO+c,EAAO9c,SAAU,SAAAjE,GAAIghB,EAAShhB,EAAEzC,OAAOyG,gBAE3F,UAAC,IAAD,CAAK9F,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,KACT,SAAC,IAAD,WAAK,SAAC,KAAD,CAAcpJ,MAAM,YAAYzB,SAAO,iBAAE,oGAChCrD,EAAAA,EAAAA,KAAAA,KAAkB,CACpBQ,GAAIR,EAAAA,EAAAA,GAAAA,GACJuU,WAAYkN,EACZjN,UAAWmN,EACXE,MAAOA,IAL2B,uBAOjB7hB,EAAAA,EAAAA,UAPiB,cAOhC0iB,EAPgC,OAQtC1iB,EAAAA,EAAAA,GAAa0iB,EARyB,kBAS/B,CAACjjB,OAAQ,IATsB,mDAclD,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,0CACV,UAAC,IAAD,CAAKT,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,8BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcrJ,KAAK,WAAW9C,KAAK,KAAK+C,MAAOid,EAAahd,SAAU,SAAAjE,GAAIkhB,EAAelhB,EAAEzC,OAAOyG,gBAE3G,UAAC,IAAD,CAAK9F,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,8BACA,SAAC,IAAD,WAAK,SAAC,YAAD,CAAcrJ,KAAK,WAAW9C,KAAK,KAAK+C,MAAOmd,EAAald,SAAU,SAAAjE,GAAIohB,EAAephB,EAAEzC,OAAOyG,gBAE3G,UAAC,IAAD,CAAK9F,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,KACT,SAAC,IAAD,WAAK,SAAC,KAAD,CAAcpJ,MAAM,YAAYzB,SAAO,iBAAE,8FAChCrD,EAAAA,EAAAA,KAAAA,KAAkB,CACpBQ,GAAIR,EAAAA,EAAAA,GAAAA,GACJ2iB,aAAcZ,EACda,aAAcX,IAJoB,gCAM/B,CAACxiB,OAAQ,IANsB,mDAWlD,SAAC,IAAD,WAAK,SAAC,IAAD,WAAK,2DACV,UAAC,IAAD,CAAKT,UAAU,OAAf,WACI,SAAC,IAAD,CAAKkP,GAAI,EAAT,oDACA,UAAC,IAAD,YACI,UAAC,WAAD,CAAanM,KAAK,KAAK+C,MAAOud,EAAWtd,SAAU,SAAAjE,GAAId,EAAAA,EAAAA,WAAmB,aAAcc,EAAEzC,OAAOyG,OAAOwd,EAAaxhB,EAAEzC,OAAOyG,QAA9H,WACI,mBAAQA,MAAM,MAAd,kBACA,mBAAQA,MAAM,OAAd,mBACA,mBAAQA,MAAM,MAAd,8BAEJ,4EAA+C,cAAG9F,UAAU,eAAeZ,KAAK,wEAAqEC,OAAO,SAA7G,kBAA/C,aAGPkkB","sources":["db/changelog.js","db/lemma.js","db/opera.js","db/ressources.js","db/server.js","db/zettel.js","db/indexbox.js","db/mainContent.js","settings.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { Alert, Container } from \"react-bootstrap\";\n\nfunction  ChangeLog(){\n    return <Container>\n        {/*<Alert variant=\"info\">\n            <Alert.Heading>Beta X.Y</Alert.Heading>\n            <i>X. Y 2022</i>\n            <p>TEXT</p>\n        </Alert>*/}\n        <Alert variant=\"info\">\n            <Alert.Heading>Beta 12.10</Alert.Heading>\n            <i>4. Mai 2022</i>\n            <p>Zettel können nun aus der Zettel-Datenbank als pdf exportiert werden. Benutzen Sie das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> in der Zettel-Datenbank (rechts unten) und wählen Sie \"Suchergebnisse exportieren\" aus.</p>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.9</Alert.Heading>\n            <i>29. April 2022</i>\n            <p>Kleine Verbesserung in der Darstellung der <i>opera</i>-Listen.</p>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.8</Alert.Heading>\n            <i>14. April 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>Ressourcen: \"Autor/Jahr-Angabe\"-Fehler bei Angabe der Serie behoben.</li>\n                <li>Ressourcen: Bandinhalt-Fehler behoben.</li>\n                <li>Ressourcen: Seitenverhältnis der Bilder kann verändert werden.</li>\n            </ul>\n            <p>Einige Fehler in den Ressourcen wurden behoben. Ins System aufgenommen <i>(falls Ressourcen zu diesen Bänden in den opera-Listen fehlen, schreiben Sie unbedingt ein Ticket!)</i>:</p>\n            <ul>\n                <li>MGH Poet. I</li>\n                <li>MGH Poet. IV (Winterfeld)</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.7</Alert.Heading>\n            <i>26. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>Änderungen beim Zettel-Upload: Buchstaben U/V und I/J wurden zusammengefasst.</li>\n                <li>Korrekturen bei der Zitiertitel-Suche der opera-Listen.</li>\n                <li>Korrekturen beim Upload von Scan-Bildern.</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.6</Alert.Heading>\n            <i>23. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>Suche in opera-Listen funktioniert wieder.</li>\n                <li>Korrektur bei der voreingestellten Suche.</li>\n                <li>Links auf Wiki angepasst.</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.5</Alert.Heading>\n            <i>18. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>ocr-Funktionen des Servers in Modul \"archimedes.py\" verschoben.</li>\n                <li>Darstellung der Detailansicht für Ressourcen und Sekundärliteratur überarbeitet.</li>\n                <li>Neuladen der Ansicht beim Löschen von Elementen.</li>\n                <li>Opera-Listen werden automatisch neu geladen, wenn die Listen auf dem Server aktualisiert wurden oder wenn Autoren oder Werke erstellt oder gelöscht wurden.</li>\n                <li>Altes Benachrichtigungssystem (StatusBox) entfernt.</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.4</Alert.Heading>\n            <i>15. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>Grösse der abgebildeten Wörter begrenzt auf digitalen und gescannten Zetteln.</li>\n                <li>Wiki-Anleitung für das Hochladen der Zettel verlinkt.</li>\n                <li>Zettel-Reihenfolge beim Hochladen stimmt jetzt auch mit Chrome.</li>\n                <li>Veraltete Daten und Links von früherer Version entfernt.</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.3</Alert.Heading>\n            <i>14. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>ocr-Verfahren für neue Zettel überarbeitet (s. Einstellungen &gt; Server) und automatische Typ-Erkennung aktiviert.</li>\n                <li>Konto-Verwaltung überarbeitet (löschen von Accounts jetzt möglich).</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.2</Alert.Heading>\n            <i>13. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li><Alert.Link href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/issues/194\">Issue #194</Alert.Link></li>\n                <li>\"Details ein-/ausblenden\" unter \"speichern\" und \"speichern&weiter\" verschoben.</li>\n                <li>Kleiner Fehler bei Stapelverabeitung behoben (Änderugnen wurde nicht angezeigt).</li>\n                <li>Mit \"X\" kann die Detailansicht in der Zettel-DB geschlossen werden.</li>\n                <li>Wenn ein neues Wort in der Zettel-DB erstellt wurde, wird es automatisch mit dem aktuellen Zettel verknüpft.</li>\n                <li>Man kann nun aus der Stapel-Ansicht neue Wörter erstellen.</li>\n                <li>Die Hilfe zum Erstellen von Wörtern wird nun auch in der Wortliste angezeigt.</li>\n                <li>Import-Formulare überarbeitet und verbessert.</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n            <Alert.Heading>Beta 12.1</Alert.Heading>\n            <i>11. Februar 2022</i>\n            <p>Kleine Verbesserungen in Darstellung und Benutzung:</p>\n            <ul>\n                <li>Mit einem Klick auf den Wortansatz in der Wortliste wird die Zettel-Datenbank geöffnet und die mit diesem Wort verknüpften Zettel angezeigt.</li>\n                <li>Suchfelder in Wortliste hinzugefügt: \"Wörterbücher\", \"Kommentar\", \"Zahlzeichen\", \"im Wörterbuch (MLW)\", \"Stern\", \"Fragezeichen\".</li>\n                <li>Verbesserung des Fehlers mit \"speichern&weiter\".</li>\n                <li>\"Lemmaliste\" in \"Wortliste\" umbenannt. Ebenso \"Lemma\" in \"Wort\" (usw.).</li>\n                <li>Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> der opera-Listen: Alle sollen nun die Listen aktualisieren können.</li>\n                <li>opera-Listen können nicht mehr von \"Einstellungen\"-&gt;\"Server\" aktualisiert werden.</li>\n                <li>Die Statistiken können nur noch über das Kontextmenü <FontAwesomeIcon icon={faEllipsisV} /> unter \"Einstellungen\"-&gt;\"Statistik\" aktualisiert werden.</li>\n                <li>Alle Links sollten mit CTRL/CMD+Klick in einem neuen Fenster/Tab geöffnet werden können.</li>\n                <li>Dark-Mode deaktiviert (wird später wieder eingeführt).</li>\n            </ul>\n        </Alert>\n        <Alert variant=\"secondary\">\n        <Alert.Heading>Beta 12.0</Alert.Heading>\n        <i>9. Februar 2022</i>\n        <p>Neues Design und Steuerelemente mit <Alert.Link target=\"_blank\" href=\"https://react-bootstrap.github.io\">Bootstrap</Alert.Link>. Die Suchfunktion befindet sich links unten auf der Seite (<FontAwesomeIcon icon={faSearch} />).</p>\n        </Alert>\n    </Container>;\n    \n}\n\nexport { ChangeLog };","import { Col, Table, Offcanvas, Navbar, Row, Container, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, parseHTMLPreview, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nclass Lemma extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {item: null, newItemCreated: null};\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            boxName=\"lemma\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            setupItems={this.state.newItemCreated}\n                            searchOptions={[\n                                [\"lemma\", \"Wort\"],\n                                [\"lemma_ac\", \"Wort-Anzeige\"],\n                                [\"id\", \"ID\"],\n                                [\"dicts\", \"Wörterbücher\"],\n                                [\"comment\", \"Kommentar\"],\n                                [\"lemma_nr\", \"Zahlzeichen\"],\n                                [\"MLW\", \"MLW\"],\n                                [\"Stern\", \"Stern\"],\n                                [\"Fragezeichen\", \"Fragezeichen\"],\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\"]', \"Lemma\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neues Wort\", async ()=>{\n                                        if(window.confirm(\"Soll ein neues Wort erstellt werden?\")){\n                                            const newId = await arachne.lemma.save({lemma_display:\"Neues Wort\", lemma:\"Neues Wort\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <LemmaBox\n                    loadMain={(e, res)=>{this.props.loadMain(e, res)}}\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<LemmaAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        let newItem = await arachne.lemma.get({id: id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n        this.setState({currentElements: currentElements, item: newItem});\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.lemma.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.lemma.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.lemma.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass LemmaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}><a dangerouslySetInnerHTML={parseHTML(cEl.lemma_display)} onClick={e=>{\n                    localStorage.setItem(\"searchBox_zettel\", `[[{\"id\":0,\"c\":\"lemma_id\",\"o\":\"=\",\"v\":${cEl.id}}],1,[\"id\"]]`);\n                    this.props.loadMain(e, \"zettel\");\n                }}></a></td><td dangerouslySetInnerHTML={parseHTML(cEl.dicts)}></td><td dangerouslySetInnerHTML={parseHTML(cEl.comment)}></td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table striped width=\"100%\">\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"30%\">Wortansatz</th><th width=\"20%\">Wörterbücher</th><th>Kommentar</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass LemmaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            lemma: this.props.item.lemma,\n            lemma_display: this.props.item.lemma_display,\n            lemma_nr: this.props.item.lemma_nr,\n            MLW: this.props.item.MLW,\n            Stern: this.props.item.Stern,\n            Fragezeichen: this.props.item.Fragezeichen,\n            comment: this.props.item.comment,\n            dicts: this.props.item.dicts,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <Container>\n                    <Row className=\"mb-2\">\n                        <Col>Wort:</Col>\n                        <Col><input type=\"text\" value={this.state.lemma} onChange={event=>{this.setState({lemma: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-5\">\n                        <Col>Wort-Anzeige:</Col>\n                        <Col><input type=\"text\" value={parseHTMLPreview(this.state.lemma_display)} onChange={event=>{this.setState({lemma_display: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Zahlzeichen:</Col>\n                        <Col><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({lemma_nr: event.target.value})}} value={this.state.lemma_nr} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>im Wörterbuch:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({MLW: event.target.value})}} value={this.state.MLW} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Stern:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Stern: event.target.value})}} value={this.state.Stern} /></Col>\n                    </Row>\n                    <Row className=\"mb-5\">\n                        <Col>Fragezeichen:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({Fragezeichen: event.target.value})}} value={this.state.Fragezeichen} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Wörterbücher:</Col>\n                        <Col><textarea style={{width: \"210px\", height: \"50px\"}} value={this.state.dicts?this.state.dicts.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"):\"\"} onChange={event=>{this.setState({dicts: event.target.value})}}></textarea></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col>Kommentar:</Col>\n                        <Col><textarea style={{width: \"210px\", height: \"150px\"}} value={this.state.comment?this.state.comment.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"):\"\"} onChange={event=>{this.setState({comment: event.target.value})}}></textarea></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col><small><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Umlemmatisierung\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Bearbeiten der Wörter.</small></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <StatusButton value=\"speichern\" onClick={async ()=>{\n                    if(this.state.lemma===\"\" || this.state.lemma.indexOf(\" \")>-1){\n                        return {status: false, error: \"Bitte ein gültiges Wort eintragen!\"};\n                    } else if(this.state.lemma_display===\"\"){\n                        return {status: false, error: \"Bitte tragen Sie eine gültige Wort-Anzeige ein!\"};\n                    } else {\n                        let newLemmaValue = {\n                            id: this.state.id,\n                            lemma: this.state.lemma,\n                            lemma_display: this.state.lemma_display,\n                            MLW: this.state.MLW,\n                            Fragezeichen: this.state.Fragezeichen,\n                            Stern: this.state.Stern,\n                            comment: this.state.comment,\n                            dicts: this.state.dicts,\n                            lemma_nr: this.state.lemma_nr,\n                        };\n                        const newId = await arachne.lemma.save(newLemmaValue);\n                        this.props.onUpdate(this.state.id);\n                        return {status: true};\n                    }\n                }} />\n                {arachne.access(\"l_edit\")?<StatusButton style={{marginLeft: \"10px\"}} variant=\"danger\" value=\"löschen\" onClick={async ()=>{\n                    if(window.confirm(\"Soll das Wort gelöscht werden? Das Wort wird von allen verknüpften Zettel entfernt. Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                        const allZettel = await arachne.zettel.get({lemma_id: this.state.id});\n                        let zettelRemoveList = [];\n                        for(const zettel of allZettel){\n                            zettelRemoveList.push({id: zettel.id, lemma_id: null});\n                        }\n                        if(zettelRemoveList.length>0){await arachne.zettel.save(zettelRemoveList);}\n                        await arachne.lemma.delete(this.state.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                        return {status: true};\n                    }\n                }} />:null}\n                        </Col>\n                    </Row>\n                </Container>\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                lemma: this.props.item.lemma,\n                lemma_display: this.props.item.lemma_display,\n                lemma_nr: this.props.item.lemma_nr,\n                MLW: this.props.item.MLW,\n                Stern: this.props.item.Stern,\n                Fragezeichen: this.props.item.Fragezeichen,\n                comment: this.props.item.comment,\n                dicts: this.props.item.dicts,\n            });\n        }\n    }\n}\n\nexport { Lemma };","import { Form, Navbar, Container, Offcanvas, Placeholder, Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { faExternalLinkAlt, faForward, faBackward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { parseHTML, SelectMenu, ToolKit, StatusButton, sleep } from \"./../elements.js\";\n\nclass OperaAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {author: null, work: null, authorLst: []};\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title></Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                {this.state.author&&<div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    rowGap: \"10px\",\n                    margin: \"0\"\n                }}>\n                    <h3>Autor <i style={{fontSize: \"60%\"}}>ID: {this.state.author.id})</i></h3><div></div>\n                    <div>Name:</div><div><input type=\"text\" value={this.state.author.full?this.state.author.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nAuthor = this.state.author;nAuthor.full = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>Abkürzung:</div><div><input type=\"text\" value={this.state.author.abbr} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.author.abbr_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.abbr_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.author.date_display} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_display = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.author.date_sort} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_sort = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.author.date_type} onChange={e=>{let nAuthor = this.state.author;nAuthor.date_type = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.author.in_use} onChange={e=>{let nAuthor = this.state.author;nAuthor.in_use = e.target.value;this.setState({author:nAuthor})}} /></div>\n                    <div></div><div>\n                        <StatusButton value=\"speichern\" onClick={async ()=>{\n                        await arachne.author.save(this.state.author);\n                        this.props.onUpdate();\n                        return {status: true};\n                    }} />\n                        <StatusButton value=\"löschen\" variant=\"danger\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                            const works = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.author.id}], {select: [\"id\"]});\n                            let workLst = [];\n                            for(const work of works){\n                                workLst.push(work.id);\n                            }\n                            if(window.confirm(`Soll der Autor wirklich gelöscht werden? ${workLst.length>1?workLst.length+\" verknüpfte Werke werden\":\"Ein verknüpftes Werk wird\"} ebenfalls gelöscht. Dieser Schritt kann nicht mehr rückgängig gemacht werden!`)){\n                                if(workLst.length>0){await arachne.work.delete(workLst)};\n                                await arachne.author.delete(this.state.author.id);\n                                await arachne.exec(\"opera_update\");\n                                this.props.onReload();\n                                return {status: true};\n                            } else{return {status: 0};}\n                        }} />\n                    </div>\n                </div>\n            }\n                {this.state.work&&<div style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"150px auto\",\n                    rowGap: \"10px\",\n                    margin: \"50px 0\"\n                }}>\n                    <h3>Werk <i style={{fontSize: \"60%\"}}>(ID: {this.state.work.id})</i></h3><div></div>\n                    <div>Werktitel:</div><div><input type=\"text\" value={this.state.work.full?this.state.work.full.replace(/&lt;/g, \"<\").replace(/&gt;/g,\">\"):\"\"} onChange={e=>{let nWork = this.state.work;nWork.full = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Abkürzung:</div><div><input type=\"text\" value={this.state.work.abbr} onChange={e=>{let nWork = this.state.work;nWork.abbr = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Abkürzung (Sortierung):</div><div><input type=\"text\" value={this.state.work.abbr_sort} onChange={e=>{let nWork = this.state.work;nWork.abbr_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Anzeigedatum:</div><div><input type=\"text\" value={this.state.work.date_display} onChange={e=>{let nWork = this.state.work;nWork.date_display = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Sortierdatum:</div><div><input type=\"text\" value={this.state.work.date_sort} onChange={e=>{let nWork = this.state.work;nWork.date_sort = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Sortierdatum-Typ:</div><div><input type=\"text\" value={this.state.work.date_type} onChange={e=>{let nWork = this.state.work;nWork.date_type = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Abweichender Autorenname\n                    (z.B. bei <aut>Vita</aut>):</div><div><input type=\"text\" value={this.state.work.author_display} onChange={e=>{let nWork = this.state.work;nWork.author_display = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>verknpft. Autor:</div><div><SelectMenu style={{width: \"86%\"}} options={this.state.authorLst} value={this.state.work.author_id} onChange={e=>{let nWork = this.state.work;nWork.author_id = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Stellenangabe: <span className=\"minorTxt\">(Bsp.)</span></div><div><input type=\"text\" value={this.state.work.citation} onChange={e=>{let nWork = this.state.work;nWork.citation = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Stellenangabe Bibliographie: <i className=\"minorTxt\">(nur minora)</i></div><div><input type=\"text\" value={this.state.work.bibliography_cit} onChange={e=>{let nWork = this.state.work;nWork.bibliography_cit = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Referenz:</div><div><input type=\"text\" value={this.state.work.reference} onChange={e=>{let nWork = this.state.work;nWork.reference = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>in Benutzung:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.work.in_use} onChange={e=>{let nWork = this.state.work;nWork.in_use = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div><i>opus maius</i>:</div><div><SelectMenu style={{width: \"86%\"}} options={[[0, \"Nein\"], [1, \"Ja\"]]} value={this.state.work.is_maior} onChange={e=>{let nWork = this.state.work;nWork.is_maior = e.target.value;this.setState({work:nWork})}} /></div>\n                    <div>Kommentar:</div><div><textarea value={this.state.work.txt_info} onChange={e=>{let nWork = this.state.work;nWork.txt_info = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                    <div>Bibliographie:</div><div><textarea value={this.state.work.bibliography} onChange={e=>{let nWork = this.state.work;nWork.bibliography = e.target.value;this.setState({work:nWork})}} style={{width: \"205px\", height: \"130px\"}}></textarea></div>\n                    <div></div><div>\n                        <StatusButton value=\"speichern\" onClick={async ()=>{\n                        await arachne.work.save(this.state.work);\n                        this.props.onUpdate();\n                        return {status: true};\n                    }} />\n                    <StatusButton value=\"löschen\" variant=\"danger\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                        const worksDict = await arachne.work.search([{c: \"author_id\", o: \"=\", v: this.state.work.author_id}], {count: true});\n                        const works = worksDict[0].count;\n                        if(works<2){\n                            return {status: -1, error: \"Das Werk kann nicht gelöscht werden, da es das lezte Werk des Autors ist.\"};\n                        } else if(window.confirm(\"Soll das Werk wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                            await arachne.work.delete(this.state.work.id);\n                            await arachne.exec(\"opera_update\");\n                            this.props.onReload();\n                            return {status: true};\n                        }else{return {status: 0};}\n                    }} />\n                    </div>\n                </div>}\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidMount(){\n        const loadOptions = async () => {\n            const authors = await arachne.author.getAll({select: [\"id\", \"abbr\"], order: [\"abbr_sort\"]});\n            let newAuthorLst = [];\n            for(const author of authors){\n                newAuthorLst.push([author.id, author.abbr]);\n            }\n            this.setState({authorLst: newAuthorLst});\n        }\n        loadOptions();\n        if(this.props.item.author_id>0){\n            const getAuthor = async () => {\n                const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                this.setState({author: newAuthor[0]});\n            }\n            getAuthor();\n        }\n        if(this.props.item.work_id>0){\n            const getWork = async () => {\n                const newWork = await arachne.work.get({id: this.props.item.work_id});\n                this.setState({work: newWork[0]});\n            }\n            getWork();\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.author_id!=this.props.item.author_id){\n            if(this.props.item.author_id>0){\n                const getAuthor = async () => {\n                    const newAuthor = await arachne.author.get({id: this.props.item.author_id});\n                    this.setState({author: newAuthor[0]});\n                }\n                getAuthor();\n            }else{this.setState({author: null})}\n        }\n        if(prevProps.item.work_id!=this.props.item.work_id){\n            if(this.props.item.work_id>0){\n                const getWork = async () => {\n                    const newWork = await arachne.work.get({id: this.props.item.work_id});\n                    this.setState({work: newWork[0]});\n                }\n                getWork();\n            }else{this.setState({work: null})}\n        }\n    }\n}\nclass OperaBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {oLst: [], cHitId: 0};\n        this.resultsOnPage = 18;\n    }\n    render(){\n        let trLst = [];\n        let tblLst = [];\n        let i = 0;\n        let j = 0;\n        this.scrollRef = null;\n        for(const cTr of this.props.cTrLst){\n            i++;\n            let hitStyle = {};\n            if(cTr.o.id===this.state.cHitId){hitStyle = \"searchHit\"; this.scrollRef = React.createRef()}\n            else if(this.state.cHitId>0&&this.state.hits.some(i=>i.id===cTr.o.id)){hitStyle = \"searchAllHits\"}\n            trLst.push(<tr className={hitStyle} ref={cTr.o.id===this.state.cHitId?this.scrollRef:null} key={i} onDoubleClick={e=>{e.stopPropagation();this.props.showDetail(cTr.o)}}>{cTr.data}</tr>);\n            if(trLst.length >= this.resultsOnPage){\n                j++;\n                tblLst.push(<div key={j} id={\"operaBox_\"+j} style={{borderBottom: \"1px dotted black\", paddingBottom: \"15px\", margin: \"10px\"}}><table className=\"operaBox\"><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j}</div></div>);\n                trLst = [];\n            }\n        }\n        if(j>0){tblLst.push(<div key={j+1} id={\"operaBox_\"+(j+1)} style={{margin: \"10px\"}}><table className=\"operaBox\"><tbody>{trLst}</tbody></table><div style={{textAlign: \"center\"}}>{j+1}</div></div>);}\n        let placeholderTable = <table className=\"operaBox\" style={{width:\"100%\"}}>\n            <tbody>\n                <tr>\n                    <td className=\"c1\"></td>\n                    <td className=\"c2\"><Placeholder sm={10} /></td>\n                    <td className=\"c3\"><Placeholder sm={10} /></td>\n                    <td className=\"c4\"></td>\n                    <td className=\"c5\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={10} />\n                    <Placeholder sm={8} /> <Placeholder bg=\"primary\" sm={4} /></td>\n                    <td className=\"c5\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"></td>\n                    <td className=\"c2\"><Placeholder sm={10} /></td>\n                    <td className=\"c3\"><Placeholder sm={10} /></td>\n                    <td className=\"c4\"></td>\n                    <td className=\"c5\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={10} /> <Placeholder sm={10} />\n                    <Placeholder sm={8} /> <Placeholder bg=\"primary\" sm={6} /></td>\n                    <td className=\"c5\"><Placeholder sm={6} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"></td>\n                    <td className=\"c2\"><Placeholder sm={10} /></td>\n                    <td className=\"c3\"><Placeholder sm={10} /><Placeholder sm={8} /></td>\n                    <td className=\"c4\"></td>\n                    <td className=\"c5\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={11} /> <Placeholder sm={10} /> <Placeholder sm={8} />\n                    <Placeholder sm={8} /><Placeholder sm={10} /> <Placeholder sm={9} /> <Placeholder sm={10} />\n                    <Placeholder sm={8} /> <Placeholder bg=\"primary\" sm={6} /></td>\n                    <td className=\"c5\"><Placeholder sm={8} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"></td>\n                    <td className=\"c2\"><Placeholder sm={10} /></td>\n                    <td className=\"c3\"><Placeholder sm={10} /></td>\n                    <td className=\"c4\"></td>\n                    <td className=\"c5\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={11} />\n                    <Placeholder sm={9} /> <Placeholder bg=\"primary\" sm={8} /></td>\n                    <td className=\"c5\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"></td>\n                    <td className=\"c2\"><Placeholder sm={10} /></td>\n                    <td className=\"c3\"><Placeholder sm={10} /></td>\n                    <td className=\"c4\"></td>\n                    <td className=\"c5\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={9} /> <Placeholder sm={11} /> <Placeholder sm={8} /> <Placeholder bg=\"primary\" sm={4} /></td>\n                    <td className=\"c5\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={10} /> <Placeholder sm={10} /> <Placeholder sm={10} />\n                    <Placeholder sm={8} /> <Placeholder bg=\"primary\" sm={4} /></td>\n                    <td className=\"c5\"><Placeholder sm={4} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1\"><Placeholder sm={10} /></td>\n                    <td className=\"c2\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c3\">&nbsp;&nbsp;&nbsp;<Placeholder sm={10} /></td>\n                    <td className=\"c4\"><Placeholder sm={8} /> <Placeholder sm={11} /> <Placeholder sm={10} />\n                    <Placeholder sm={9} /> <Placeholder bg=\"primary\" sm={8} /></td>\n                    <td className=\"c5\"><Placeholder sm={7} /></td>\n                </tr>\n            </tbody>\n        </table>;\n        if(this.props.listName!=\"opera_maiora\"){\n            placeholderTable = <table className=\"operaBox\" style={{width:\"100%\"}}>\n            <tbody>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder bg=\"primary\" sm={4} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={11} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={4} /><br /><Placeholder sm={2} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c5_min\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={11} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={5} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={4} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={4} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={6} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={11} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={6} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={3} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={3} bg=\"primary\" /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={11} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={8} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={2} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={6} /></td>\n                    <td className=\"c5_min\"></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} bg=\"primary\" /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={4} bg=\"primary\" /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={2} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={6} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={4} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={9} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={3} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={11} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={11} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={8} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={5} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"></td>\n                    <td className=\"c2_min\"><Placeholder sm={10} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={4} /></td>\n                </tr>\n                <tr>\n                    <td className=\"c1_min\"><Placeholder sm={4} /></td>\n                    <td className=\"c2_min\"><Placeholder sm={7} /></td>\n                    <td className=\"c5_min\"><Placeholder sm={3} /></td>\n                </tr>\n            </tbody>\n        </table>;\n        }\n        let toolKitMenu = [\n            [\"opera-Listen aktualisieren\", async ()=>{  \n                if(window.confirm(\"Soll die opera-Liste aktualisiert werden? Der Prozess dauert ca. 30 Sekunden.\")){\n                    await arachne.exec(\"opera_update\");\n                    await this.props.getLst();\n                }\n            }]\n        ];\n        if(arachne.access(\"o_edit\")){\n            toolKitMenu.push([\"Neuer Autor erstellen\", async ()=>{\n                if(window.confirm(\"Soll ein neuer Autor erstellt werden? Er heisst '+NEUER AUTOR'\")){\n                    const newId = await arachne.author.save({full:\"+Neuer Autor\", abbr:\"+Neuer Autor\", abbr_sort: \"+Neuer Autor\", in_use: 1});\n                    await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: newId, is_maior: 1, in_use: 1});\n                    if(window.confirm(\"Ein neuer Autor wurde erstellt. Soll die opera-Liste aktualisiert werden?\")){\n                        await arachne.exec(\"opera_update\");\n                        await this.props.getLst();\n\n                    }\n                }\n            }]);\n            toolKitMenu.push([\"Neues Werk erstellen\", async ()=>{\n                if(window.confirm(\"Soll ein neues Werk erstellt werden? Das Werk wird ABBO FLOR. zugewiesen.\")){\n                    const newId = await arachne.work.save({full:\"Neues Werk\", abbr:\"Neues Werk\", abbr_sort: \"Neues Werk\", author_id: 1, is_maior: 1, in_use: 1});\n                    if(window.confirm(\"Ein neues Werk wurde erstellt. Soll die opera-Liste aktualisiert werden?\")){\n                        await arachne.exec(\"opera_update\");\n                        await this.props.getLst();\n                    }\n                }\n            }]);\n        }\n        return <>\n            {tblLst.length===0?null:<Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                <Navbar.Collapse className=\"justify-content-start\">\n                    <OperaSearchBox listName={this.props.listName} setHitIndex={hitIndex=>{this.setState({cHitId: hitIndex})}} setHits={hits=>{this.setState({hits: hits})}} />\n                </Navbar.Collapse>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        <Form.Control type=\"text\"  style={{textAlign: \"right\", width: \"80px\", padding: \"2px 5px\", marginRight: \"20px\"}} accessKey=\"p\" placeholder=\"Seite...\" onKeyUp={e=>{\n                            if(e.keyCode===13){\n                                const box = document.querySelector(\"div#operaBox_\"+e.target.value);\n                                if(box){box.scrollIntoView({behavior: \"smooth\"});}   \n                            }\n                        }} />\n                    </Navbar.Text>\n                    <Navbar.Text>\n                        <ToolKit menuItems={toolKitMenu} />\n                    </Navbar.Text>\n                </Navbar.Collapse>\n                </Container>\n            </Navbar>}\n            <div style={{gridArea: this.props.gridArea}}>\n                {tblLst.length===0?\n                    <div>\n                        <Placeholder animation=\"glow\">\n                            {placeholderTable}\n                        </Placeholder>\n                    </div>\n                :<div>{tblLst}</div>}\n            </div>\n        </>;\n    }\n    gotoSearchResult(move){\n        if(move===1&&this.state.hitIndex<this.state.maxHits-1){\n            this.setState({hitIndex: this.state.hitIndex+1});\n        } else if (move===1){\n            this.setState({hitIndex: 0});\n        } else if (move===-1&&this.state.hitIndex>0){\n            this.setState({hitIndex: this.state.hitIndex-1});\n        } else if (move===-1){\n            this.setState({hitIndex: this.state.maxHits-1});\n        }\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(this.state.hits&&this.state.hits.length>0){\n            if(prevState.hitIndex!=this.state.hitIndex){ this.setState({cHitId: this.state.hits[this.state.hitIndex].id}) }\n        } else if(this.state.cHitId!=0){this.setState({cHitId: 0})}\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n}\nfunction OperaSearchBox(props){\n    const [hits, setHits] = useState([]);\n    const [hitIndex, setHitIndex] = useState(0);\n    const [query, setQuery] = useState(\"\");\n    useEffect(()=>{\n        if(hits.length>0){props.setHitIndex(hits[hitIndex].id)}\n    }, [hits, hitIndex]);\n    useEffect(()=>{props.setHits(hits)}, [hits]);\n\n    const gotoNextResult = step => {\n        if(step===1){\n            if(hitIndex+1===hits.length){setHitIndex(0)}\n            else{setHitIndex(hitIndex+1)}\n        } else if (step===-1){\n            if(hitIndex===0){setHitIndex(hits.length-1)}\n            else{setHitIndex(hitIndex-1)}\n        } else if (step===0){\n            const el = document.querySelector(\".searchHit\");\n            el.scrollIntoView({behavior: \"smooth\", block: \"center\"});\n        }\n        \n    };\n    return <>\n    <Navbar.Text>\n        <Form.Control type=\"text\" style={{padding: \"2px 5px\"}} accessKey=\"s\" placeholder=\"Suche nach Zitiertitel...\" onKeyUp={async e=>{\n            if(e.keyCode === 13){\n                if(e.target.value===\"\"){//reset search\n                    setHits([]);\n                } else if(e.target.value!=query){// new search\n                    const nHits = await arachne[props.listName].search([{c: \"search\", o: \"=\", v: `*${e.target.value}*`}], {select: [\"id\"]});\n                    if(nHits.length>0){\n                        setQuery(e.target.value);\n                        setHitIndex(0);\n                        setHits(nHits);\n                    }else{\n                        setHits([]);\n                    }\n                } else {// goto next result\n                    gotoNextResult(1);\n                }\n            }\n        }} />\n    </Navbar.Text>\n    {hits.length>0&&<Navbar.Text>\n        <div style={{display:\"flex\", marginLeft: \"20px\", border: \"1px solid var(--bs-gray-200)\"}}>\n            <Button size=\"sm\" variant=\"outline-dark\" style={{borderRadius: \"0.2rem 0 0 0.2rem\"}} onClick={()=>{gotoNextResult(-1)}} disabled={hits.length===1?true:false}><FontAwesomeIcon icon={faBackward} style={{fontSize: \"14px\"}} /></Button>\n            <div style={{borderBottom: \"1px solid var(--bs-gray-600)\", borderTop: \"1px solid var(--bs-gray-600)\", padding: \"5px 15px\", margin: \"0\", cursor: \"pointer\"}} onClick={()=>{gotoNextResult(0)}}>{hitIndex+1} / {hits.length}</div>\n            <Button size=\"sm\" variant=\"outline-dark\"  style={{borderRadius: \"0 0.2rem 0.2rem 0\"}} onClick={()=>{gotoNextResult(1)}} disabled={hits.length===1?true:false}><FontAwesomeIcon icon={faForward} style={{fontSize: \"12px\"}} /></Button>\n        </div>\n    </Navbar.Text>}\n</>;\n}\n\nclass Opera extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectionDetail: null,\n            cTrLst: [],\n        }\n    }\n    render(){\n        return <>\n            <Container className=\"mainBody\">\n                <OperaBox\n                    getLst={async ()=>{this.getLst()}}\n                    cTrLst={this.state.cTrLst}\n                    listName={this.props.listName}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    pageMax={this.state.pageMax}\n                    gridArea={(this.state.selectionDetail)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {this.state.item?<OperaAside item={this.state.item} onUpdate={()=>{this.setState({item: null})}} onClose={()=>{this.setState({item: null})}} onReload={async ()=>{this.setState({item: null});await this.getLst()}} />:null}\n        </>;\n    }\n    componentDidMount(){this.getLst()}\n    componentDidUpdate(prevProps){\n        if(this.props.listName!=prevProps.listName){this.getLst()}\n        if(this.scrollRef){this.scrollRef.current.scrollIntoView({behavior: \"smooth\", block: \"center\"})}\n    }\n    async getLst(){\n        this.setState({cTrLst: []});\n        const oMax = await arachne[this.props.listName].getAll({count: true});\n        const oLst = await arachne[this.props.listName].getAll();\n        const trLst = this.createOperaLists(oLst, this.props.listName);\n        this.setState({cTrLst: trLst, oMax: Math.floor(oMax[0][\"count\"]/this.resultsOnPage)+1, currentPage: 1});\n    }\n    createOperaLists(oLst, listName){\n        let trLst = [];\n        let i = 0;\n        for(const o of oLst){\n            let editionLst = [];\n            if(o.editions_id){\n                const editionsId = JSON.parse(o.editions_id);\n                const editionsURL = JSON.parse(o.editions_url);\n                const editionsLabel = JSON.parse(o.editions_label);\n                for(let iE = 0; iE < editionsId.length; iE++){\n                    let cURL = \"/site/argos/\"+editionsId[iE];\n                    let arrow = \"\";\n                    if(editionsURL&&editionsURL[iE]!=\"\"){\n                        cURL=editionsURL[iE];\n                        arrow = <span> <FontAwesomeIcon style={{fontSize:\"14px\"}} icon={faExternalLinkAlt} /></span>\n                    }\n                    let cLabel = \"FEHLER!\";\n                    if(editionsLabel){cLabel=editionsLabel[iE]}\n                    editionLst.push(<li key={iE}><a href={cURL} target=\"_blank\" rel=\"noreferrer\">{cLabel}{arrow}</a></li>);\n                }\n            }\n            i++;\n            if(listName==\"opera_maiora\"){\n                let abbr = `<aut>${o.abbr}</aut>`;\n                let full = o.full;\n                if(o.work_id>0&&o.author_id===null){\n                    abbr= `<span>&nbsp;&nbsp;&nbsp;${o.abbr}</span>`;\n                    full = `<span>&nbsp;&nbsp;&nbsp;${o.full}</span>`;\n                }\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2\" dangerouslySetInnerHTML={parseHTML(abbr)}></td>,\n                <td key=\"2\" className=\"c3\" dangerouslySetInnerHTML={parseHTML(full)}></td>,\n                <td key=\"3\" className=\"c4\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td>,\n                <td key=\"4\" className=\"c5\" dangerouslySetInnerHTML={parseHTML(o.comment)}></td>\n            ]});\n            } else if(listName===\"opera_minora\"){\n                trLst.push({o: o, data: [\n                <td key=\"0\" className=\"c1_min\" dangerouslySetInnerHTML={parseHTML(o.date_display)}></td>,\n                <td key=\"1\" className=\"c2_min\" dangerouslySetInnerHTML={parseHTML(o.citation)}></td>,\n                <td key=\"2\" className=\"c5_min\"><span dangerouslySetInnerHTML={parseHTML(o.bibliography)}></span><ul className=\"noneLst\">{editionLst}</ul></td>\n            ]});\n            }\n        }\n        return trLst;\n    }\n}\n\nexport { Opera };","import { Row, Col, Button, Table, Navbar, Offcanvas, Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, Navigator, parseHTML, SearchBox, SelectMenu, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nclass SekLit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null\n        };\n    }\n\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"seklit\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"id\", \"ID\"]\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"e_edit\")&&<ToolKit menuItems={[\n                                    [\"neuer Eintrag\", async ()=>{\n                                        if(window.confirm(\"Soll ein neuer Eintrag erstellt werden?\")){\n                                            const newId = await arachne.seklit.save({titel: \"neues Werk\"});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <SekLitBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<SekLitAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.seklit.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            this.setState({currentElements: [], item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.seklit.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.seklit.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.seklit.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass SekLitBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.kennziffer}</td><td>{cEl.signatur} {cEl.alte_signatur?`(${cEl.alte_signatur})`:null}</td><td>\n                    {cEl.name}, {cEl.vorname}, <b>{cEl.titel}</b>, {cEl.reihe}, {cEl.ort} {cEl.jahr}\n                    </td>\n                    <td>{cEl.weitere_angaben}{cEl.zusatz?\" - \"+cEl.zusatz:null}</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\" striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"10%\">Kennziffer</th><th width=\"10%\">Signatur</th><th width=\"60%\">Werkbezeichnung</th><th>weitere Angaben</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass SekLitAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            kennziffer: this.props.item.kennziffer,\n            signatur: this.props.item.signatur,\n            alte_signatur: this.props.item.alte_signatur,\n            name: this.props.item.name,\n            vorname: this.props.item.vorname,\n            titel: this.props.item.titel,\n            reihe: this.props.item.reihe,\n            weitere_angaben: this.props.item.weitere_angaben,\n            ort: this.props.item.ort,\n            jahr: this.props.item.jahr,\n            zusatz: this.props.item.zusatz,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n    <Offcanvas.Header closeButton>\n        <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n    </Offcanvas.Header>\n    <Offcanvas.Body>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Kennziffer:</Col>\n            <Col><input type=\"text\" value={this.state.kennziffer?this.state.kennziffer:\"\"} onChange={e=>{this.setState({kennziffer: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.signatur?this.state.signatur:\"\"} onChange={e=>{this.setState({signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>alte Signatur:</Col>\n            <Col><input type=\"text\" value={this.state.alte_signatur?this.state.alte_signatur:\"\"} onChange={e=>{this.setState({alte_signatur: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Name:</Col>\n            <Col><input type=\"text\" value={this.state.name?this.state.name:\"\"} onChange={e=>{this.setState({name: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Vorname:</Col>\n            <Col><input type=\"text\" value={this.state.vorname?this.state.vorname:\"\"} onChange={e=>{this.setState({vorname: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Titel:</Col>\n            <Col><input type=\"text\" value={this.state.titel?this.state.titel:\"\"} onChange={e=>{this.setState({titel: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Reihe:</Col>\n            <Col><input type=\"text\" value={this.state.reihe?this.state.reihe:\"\"} onChange={e=>{this.setState({reihe: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Ort:</Col>\n            <Col><input type=\"text\" value={this.state.ort?this.state.ort:\"\"} onChange={e=>{this.setState({ort: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>Jahr:</Col>\n            <Col><input type=\"text\" value={this.state.jahr?this.state.jahr:\"\"} onChange={e=>{this.setState({jahr: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={4}>weitere Angaben:</Col>\n            <Col><input type=\"text\" value={this.state.weitere_angaben?this.state.weitere_angaben:\"\"} onChange={e=>{this.setState({weitere_angaben: e.target.value})}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Zusatz:</Col>\n            <Col><input type=\"text\" value={this.state.zusatz?this.state.zusatz:\"\"} onChange={e=>{this.setState({zusatz: e.target.value})}} /></Col>\n        </Row>\n        <Row>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            await arachne.seklit.save({\n                id: this.state.id,\n                kennziffer: this.state.kennziffer,\n                signatur: this.state.signature,\n                alte_signatur: this.state.alte_signatur,\n                name: this.state.name,\n                vorname: this.state.vorname,\n                titel: this.state.titel,\n                reihe: this.state.reihe,\n                weitere_angaben: this.state.weitere_angaben,\n                ort: this.state.ort,\n                jahr: this.state.jahr,\n                zusatz: this.state.zusatz,\n            });\n            this.props.onUpdate(this.state.id);\n            return {status: true};\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"10px\"}} onClick={async ()=>{\n                    if(window.confirm(\"Soll der Eintrag gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                        await arachne.seklit.delete(this.state.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>löschen</Button></Col>\n        </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.setState({\n                id: this.props.item.id,\n                kennziffer: this.props.item.kennziffer,\n                signatur: this.props.item.signatur,\n                alte_signatur: this.props.item.alte_signatur,\n                name: this.props.item.name,\n                vorname: this.props.item.vorname,\n                titel: this.props.item.titel,\n                reihe: this.props.item.reihe,\n                weitere_angaben: this.props.item.weitere_angaben,\n                ort: this.props.item.ort,\n                jahr: this.props.item.jahr,\n                zusatz: this.props.item.zusatz,\n            });\n        }\n    }\n}\n\n\nclass Ressource extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            newItemCreated: null,\n            offset: 0,\n        };\n    }\n    render(){\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            setupItems={this.state.newItemCreated}\n                            boxName=\"ressources\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            searchOptions={[\n                                [\"ac_web\", \"Werk\"],\n                                [\"work_id\", \"Werk-ID\"],\n                                [\"ressource\", \"Ressource-Typ\"],\n                                [\"id\", \"ID\"],\n                                [\"path\", \"Dateipfad\"],\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"label\"]', \"Kürzel\"], ['[\"opus\"]', \"vrkn. Werk\"]]}\n                            status={this.state.searchStatus}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                    [\"neue Ressource\", async ()=>{\n                                        if(window.confirm(\"Soll eine neue Ressource erstellt werden?\")){\n                                            const newId = await arachne.edition.save({ressource: 0, editor: \"Neue Ressource\", year: new Date().getFullYear()});\n                                            this.setState({newItemCreated: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                                        }\n                                    }]\n                                ]} />}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <RessourceBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    gridArea={(this.state.item)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({item: item});\n                    }}\n                />\n            </Container>\n            {(this.state.item)?<RessourceAside item={this.state.item} onUpdate={id=>{this.reloadEntry(id)}} onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({item: null})}} />:\"\"}\n        </>;\n    }\n    async reloadEntry(id){\n        if(id>0){\n            let newItem = await arachne.edition.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, item: newItem});\n        } else {\n            const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:this.state.offset, order:this.state.queryOrder});\n            this.setState({currentElements: currentElements, item: null});\n        }\n    }\n    async searchQuery(newQuery, order){\n        const count = await arachne.edition.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.edition.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.edition.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                offset: ((newPage-1)*50),\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass RessourceBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            const resTypes = {\n                0: \"Edition (relevant)\",\n                1: \"Edition (veraltet)\",\n                2: \"Handschrift\",\n                3: \"Alter Druck (relevant)\",\n                4: \"Alter Druck (veraltet)\",\n                5: \"Sonstiges\"\n            };\n    \n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                let url = cEl.url;\n                if(url===\"\"||url===null){url = \"/site/viewer/\"+cEl.id}\n                cEls.push(<tr key={cEl.id} id={cEl.id} onDoubleClick={e=>{this.props.showDetail(this.props.currentElements.find(i =>i.id === parseInt(e.target.closest(\"tr\").id)))}}><td title={\"ID: \"+cEl.id}>{cEl.label}</td><td>{resTypes[cEl.ressource]}</td><td dangerouslySetInnerHTML={parseHTML(cEl.opus)}></td><td><a href={url} target=\"_blank\">öffnen</a>{\n                    cEl.url?<FontAwesomeIcon style={{fontSize:\"14px\", marginLeft: \"10px\"}} icon={faExternalLinkAlt} />:null\n                }</td></tr>);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                <Table width=\"100%\"striped>\n                    <thead style={{textAlign:\"left\"}}><tr><th width=\"20%\">Kürzel</th><th width=\"20%\">Typ</th><th>vrkn. Werk</th><th width=\"10%\">Link</th></tr></thead>\n                    <tbody>{cEls}</tbody>\n                </Table>\n            </div>);\n        } else {\n            return <SearchHint />;\n        }\n    }\n}\nclass RessourceAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.item.id,\n            ressource: this.props.item.ressource,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            editor: this.props.item.editor,\n            year: this.props.item.year,\n            volume: this.props.item.volume,\n            vol_cont: this.props.item.vol_cont,\n            serie: this.props.item.serie,\n            location: this.props.item.location,\n            library: this.props.item.library,\n            signature: this.props.item.signature,\n            comment: this.props.item.comment,\n            path: this.props.item.path,\n            url: this.props.item.url,\n            aspect_ratio: this.props.item.aspect_ratio,\n            bibliography_preview: null,\n        };\n    }\n    render(){\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>ID {this.state.id}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Werk:</Col>\n                <Col><AutoComplete  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({ac_web: value, work_id: id});this.updateBibliography(id)}} /></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Alter Dateiname:</Col>\n                <Col>{this.props.item.dir_name}</Col>\n            </Row>\n            {this.state.bibliography_preview&&<Row className=\"mb-4\">\n                <Col xs={3}>Biblio-graphische Angaben:</Col>\n                <Col style={{fontSize: \"90%\", backgroundColor: \"var(--bs-gray-100\"}}>{this.state.bibliography_preview}</Col>\n            </Row>}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Ressource:</Col>\n                <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} value={this.state.ressource?this.state.ressource:\"\"} onChange={e=>{this.setState({ressource: parseInt(e.target.value)})}} /></Col>\n            </Row>\n            {this.state.ressource===0||this.state.ressource===1||this.state.ressource===5?[\n                <Row key=\"0\" className=\"mb-2\">\n                    <Col xs={3}>Editor:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"1\" className=\"mb-2\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"2\" className=\"mb-2\">\n                    <Col xs={3}>Band:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.volume?this.state.volume:\"\"} onChange={e=>{this.setState({volume: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"3\" className=\"mb-2\">\n                    <Col xs={3}>Bandinhalt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.vol_cont?this.state.vol_cont:\"\"} onChange={e=>{this.setState({vol_cont: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"4\" className=\"mb-4\">\n                    <Col xs={3}>Reihe:</Col>\n                    <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} value={this.state.serie?this.state.serie:\"\"} onChange={e=>{this.setState({serie: parseInt(e.target.value)})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===2?[\n                <Row key=\"5\" className=\"mb-2\">\n                    <Col xs={3}>Stadt:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"6\" className=\"mb-2\">\n                    <Col xs={3}>Bibliothek:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.library?this.state.library:\"\"} onChange={e=>{this.setState({library: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"7\" className=\"mb-4\">\n                    <Col xs={3}>Signatur:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.signature?this.state.signature:\"\"} onChange={e=>{this.setState({signature: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            {this.state.ressource===3||this.state.ressource===4?[\n                <Row key=\"8\" className=\"mb-2\">\n                    <Col xs={3}>Drucker:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.editor?this.state.editor:\"\"} onChange={e=>{this.setState({editor: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"9\" className=\"mb-2\">\n                    <Col xs={3}>Ort:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.location?this.state.location:\"\"} onChange={e=>{this.setState({location: e.target.value})}} /></Col>\n                </Row>,\n                <Row key=\"10\" className=\"mb-4\">\n                    <Col xs={3}>Jahr:</Col>\n                    <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.year?this.state.year:\"\"} onChange={e=>{this.setState({year: e.target.value})}} /></Col>\n                </Row>,\n            ]:null}\n            <Row className=\"mb-2\">\n                <Col xs={3}>Kommentar:</Col>\n                <Col><textarea style={{width: \"267px\", height: \"100px\"}} value={this.state.comment?this.state.comment:\"\"} onChange={e=>{this.setState({comment: e.target.value})}}></textarea></Col>\n            </Row>\n            <Row className=\"mb-2\">\n                <Col xs={3}>Dateipfad:</Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.path?this.state.path:\"\"} onChange={e=>{this.setState({path: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n                <Col xs={3}>Link:<br /><small>(externe Quellen)</small></Col>\n                <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.url?this.state.url:\"\"} onChange={e=>{this.setState({url: e.target.value})}} /></Col>\n            </Row>\n            <Row className=\"mb-4\">\n            <Col xs={3}>Seiten-verhältnis:</Col>\n            <Col><input type=\"text\" style={{width: \"100%\"}} value={this.state.aspect_ratio?this.state.aspect_ratio:\"\"} onChange={e=>{this.setState({aspect_ratio: e.target.value.substring(0,5)})}} /></Col>\n        </Row>\n            <Row className=\"mb-2\">\n                <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n            if((this.state.ressource===0||this.state.ressource===1||this.state.ressource===5)&&!this.state.serie&&(!this.state.editor||!this.state.year)){\n                return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n            } else {\n                await arachne.edition.save({\n                    id: this.state.id,\n                    work_id: this.state.work_id,\n                    ressource: this.state.ressource,\n                    editor: this.state.editor,\n                    year: this.state.year,\n                    volume: this.state.volume,\n                    vol_cont: this.state.vol_cont,\n                    serie: this.state.serie,\n                    comment: this.state.comment,\n                    location: this.state.location,\n                    library: this.state.library,\n                    signature: this.state.signature,\n                    path: this.state.path,\n                    url: this.state.url,\n                    aspect_ratio: this.state.aspect_ratio,\n                });\n                this.props.onUpdate(this.state.id);\n                return {status: true};\n            }\n        }} />\n        <Button variant=\"danger\" style={{marginLeft: \"20px\"}} onClick={async ()=>{\n            if(window.confirm(\"Soll die Ressource wirklich gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden!\")){\n                await arachne.edition.delete(this.state.id);\n                this.props.onUpdate(null);\n                this.props.onReload();\n            }\n        }}>löschen</Button></Col>\n            </Row>\n    </Offcanvas.Body>\n</Offcanvas>;\n    }\n    componentDidMount(){\n        this.updateBibliography(this.props.item.work_id);\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            this.updateBibliography(this.props.item.work_id);\n            this.setState({\n                id: this.props.item.id,\n                ressource: this.props.item.ressource,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                editor: this.props.item.editor,\n                year: this.props.item.year,\n                volume: this.props.item.volume,\n                vol_cont: this.props.item.vol_cont,\n                serie: this.props.item.serie,\n                location: this.props.item.location,\n                library: this.props.item.library,\n                signature: this.props.item.signature,\n                comment: this.props.item.comment,\n                path: this.props.item.path,\n                url: this.props.item.url,\n                aspect_ratio: this.props.item.aspect_ratio,\n            });\n        }\n    }\n    async updateBibliography(work_id){\n        if(work_id>0){\n            let bibliography = await arachne.work.get({id: work_id}, {select: [\"bibliography\"]});\n            if(bibliography.length > 0){\n                this.setState({bibliography_preview: bibliography[0].bibliography});\n            } else {\n                this.setState({bibliography_preview: null});\n            }\n        }\n    }\n}\n\nexport { Ressource, SekLit };","import { Alert, Button, Row, Col, Offcanvas, Table, Form, Navbar, Container, Tabs, Tab } from \"react-bootstrap\";\nimport React from \"react\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { AutoComplete, SelectMenu, ToolKit, StatusButton, sleep, sqlDate } from \"./../elements.js\";\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            zettel_process: null,\n            lemma_letters: null,\n            ressource_work: null,\n        };\n    }\n    render(){\n        // zettel\n        let zettelBox = null;\n        if(this.state.zettel_process){\n            let zettelCharts = [];\n\n            // process\n            const zettel_process_data = {\n                labels: [\"abgeschlossen\", \"nur Lemma\", \"unbearbeitet\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_process,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            \n            zettelCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Bearbeitungsstand</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_process_data} /></div>);\n            \n            // zetteltype\n            const zettel_types_data = {\n                labels: [\"verzetteltes Material\", \"Exzerpt\", \"Index\", \"Literatur\", \"Index (unkl. Werk)\", \"Notiz\", \"kein Typ\"],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: this.state.zettel_types,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3', '#EFEFEF', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2', '#EEEEEE', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            zettelCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Typen</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={zettel_types_data} /></div>);\n\n            // created in years\n            const zettel_created_data = {\n                labels: [\"2020\", \"2021\", \"2022\"],\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"3\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>nach Jahren</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_data} /></div>);\n\n            // created in current year\n            let zettel_current_year_labels = [\"Jan.\", \"Feb.\", \"Mär.\", \"Apr.\", \"Mai\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Okt.\", \"Nov.\", \"Dez.\"];\n            zettel_current_year_labels.splice((new Date()).getMonth()+1)\n            const zettel_created_current_data = {\n                labels: zettel_current_year_labels,\n                datasets: [\n                    {\n                        label: 'verändert',\n                        data: this.state.zettel_changed_current,\n                        backgroundColor: ['#114B79'],\n                        borderColor: ['#114B79'],\n                        borderWidth: 1,\n                        /*fill: true,*/\n                        type: 'line',\n                    },\n                    {\n                        label: 'erstellt',\n                        data: this.state.zettel_created_current,\n                        backgroundColor: ['#347F9F'],\n                        borderColor: ['#347F9F'],\n                        borderWidth: 1,\n                    },\n                ],\n            };\n            zettelCharts.push(<div key=\"4\" style={{marginBottom: \"80px\", width: \"100%\", height: \"400px\"}}><h4>in diesem Jahr</h4><Bar options={{aspectRatio: false, plugins: {legend:{display: true, position: \"bottom\"}}}} data={zettel_created_current_data} /></div>);\n            \n            zettelBox = <div>{zettelCharts}</div>;\n        }\n\n        // lemma\n        let lemmaBox = null;\n        if(this.state.lemma_letters){\n            let lemmaCharts = [];\n            // nach Buchstaben\n            const lemma_letters_data = {\n                labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"Z\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_letters,\n                    backgroundColor: ['#114B79', '#347F9F', '#8FC9D9', '#D2EFF4', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#065A82', '#61A4BC', '#BCEDF6', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Buchstaben</h4><Pie options={{plugins: {legend:{display: false, position: \"bottom\"}}}} data={lemma_letters_data} /></div>);\n\n            // Filtern der Lemma nach Typ (in MLW)\n            const lemma_mlw_data = {\n                labels: [\"relevant\", \"nicht relevant\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.lemma_mlw,\n                    backgroundColor: ['#114B79', '#EAF2F3'],\n                    borderColor: ['#1B3B6F', '#E8F1F2'],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            lemmaCharts.push(<div key=\"2\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>nach Relevanz fürs Wörterbuch</h4><Pie options={{plugins: {legend:{display: true, position: \"bottom\"}}}} data={lemma_mlw_data} /></div>);\n\n            lemmaBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{lemmaCharts}</div>;\n        }\n        \n        // ressources\n        let ressourceBox = null;\n        if(this.state.ressource_work){\n            let ressourceCharts = [];\n            // Werke mit/ohne Ressourcen - Werk mit/ohne Edition: Nach Ressource-Typ sortieren.\n\n            // Volltexte pro Scans\n            const ressource_work_data = {\n                labels: [\"mit Volltext und pdf\", \"nur mit pdf\", \"ohne pdf und Volltext\", \"nicht in Benutzung\"],\n                datasets: [\n                  {\n                    label: '',\n                    data: this.state.ressource_work,\n                    backgroundColor: ['#114B79', '#347F9F', '#EAF2F3', '#FFFFFF'],\n                    borderColor: ['#1B3B6F', '#065A82', '#E8F1F2', \"#EFEFEF\"],\n                    borderWidth: 1,\n                  },\n                ],\n            };\n            ressourceCharts.push(<div key=\"1\" style={{margin: \"auto\", marginBottom: \"80px\", width: \"450px\", height: \"450px\"}}><h4>Werke nach Volltext und pdfs</h4><Pie options={{plugins: {legend:{position: \"bottom\"}}}} data={ressource_work_data} /></div>);\n\n            ressourceBox = <div style={{display: \"flex\", flexWrap: \"wrap\"}}>{ressourceCharts}</div>;\n        }\n        return <>\n        <Navbar fixed=\"bottom\" bg=\"light\">\n            <Container fluid>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        {arachne.access(\"l_edit\")&&<ToolKit menuItems={[\n                                [\"Statistik aktualisieren\", async ()=>{\n                                    if(window.confirm(\"Sollen die Statistik aktualisiert werden? Dieser Prozess dauert ca. 30 Sekunden.\")){\n                                        const reStatus = await arachne.exec(\"statistics_update\");\n                                        if(reStatus===200){\n                                            this.getNumbers();\n                                            return {status: true};\n                                        }else{\n                                            return {status: false, error: \"Die Aktualisierung war nicht erfolgreich.\"};\n                                        }\n                                    }\n                                }]\n                            ]} />}\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        <Container className=\"mainBody\">\n            <Tabs defaultActiveKey=\"lemma\" className=\"mb-3\">\n                <Tab eventKey=\"lemma\" title=\"Lemma\">{lemmaBox}</Tab>\n                <Tab eventKey=\"zettel\" title=\"Zettel\">{zettelBox}</Tab>\n                <Tab eventKey=\"ressource\" title=\"Werke und Ressourcen\">{ressourceBox}</Tab>\n            </Tabs>\n            <div style={{float: \"right\", color: \"var(--bs-gray-400\"}}>{this.state.last_updated}</div>\n        </Container>\n    </>;\n    }\n    componentDidMount(){this.getNumbers()}\n    async getNumbers(){\n        const numbers = await arachne.statistics.getAll();\n        this.setState({\n            last_updated: JSON.parse(numbers.find(i => i.name === \"last_updated\").data),\n            zettel_process: JSON.parse(numbers.find(i => i.name === \"zettel_process\").data),\n            zettel_types: JSON.parse(numbers.find(i => i.name === \"zettel_type\").data),\n            zettel_created: JSON.parse(numbers.find(i => i.name === \"zettel_created\").data),\n            zettel_changed: JSON.parse(numbers.find(i => i.name === \"zettel_changed\").data),\n            zettel_created_current: JSON.parse(numbers.find(i => i.name === \"zettel_created_current\").data),\n            zettel_changed_current: JSON.parse(numbers.find(i => i.name === \"zettel_changed_current\").data),\n            lemma_letters: JSON.parse(numbers.find(i => i.name === \"lemma_letter\").data),\n            lemma_mlw: JSON.parse(numbers.find(i => i.name === \"lemma_mlw\").data),\n            ressource_work: JSON.parse(numbers.find(i => i.name === \"ressource_work\").data)\n        });\n    }\n}\n\nclass Server extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            ocrJobs: [],\n            faszikelJobs: [],\n            users: []\n        };\n    }\n    render(){\n        let defaultActive = \"\";\n        if(arachne.access(\"ocr_jobs\")){defaultActive = \"o\"}\n        else if(arachne.access(\"faszikel\")){defaultActive = \"d\"}\n        else if(arachne.access(\"admin\")){defaultActive = \"a\"}\n        return <><Container className=\"mainBody\">\n        <Tabs defaultActiveKey={defaultActive} className=\"mb-5\">\n            {arachne.access(\"ocr_jobs\")&&<Tab eventKey=\"o\" title=\"ocr-Aufträge\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zur ocr-Erkennung.</Col>\n                </Row>\n                <Row><Col>\n                    <StatusButton value=\"neuer Zettel-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job\");\n                        if(re===200){\n                            await sleep(500);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                    <StatusButton value=\"neuer Scan-Auftrag aufgeben\" onClick={async ()=>{\n                        const re = await arachne.exec(\"ocr_job_scans\");\n                        if(re===200){\n                            await sleep(500);\n                            this.loadOcrJobs();\n                            return {status: true};\n                        } else if (re===409){\n                            return {status: false, error: \"Es ist bereits ein Auftrag aktiv! Warten Sie, bis dieser abgeschlossen ist.\"}\n                        } else{return {status: false, error: \"Es ist ein Fehler aufgetreten.\"};}\n                    }} />\n                </Col></Row>\n                <Row><Col>\n                    <Table striped width=\"100%\">\n                        <thead>\n                            <tr>\n                                <th>Datum</th>\n                                <th>Objekte</th>\n                                <th>Status</th>\n                                <th>Gesamtauftrag</th>\n                                <th>bearbeitet</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.ocrJobs.map(row=>{\n                                let status=<td className=\"text-primary\">aktiv</td>;\n                                if(row.finished===1){status=<td className=\"text-secondary\">beendet</td>}\n                                else if(new Date()-sqlDate(row.u_date)>1800000){status=<td className=\"text-warning\">inaktiv</td>}\n                                return <tr key={row.id}><td>{row.c_date.substring(0, 10)}</td><td>{row.source}</td>{status}<td>{row.total}</td><td>{Math.round(1000/row.total*row.count)/10}%</td></tr>})}\n                        </tbody>\n                    </Table>\n                </Col></Row>\n            </Tab>}\n            {arachne.access(\"faszikel\")&&<Tab eventKey=\"d\" title=\"Druckausgabe\" style={{padding: \"0 25%\"}}>\n                <Row className=\"mb-2\">\n                    <Col>Hier finden Sie die auf dem Server laufenden und abgeschlossenen Aufträge zum Erstellen der Druckausgabe.</Col>\n                </Row>\n                <Row><Col>\n                <Table striped width=\"100%\">\n                        <tbody>{this.state.faszikelJobs.map(faszikel => {\n                            if(faszikel.log){\n                                let dateArray = faszikel.date.split(\"\")\n                                dateArray[10] = \" \";\n                                dateArray[13] = \":\";\n                                dateArray[16] = \":\";\n                                let createdDate = dateArray.join(\"\").substring(0, 19);\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>{faszikel.name?faszikel.name.substring(0, faszikel.name.length-4):<i>Eintrag</i>}</b><br /><i className=\"minorTxt\">{createdDate}</i></td><td>{faszikel.name?<a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/${faszikel.name}`}>pdf</a>:null}</td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/zip`}>Artikel</a></td><td><a target=\"_blank\" href={`/file/faszikel/${faszikel.date}/log`}>log-Datei</a></td></tr>;\n                            } else {\n                                return <tr style={{verticalAlign: \"top\"}}><td style={{padding: \"10px 0px\"}}><b>Neuer Auftrag in Bearbeitung</b></td><td></td><td></td></tr>;\n                            }\n                        })}</tbody>\n                </Table>\n                </Col></Row>\n            </Tab>}\n            {arachne.access(\"admin\")&&<Tab eventKey=\"a\" title=\"Kontenverwaltung\" style={{padding: \"0 20%\"}}>\n                <Table striped width=\"100%\">\n                        <thead style={{textAlign:\"left\"}}><tr><th width=\"25%\">Name</th><th width=\"30%\">Rechte</th><th width=\"35%\">Browser</th><th width=\"10%\">Aktiv</th></tr></thead>\n                        <tbody>\n                            {this.state.users.map(u=>{return <tr key={u.id}>\n                            <td><a className=\"text-dark\" onClick={()=>{this.setState({item: u})}}>{u.first_name} {u.last_name}</a></td>\n                            <td>{JSON.parse(u.access).join(\", \")}</td>\n                            <td>{u.agent}</td>\n                            <td>{u.session_last_active&&new Date()-sqlDate(u.session_last_active)<1800000?<FontAwesomeIcon icon={faSun} color=\"gold\" style={{fontSize: \"25px\", marginLeft: \"20px\"}} />:<FontAwesomeIcon icon={faMoon} color=\"silver\" style={{fontSize: \"20px\", marginLeft: \"20px\"}} />}</td>\n                        </tr>})}\n                        </tbody>\n                </Table>\n            </Tab>}\n        </Tabs></Container>\n        {this.state.item&&<ServerAside onReload={()=>{this.loadUsers()}} onClose={()=>{this.setState({item: null})}} item={this.state.item} onUpdate={ids=>{}} />}\n        </>;\n    }\n    componentDidMount(){\n        if(arachne.access(\"admin\")){this.loadUsers()}\n        if(arachne.access(\"ocr_jobs\")){this.loadOcrJobs()}\n        if(arachne.access(\"faszikel\")){this.loadFaszikelJobs()}\n    }\n    async loadFaszikelJobs(){\n        this.setState({faszikelJobs: []});\n        const allFaszikelJobs = await arachne.exec(\"get_faszikel_jobs\", true);\n        //allFaszikelJobs.sort((a,b)=>a.date<b.date);\n        this.setState({faszikelJobs: allFaszikelJobs/*.splice(0,100)*/});\n    }\n    async loadOcrJobs(){\n        this.setState({ocrJobs: []});\n        const newOcrJobs = await arachne.ocr_jobs.getAll();\n        this.setState({ocrJobs: newOcrJobs});\n    }\n    async loadUsers(){\n        this.setState({users: []});\n        const newUsers = await arachne.user.getAll({order: [\"last_name\"]});\n        this.setState({users: newUsers});\n    }\n}\nclass ServerAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {access: JSON.parse(this.props.item.access)};\n    }\n    render(){\n        const rights = {\n            \"auth\": \"Profil aktiviert\",\n            \"admin\": \"Adminrechte\",\n            \"o_view\": \"Kommentarspalte (opera-Listen)\",\n            \"o_edit\": \"opera-Listen bearbeiten\",\n            \"z_add\": \"Zettel importieren\",\n            \"z_edit\": \"Zettel bearbeiten\",\n            \"l_edit\": \"Lemma-Liste bearbeiten\",\n            \"library\": \"Zugriff auf Bibliothek\",\n            \"e_edit\": \"Bibliothek bearbeiten\",\n            \"setup\": \"Zugriff auf Datenbanksetup\",\n            \"module\": \"Zugriff über Python-Modul\",\n            \"editor\": \"Zugriff auf Lemmastrecken-Editor\",\n            \"comment\": \"Zugriff auf Kommentarfunktion\",\n            \"comment_moderator\": \"Kommentare moderieren\",\n            \"faszikel\": \"Faszikel konvertieren\",\n            \"ocr_jobs\": \"OCR-Aufträge aufgeben\",\n        };\n        let rightList = [];\n        for(const [right, description] of Object.entries(rights)){\n            let marked = \"\";\n            if(this.state.access.includes(right)){marked = \"accessMarked\"}\n            rightList.push(<div key={right} style={{cursor: \"pointer\"}} className={marked} onClick={()=>{\n                let nAccess = this.state.access;\n                if(nAccess.includes(right)){\n                    nAccess = nAccess.map(i => {if(i!=right){return i}});\n                } else {\n                    nAccess.push(right);\n                }\n                this.setState({access: nAccess});\n            }}>{description}</div>);\n        }\n\n        return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.props.onClose()}}>\n        <Offcanvas.Header closeButton>\n            <Offcanvas.Title>{this.props.item.first_name} {this.props.item.last_name} (ID {this.props.item.id})</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n            <Container>\n                <Row className=\"mb-1\">\n                    <Col>Am {this.props.item.session_last_active} zuletzt online.</Col>\n                </Row>\n                <Row className=\"mb-3\">\n                    <Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{this.props.item.agent}</Col>\n                </Row>\n                <Row><Col><h4>Rechte</h4></Col></Row>\n                <Row className=\"mb-3\"><Col style={{border: \"1px solid var(--bs-secondary)\", borderRadius: \"2px\", color: \"var(--bs-secondary)\", margin: \"10px 0\", padding: \"10px\"}}>{rightList}</Col></Row>\n                <Row><Col><StatusButton value=\"speichern\" onClick={()=>{\n                    arachne.user.save({\n                        id: this.props.item.id,\n                        access: JSON.stringify(this.state.access)\n                    })\n                    this.props.onReload();\n                    return {status: true};\n                }} />\n                </Col><Col><Button variant=\"danger\" onClick={async ()=>{\n                    if(window.confirm(\"Soll der Account wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden!\")){\n                        await arachne.user.delete(this.props.item.id);\n                        this.props.onClose();\n                        this.props.onReload();\n                    }\n                }}>Account löschen</Button></Col></Row>\n            </Container>\n        </Offcanvas.Body></Offcanvas>;\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.item.id!=this.props.item.id){\n            this.setState({access: JSON.parse(this.props.item.access)});\n        }\n    }\n}\nclass Import extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: \"res\",\n            workLst: [],\n            pathLst: [],\n            scanWork: \"\",\n            scanWorkId: null,\n            scanType: 0,\n            scanEditor: null,\n            scanYear: null,\n            scanVolume: null,\n            scanVolumeContent: null,\n            scanSerie: null,\n            scanLibrary: null,\n            scanLocation: null,\n            scanSignature: null,\n            scanFiles: null,\n            ocrRessource: \"\",\n            ocrRessourceId: null,\n            ocrFiles: null,\n            zettelLetter: \"A\",\n            zettelType: 0,\n            zettelFiles: null,\n            zettelEditors: [[arachne.me.id, arachne.me.last_name]],\n            zettelEditorSelected: arachne.me.id,\n            zettelSuccess: null,\n        };\n    }\n    render(){\n        return <Container className=\"mainBody\">\n            <Tabs defaultActiveKey=\"r\" className=\"mb-5\">\n                <Tab eventKey=\"r\" title=\"Ressource\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Werk:</Col>\n                        <Col><AutoComplete  style={{width: \"100%\"}} value={this.state.scanWork} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{\n                                this.setState({scanWork: value, scanWorkId: id})\n                            }} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>Ressource:</Col>\n                        <Col><SelectMenu options={[[0, \"Edition (relevant)\"], [1, \"Edition (veraltet)\"], [2, \"Handschrift\"], [3, \"Alter Druck (relevant)\"], [4, \"Alter Druck (veraltet)\"], [5, \"Sonstiges\"]]} onChange={e=>{this.setState({scanType: parseInt(e.target.value)})}} /></Col>\n                    </Row>\n                    {this.state.scanType===0||this.state.scanType===1||this.state.scanType===5?[\n                        <Row key=\"0\" className=\"mb-2\">\n                            <Col xs={3}>Editor:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"1\" className=\"mb-2\">\n                            <Col xs={3}>Jahr:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"2\" className=\"mb-2\">\n                            <Col xs={3}>Band:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanVolume: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"3\" className=\"mb-2\">\n                            <Col xs={3}>Bandinhalt:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanVolumeContent: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"4\" className=\"mb-4\">\n                            <Col xs={3}>Reihe:</Col>\n                            <Col><SelectMenu options={[[0, \"\"], [1, \"Migne PL\"], [2, \"ASBen.\"], [3, \"ASBoll.\"], [4, \"AnalBoll.\"], [5, \"Mon. Boica\"], [6, \"Ma. Schatzverzeichnisse\"], [7, \"Ma. Bibliothekskataloge\"]]} onChange={e=>{this.setState({scanSerie: parseInt(e.target.value)})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    {this.state.scanType===2?[\n                        <Row key=\"5\" className=\"mb-2\">\n                            <Col xs={3}>Stadt:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"6\" className=\"mb-2\">\n                            <Col xs={3}>Bibliothek:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLibrary: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"7\" className=\"mb-4\">\n                            <Col xs={3}>Signatur:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanSignature: e.target.value})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    {this.state.scanType===3||this.state.scanType===4?[\n                        <Row key=\"8\" className=\"mb-2\">\n                            <Col xs={3}>Drucker:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanEditor: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"9\" className=\"mb-2\">\n                            <Col xs={3}>Ort:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanLocation: e.target.value})}} /></Col>\n                        </Row>,\n                        <Row key=\"10\" className=\"mb-4\">\n                            <Col xs={3}>Jahr:</Col>\n                            <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanYear: e.target.value})}} /></Col>\n                        </Row>,\n                    ]:null}\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Dateipfad:</Col>\n                        <Col><input type=\"text\" style={{width: \"100%\"}} onChange={e=>{this.setState({scanPath: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>.png-Dateien:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"image/png\" onChange={e=>{this.setState({scanFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col><StatusButton value=\"hochladen\" onClick={async ()=>{\n                    if(this.state.scanFiles==null){\n                        return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n                    } else if((this.state.scanType===0||this.state.scanType===1||this.state.scanType===5)&&(!this.state.scanEditor||!this.state.scanYear)){\n                        return {status: false, error: \"Geben Sie den Editor und das Jahr ein.\"};\n                    } else if(this.state.scanWorkId === null){\n                        return {status: false, error: \"Kein gültiges Werk ausgewählt!\"};\n                    } else if(this.state.scanPath&&this.state.scanWorkId){\n                        // create new edition\n                        let nPath = this.state.scanPath;\n                        if(nPath.substring(0,1)!=\"/\"){nPath = \"/\"+nPath}\n                        if(nPath.substring(nPath.length-1)!=\"/\"){nPath = nPath+\"/\"}\n                        const newEditionId = await arachne.edition.save({\n                            work_id: this.state.scanWorkId,\n                            ressource: this.state.scanType,\n                            editor: this.state.scanEditor,\n                            year: this.state.scanYear,\n                            volume: this.state.scanVolume,\n                            vol_cont: this.state.scanVolumeContent,\n                            serie: this.state.scanSerie,\n                            location: this.state.scanLocation,\n                            library: this.state.scanLibrary,\n                            signature: this.state.scanSignature,\n                            path: nPath,\n                            url: \"\",\n                        });\n                        // upload files\n                        if(newEditionId>0){\n                            let uploadForm = new FormData();\n                            uploadForm.append(\"edition_id\", newEditionId);\n                            uploadForm.append(\"path\", this.state.scanPath);\n                            const fLength = this.state.scanFiles.length;\n                            for(let i=0; i<fLength; i++){uploadForm.append(\"files\", this.state.scanFiles[i])}\n                            const re = await arachne.importScans(uploadForm);\n                            if(re.status===400){return {status: false, error: `Fehler beim Hochladen der Dateien. Eine neue Ressource mit ID ${newEditionId} wurde aber bereits erstellt.`};}\n                            else if(re.body.length==1){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. Eine Datei wurde übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                            else if(re.body.length>0){console.log(`Bereits auf dem Server und deshalb übersprungen: ${re.body.join(\", \")}`);return {status: true, success: `Das Hochladen war erfolgreich. ${re.body.length} Dateien wurden übersprungen (s. Konsole). Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                            else{return {status: true, success: `Eine neue Ressource mit ID ${newEditionId} wurde erstellt.`};}\n                        } else {\n                            return {status: false, error: \"Edition konnte nicht erstellt werden. Keine Bilder wurden hochgeladen.\"};\n                        }\n                    } else{return {status: false, error: \"Geben Sie einen gültigen Pfad ein!\"};}                    \n                }} /></Col>\n                    </Row>\n                </Tab>\n                <Tab eventKey=\"o\" title=\"ocr-Dateien\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Ressource:</Col>\n                        <Col><AutoComplete  style={{width: \"100%\"}} value={this.state.ocrRessource} tbl=\"scan_paths\" searchCol=\"path\" returnCol=\"path\" onChange={async (value, id)=>{\n                                this.setState({ocrRessource: value, ocrRessourceId: id})\n                            }} />{/*const paths = await arachne.scan_paths.getAll({select: [\"path\"], order: [\"path\"]}); ||||||| <SelectMenu options={this.state.pathLst} onChange={async e=>{this.setState({ocrRessource: e.target.value})}} />*/}</Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>.txt-Dateien:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"text/plain\" onChange={e=>{this.setState({ocrFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col><StatusButton type=\"button\" value=\"hochladen\" onClick={async ()=>{\n                        if(this.state.ocrFiles==null){\n                            return {status: false, error: \"Geben Sie Dateien zum Hochladen an.\"};\n                        }else if(this.state.ocrRessourceId==null){\n                            return {status: false, error: \"Wählen Sie einen Ordner aus.\"};\n                        }else{\n                            const scanLst = await arachne.scan.get({path: this.state.ocrRessource}, {select: [\"id\", \"filename\"]});\n                            //console.log(scanLst);\n                            let missLst = [];\n                            let saveLst = [];\n                            for(const file of this.state.ocrFiles){\n                                const fName = file.name.substring(0,file.name.length-4);\n                                const cScan = scanLst.find(i => i.filename == fName);\n                                if(cScan){\n                                    //console.log(cScan);\n                                    const fileTxt = await file.text();\n                                    saveLst.push({id: cScan.id, full_text: fileTxt});\n                                } else {\n                                    missLst.push(file.name);\n                                }\n                            }\n                            if(saveLst.length>0){await arachne.scan.save(saveLst)}\n                            if(missLst.length>1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: `Dateien wurden hochgeladen. ${missLst.length} Dateien konnten nicht zugewiesen werden (s. Konsole).`};}\n                            else if(missLst.length==1){console.log(`übersprungene Dateien: ${missLst.join(\", \")}`);return {status: true, success: \"Dateien wurden hochgeladen. 1 Datei konnte nicht zugewiesen werden (s. Konsole).\"};}\n                            else{return {status: true};}\n                        }\n                    }} /></Col>\n                    </Row>\n                </Tab>\n                <Tab eventKey=\"z\" title=\"Zettel\" style={{padding: \"0 25%\"}}>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Buchstabe:</Col>\n                        <Col><SelectMenu options={[[\"A\", \"A\"], [\"B\", \"B\"], [\"C\", \"C\"], [\"D\", \"D\"], [\"E\", \"E\"], [\"F\", \"F\"], [\"G\", \"G\"], [\"H\", \"H\"], [\"I\", \"I/J\"], [\"K\", \"K\"], [\"L\", \"L\"], [\"M\", \"M\"], [\"N\", \"N\"], [\"O\", \"O\"], [\"P\", \"P\"], [\"Q\", \"Q\"], [\"R\", \"R\"], [\"S\", \"S\"], [\"T\", \"T\"], [\"U\", \"U/V\"], [\"W\", \"W\"], [\"X\", \"X\"], [\"Y\", \"Y\"], [\"Z\", \"Z\"]]} onChange={e=>{this.setState({zettelLetter: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>erstellt von:</Col>\n                        <Col><SelectMenu options={this.state.zettelEditors} onChange={e=>{this.setState({zettelEditorSelected: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}>Zettel-Typ:</Col>\n                        <Col><SelectMenu options={[[0, \"Index-/Exzerpt-Zettel\"], [1, \"verzetteltes Material\"], [4, \"Literatur\"]]} onChange={e=>{this.setState({zettelType: e.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col xs={3}>Bilder:</Col>\n                        <Col><Form.Group>\n                            <Form.Control type=\"file\" multiple accept=\"image/jpeg\" onChange={e=>{this.setState({zettelFiles: e.target.files})}} />\n                        </Form.Group></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col xs={3}></Col>\n                        <Col><StatusButton value=\"Zettel hochladen\" onClick={async ()=>{\n                            if(this.state.zettelFiles==null){\n                                return {status: false, error: \"Wählen Sie Bilder zum Hochladen aus.\"};\n                            } else if(this.state.zettelFiles.length%2 != 0){\n                                return {status: false, error: \"Wählen Sie eine gerade Anzahl Bilder aus (jeweils Vorder- und Rückseiten!).\"}\n                            }else{\n                                const maxItem= 100;\n                                let cItemCount = maxItem;\n                                let cUploadIndex = -1;\n                                let uploadGroup = [];\n                                let zettelFiles = this.state.zettelFiles;\n                                //console.log(zettelFiles);\n                                // sort imgs\n                                zettelFiles = Array.from(zettelFiles);\n                                zettelFiles.sort((a, b) => {if(b.name < a.name){return 1;}else{return -1;}});\n                                //console.log(zettelFiles);\n\n                                // prepare upload groups\n                                for(let i=0; i<zettelFiles.length; i++){\n                                    if(cItemCount >= maxItem){\n                                        cItemCount = 0;\n                                        cUploadIndex ++;\n                                        uploadGroup.push(new FormData());\n                                        uploadGroup[cUploadIndex].append(\"letter\", this.state.zettelLetter);\n                                        uploadGroup[cUploadIndex].append(\"type\", this.state.zettelType);\n                                        uploadGroup[cUploadIndex].append(\"user_id_id\", this.state.zettelEditorSelected);\n                                    }\n                                    cItemCount ++;\n                                    uploadGroup[cUploadIndex].append(\"files\", zettelFiles[i]);\n                                }\n                                // loop through groups and upload!\n                                let firstId = 0;\n                                let lastId = 0;\n                                for(const uItem of uploadGroup){\n                                    const r = await arachne.importZettel(uItem);\n                                    if(firstId === 0){firstId=r[0]}\n                                    lastId = r[1];\n                                }\n                                this.setState({zettelSuccess: [firstId, lastId]});\n                                return {status: true};\n                            }\n                        }} /></Col>\n                    </Row>\n                    {this.state.zettelSuccess&&<Row>\n                        <Col><Alert variant=\"success\" onClose={()=>{this.setState({zettelSuccess: null})}} dismissible>\n                            <Alert.Heading>Hochladen erfolgreich!</Alert.Heading><p>Die neuen Zettel haben IDs zwischen <b>{this.state.zettelSuccess[0]}</b> und <b>{this.state.zettelSuccess[1]}</b>. Möchten Sie die neuen Zettel in Zettel-Datenbank <Alert.Link href=\"#\" onClick={e=>{\n                    localStorage.setItem(\"searchBox_zettel\", `[[{\"id\":0,\"c\":\"id\",\"o\":\">=\",\"v\":${this.state.zettelSuccess[0]}},{\"id\":1,\"c\":\"id\",\"o\":\"<=\",\"v\":${this.state.zettelSuccess[1]}}],1,[\"id\"]]`);\n                    this.props.loadMain(e, \"zettel\");\n                }}>öffnen</Alert.Link>?</p></Alert></Col>\n                    </Row>}\n                <Row className=\"mt-4\"><Col>Eine Anleitung zum Hochladen der Zettel finden Sie <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/09-HiwiHow:-Zettel-scannen-und-hochladen\">hier</a>.</Col></Row>\n                </Tab>\n            </Tabs>\n        </Container>;\n    }\n    componentDidMount(){\n        /*\n        const loadOptions = async () => {\n            const works = await arachne.work.get({in_use: 1}, {select: [\"id\", \"ac_web\"], order: [\"ac_web\"]});\n            let newWorkLst = [];\n            for(const work of works){\n                newWorkLst.push([work.id, work.ac_web]);\n            }\n            this.setState({workLst: newWorkLst});\n            const paths = await arachne.scan_paths.getAll({select: [\"path\"], order: [\"path\"]});\n            let newPathLst = [];\n            for(const path of paths){\n                newPathLst.push([path.path, path.path]);\n            }\n            this.setState({pathLst: newPathLst, ocrRessource: newPathLst[0][0]});\n\n        }\n        loadOptions();\n        */\n\n        if(arachne.access(\"admin\")){\n            arachne.user.getAll({order: [\"last_name\"]}).then(users=>{\n                let userLst = [];\n                for(const user of users){\n                    userLst.push([user.id, user.last_name]);\n                }\n                this.setState({zettelEditors: userLst});\n            }).catch(e=>{throw e});\n        }\n    }\n}\n\nexport { Import, Server, Statistics };","import { Form, Row, Col, Button, Navbar, Modal, Offcanvas, Container, Spinner, Accordion } from \"react-bootstrap\";\nimport React from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\nclass Zettel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {searchStatus: \"\", setupItems: null, showPreset: false, showDate: true, count:0, selectionDetail:{ids:[], currentId:null}};\n    }\n    render(){\n        const menuItems = [\n            [\"Suchergebnisse exportieren\", async ()=>{\n                const exportPdf = await arachne.zettel.search(this.state.query, {select: [\"img_path\", \"date_display\", \"ac_web\", \"lemma_display\", \"txt\"],export:true, order:this.state.queryOrder});\n                console.log(exportPdf);\n                window.open(exportPdf, \"_blank\");\n            }]\n        ];\n        if(arachne.access(\"z_edit\")){\n            menuItems.push([\"neuer Zettel erstellen\", async ()=>{\n                if(window.confirm(\"Soll ein neuer Zettel erstellt werden?\")){\n                    const newId = await arachne.zettel.save({type: 2, txt: \"Neuer Zettel\"});\n                    this.setState({setupItems: [{id: 0, c: \"id\", o: \"=\", v:newId}]});\n                }\n            }]);\n        }\n        return <>\n            <Navbar fixed=\"bottom\" bg=\"light\">\n                <Container fluid>\n                    <Navbar.Collapse className=\"justify-content-start\">\n                        <Navbar.Text>\n                            <SearchBox\n                            boxName=\"zettel\"\n                            searchQuery={(q,order) => {this.searchQuery(q,order)}}\n                            setupItems={this.state.setupItems}\n                            searchOptions={[\n                                [\"lemma\", \"Wort\"],\n                                [\"type\", \"Typ\"],\n                                [\"id\", \"ID\"],\n                                [\"ac_web\", \"Werk\"],\n                                [\"date_type\", \"Datum-Typ\"],\n                                [\"date_own\", \"eigenes Sortierdatum\"],\n                                [\"date_own_display\", \"eigenes Anzeigedatum\"],\n                                [\"auto\", \"Automatisierung\"],\n                                [\"ocr_length\", \"Textlänge\"],\n                                [\"img_path\", \"Bildpfad\"],\n                            ]}\n                            sortOptions={[['[\"id\"]', \"ID\"], ['[\"lemma\",\"lemma_nr\",\"date_sort\",\"date_type\"]', \"Datum\"], ['[\"ocr_length\"]', \"Textlänge\"]]}\n                            status={this.state.searchStatus}\n                            presetOptions={[\n                                ['[{\"id\":2,\"c\":\"lemma\",\"o\":\"=\",\"v\":\"NULL\"}]', \"Wortzuweisung\"],\n                                ['[{\"id\": 2,\"c\":\"type\",\"o\":\"=\",\"v\":\"NULL\"}]', \"Typzuweisung\"],\n                                ['[{\"id\": 2, \"c\": \"ac_web\", \"o\": \"=\", \"v\": \"NULL\"},{\"id\": 3, \"c\": \"type\", \"o\": \"!=\", \"v\": 4},{\"id\": 4, \"c\": \"type\", \"o\": \"!=\", \"v\": 6},{\"id\": 5, \"c\": \"type\", \"o\": \"!=\", \"v\": 7}]', \"Werkzuweisung\"],\n                                ['[{\"id\": 2, \"c\": \"date_type\", \"o\": \"=\", \"v\": 9},{\"id\": 3, \"c\": \"date_own\", \"o\": \"!=\", \"v\": \"NULL\"},{\"id\": 4, \"c\": \"type\", \"o\": \"!=\", \"v\": 3},{\"id\": 5, \"c\": \"type\", \"o\": \"!=\", \"v\": 6},{\"id\": 6, \"c\": \"type\", \"o\": \"!=\", \"v\": 7}]', \"Datumszuweisung\"],\n                            ]}\n                        />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                        {this.state.count>0?\n                        <Navigator loadPage={newPage=>{this.loadPage(newPage)}} currentPage={this.state.currentPage} maxPage={this.state.maxPage} />\n                        :null}\n                        </Navbar.Text>\n                        <Navbar.Text>\n                            <ToolKit menuItems={menuItems} />\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Container className=\"mainBody\">\n                <ZettelBox\n                    loadPage={newPage => {this.loadPage(newPage)}}\n                    currentElements={this.state.currentElements}\n                    count={this.state.count}\n                    currentPage={this.state.currentPage}\n                    maxPage={this.state.maxPage}\n                    presetSelection={this.state.presetSelection}\n                    gridArea={(this.state.selectionDetail.ids.length>0)?\"2/1/2/2\":\"2/1/2/3\"}\n                    showDetail={item => {\n                        this.setState({selectionDetail: item.selection, itemDetail: item.item});\n                    }}\n                    showDate={this.state.showDate}\n                />\n                {this.state.count==0?<SearchHint />:null}\n            </Container>\n            {(this.state.selectionDetail.ids.length>0)?<ZettelAside onReload={()=>{this.loadPage(this.state.currentPage)}} onClose={()=>{this.setState({selectionDetail: {ids: []}})}} selection={this.state.selectionDetail} item={this.state.itemDetail} onUpdate={ids=>{this.reloadZettel(ids)}} showDate={this.state.showDate} openNextItem={()=>{this.openNextItem()}} toggleShowDate={()=>{\n                if(this.state.showDate){this.setState({showDate: false})}\n                else{this.setState({showDate: true})}\n                \n                }} />:\"\"}\n        </>;\n    }\n    async openNextItem(){// save current element\n        let newItem = await arachne.zettel.get({id: this.state.itemDetail.id}); newItem = newItem[0];\n        let currentElements = this.state.currentElements;\n        const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n        currentElements[indexOfNewItem] = newItem;\n\n        // load next element\n        const lastIndex = this.state.currentElements.findIndex(i => i.id === this.state.itemDetail.id);\n        if(this.state.currentElements.length>lastIndex+1){\n            this.setState({currentElements: currentElements, itemDetail: this.state.currentElements[lastIndex+1], presetSelection: [this.state.currentElements[lastIndex+1].id]});\n        }\n    }\n    async reloadZettel(ids){\n        //await this.loadPage(0); // removes entry, if it doesnt match query!\n        for(const id of ids){\n            let newItem = await arachne.zettel.get({id: id}); newItem = newItem[0];\n            let currentElements = this.state.currentElements;\n            const indexOfNewItem = currentElements.findIndex(i => i.id===newItem.id)\n            currentElements[indexOfNewItem] = newItem;\n            this.setState({currentElements: currentElements, selectionDetail: {ids:ids}, itemDetail: newItem});\n        }\n    }\n    async searchQuery(newQuery, order){\n        this.setState({searchStatus: <Spinner animation=\"border\" size=\"sm\" />});\n        const count = await arachne.zettel.search(newQuery, {count:true, order:order});\n        const currentElements = await arachne.zettel.search(newQuery, {limit:50, order:order});\n        if(count[0][\"count\"]>1){this.setState({searchStatus: `${count[0][\"count\"]} Einträge gefunden.`})}\n        else if(count[0][\"count\"]===1){this.setState({searchStatus: \"1 Eintrag gefunden.\"})}\n        else{this.setState({searchStatus: \"Keine Einträge gefunden.\"})}\n        this.setState({\n            query: newQuery,\n            queryOrder: order,\n            count: count[0][\"count\"],\n            maxPage: Math.floor(count[0][\"count\"]/50)+1,\n            currentPage: 1,\n            currentElements: currentElements,\n            selectionDetail: {ids:[]}\n        });\n    }\n    async loadPage(newPage){\n        const currentElements = await arachne.zettel.search(this.state.query, {limit:50, offset:((newPage-1)*50), order:this.state.queryOrder});\n            this.setState({\n                currentPage: newPage,\n                currentElements: currentElements,\n                selectionDetail: {ids:[]}\n            });\n    }\n}\nclass ZettelBox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {selection: {currentId: null, ids:[]}}\n    }\n    render(){\n        if(this.props.count>0){\n            let cEls = [];\n            for(const cEl of this.props.currentElements){\n                cEls.push(<ZettelCard showDate={this.props.showDate} testProp={cEl.id+\"_test\"} id={cEl.id} item={cEl} key={cEl.id} />);\n            }\n\n            return (\n            <div style={{gridArea: this.props.gridArea, padding:\"0 10px\"}}>\n                {/*<Navigator loadPage={newPage=>{this.props.loadPage(newPage)}} currentPage={this.props.currentPage} maxPage={this.props.maxPage} />*/}\n                <Selector multiSelect={true} className=\"zettel_box\" selectCallback={\n                    (item, selection)=>{this.selectCallback(item, selection)}\n                } preset={this.props.presetSelection} >{cEls}</Selector>\n            </div>);\n        } else {\n            return null;\n        }\n    }\n    selectCallback(element, selection){\n        if(element){this.props.showDetail({selection: selection, item: element.props.item});}\n        else{this.props.showDetail({selection: selection, item: null});};\n    }\n}\nclass ZettelCard extends React.Component{\n    render(){\n        const zettel = this.props.item;\n        let style = {height: arachne.options.z_height+\"px\", width: arachne.options.z_width+\"px\"};\n        \n        if(zettel.img_path!=null){\n            let classList = \"\";\n            if(zettel.in_use===0){classList+=\"zettel_img no_use\"}\n            else{classList+=\"zettel_img in_use\"}\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <img alt=\"\" style={{objectFit: \"fill\", borderRadius: \"7px\"}} className={classList} src={zettel.img_path+\".jpg\"}></img>\n                {this.props.showDate?<div className=\"zettel_msg\" dangerouslySetInnerHTML={parseHTML(zettel.date_own_display?zettel.date_own_display:zettel.date_display)}></div>:null}\n                {this.props.showDate?\n                <div className=\"zettel_menu\">\n                    <span style={{float: \"left\", overflow: \"hidden\", maxHeight: \"50px\", maxWidth: \"250px\"}} dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></span>\n                    <span style={{float: \"right\"}} dangerouslySetInnerHTML={parseHTML(zettel.opus)}></span>\n                </div>\n                :null}\n            </div>;\n            return box;\n        } else {\n            //style.height = \"355px\";\n            const box =\n            <div className=\"zettel\" id={zettel.id} style={style}>\n                <div className=\"digitalZettel\">\n                    <div className='digitalZettelLemma' dangerouslySetInnerHTML={parseHTML(zettel.lemma_display)}></div>\n                    <div className='digitalZettelDate' dangerouslySetInnerHTML={parseHTML(zettel.date_display)}></div>\n                    <div className='digitalZettelWork' dangerouslySetInnerHTML={parseHTML(zettel.opus)}></div>\n                    <div className='digitalZettelText' dangerouslySetInnerHTML={parseHTML(zettel.txt)}></div>\n                </div>\n            </div>;\n            return box;\n        }\n    }\n}\nclass ZettelAside extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            comments: [],\n            addLemma: false,\n            addLemmaNext: false,\n            ressources: [],\n            batchType: 1,\n            id: this.props.item.id,\n            type: this.props.item.type,\n            date_display: this.props.item.date_display,\n            date_type: this.props.item.date_type,\n            lemma_id: this.props.item.lemma_id,\n            lemma_ac: this.props.item.lemma_ac,\n            work_id: this.props.item.work_id,\n            ac_web: this.props.item.ac_web,\n            date_own: this.props.item.date_own,\n            date_own_display: this.props.item.date_own_display,\n            txt: this.props.item.txt,\n            /* */\n            newLemma_Lemma: \"\",\n            newLemma_LemmaDisplay: \"\",\n            batch_lemma_id: null,\n            batch_lemma_ac: \"\",\n            batch_work_id: null,\n            batch_ac_web: \"\", // = work_ac\n            batch_type: null,\n            batch_project: null,\n            new_comment_txt: \"\",\n        };\n    }\n    render(){\n        if(this.state.addLemma){ // add lemma\n            return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={()=>{this.setState({addLemma: false})}}>\n                <Offcanvas.Header closeButton><Offcanvas.Title>Soll ein neues Wort erstellt werden?</Offcanvas.Title></Offcanvas.Header>\n                <Offcanvas.Body>\n                    <Row className=\"mb-4\">\n                        <Col><a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/10-WikiHow:-Umlemmatisierung\" target=\"_blank\" rel=\"noreferrer\">Hier</a> finden Sie Informationen zum Erstellen neuer Wörter.</Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Wort:</Col>\n                        <Col><input type=\"text\" value={this.state.newLemma_Lemma} onChange={event=>{this.setState({newLemma_Lemma: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col>Wort-Anzeige:</Col>\n                        <Col><input type=\"text\" value={this.state.newLemma_LemmaDisplay} onChange={event=>{this.setState({newLemma_LemmaDisplay: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Zahlzeichen:</Col>\n                        <Col><SelectMenu options={[[0, \"\"], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]]} onChange={event=>{this.setState({newLemma_Homonym: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>im Wörterbuch:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_MLW: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col>Stern:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_Stern: event.target.value})}} /></Col>\n                    </Row>\n                    <Row className=\"mb-4\">\n                        <Col>Fragezeichen:</Col>\n                        <Col><SelectMenu options={[[0, \"Nein\"], [1, \"Ja\"]]} onChange={event=>{this.setState({newLemma_LemmaFrage: event.target.value})}} /></Col>\n                    </Row>\n                    <Row>\n                        <Col><StatusButton type=\"button\" value=\"neues Wort erstellen\" onClick={async ()=>{\n                            if(this.state.newLemma_Lemma===\"\" || this.state.newLemma_Lemma.indexOf(\" \")>-1){\n                                return {status: false, error: \"Bitte ein gültiges Wort eintragen!\"}\n                            } else if(this.state.newLemma_LemmaDisplay===\"\"){\n                                return {status: false, error: \"Bitte tragen Sie eine gültige Wort-Anzeige ein!\"}\n                            } else {\n                                let newLemmaValue = {\n                                    lemma: this.state.newLemma_Lemma,\n                                    lemma_display: this.state.newLemma_LemmaDisplay,\n                                    MLW: this.state.newLemma_MLW,\n                                    Fragezeichen: this.state.newLemma_LemmaFrage,\n                                    Stern: this.state.newLemma_Stern,\n                                };\n                                if(this.state.newLemma_Homonym>0){newLemmaValue.lemma_nr=this.state.newLemma_Homonym}\n                                const newId = await arachne.lemma.save(newLemmaValue);\n                                if(this.props.selection.ids.length===1){\n                                    this.setState({lemma_ac: this.state.newLemma_LemmaDisplay, lemma_id: newId, addLemma: false});\n                                    this.saveDetail(this.state.addLemmaNext);\n                                } else {\n                                    this.setState({batch_lemma_ac: this.state.newLemma_LemmaDisplay, batch_lemma_id: newId, addLemma: false});\n                                    this.saveBatch();\n                                }\n                                return {status: true};\n                            }\n                        }} /><Button variant=\"secondary\" style={{marginLeft: \"10px\"}} onClick={()=>{this.setState({addLemma: false})}}>abbrechen</Button></Col>\n                    </Row>\n                </Offcanvas.Body>\n            </Offcanvas>;\n        } else if(this.props.selection.ids.length===1){ // single zettel\n            let cRes = [];\n            if(this.state.ressources.length>0){\n                let keyCount = -1;\n                for(const item of this.state.ressources){\n                    keyCount ++;\n                    let url = item.url;\n                    if(url===null||url===\"\"){url=`/site/argos/${item.id}`}\n                    cRes.push(<div key={keyCount}><a href={url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a></div>);\n                }\n            }\n            let dateOwn = null;\n            let dateStyle = {\n                borderTop: \"1px solid #f2f2f2\",\n                paddingTop: \"30px\",\n                display: \"grid\",\n                gridTemplateColumns: \"150px auto\",\n                gridTemplateRows: \"1fr\",\n                rowGap: \"10px\",\n                margin: \"10px 0 30px 0\"\n                };\n            if(this.state.date_type===9){\n                dateStyle.gridTemplateRows = \"1fr 1fr 1fr 1fr\";\n                dateOwn = [\n                    <Row key=\"1\" className=\"mt-4 mb-2\">\n                        <Col><span className=\"minorTxt\"><b>Achtung:</b> Dieser Zettel benötigt eine <a href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/09-HiwiHow:-Zettel-verknüpfen#anzeigedatumsortierdatum\" target=\"_blank\" rel=\"noreferrer\">eigene Datierung</a>.</span></Col>\n                    </Row>,\n                    <Row key=\"2\" className=\"mb-2\">\n                        <Col xs={4}>Sortierdatum:</Col>\n                        <Col><input style={{width:\"100%\"}} type=\"text\" value={this.state.date_own?this.state.date_own:\"\"} onChange={e=>{\n                        if(e.target.value===\"\"){\n                            this.setState({date_own: null});\n                        } else if(!isNaN(e.target.value)&&e.target.value!==\" \"){\n                            this.setState({date_own: parseInt(e.target.value)});\n                        }else{\n                            //this.props.status(\"error\", \"Sortierdatum muss eine Ganzzahl sein!\");\n                        }\n                    }} /></Col>\n                    </Row>,\n                    <Row key=\"3\" className=\"mb-4\">\n                        <Col xs={4}>Anzeigedatum:</Col>\n                        <Col><input style={{width:\"100%\"}} type=\"text\" value={this.state.date_own_display?this.state.date_own_display:\"\"} onChange={e=>{this.setState({date_own_display: e.target.value})}} /></Col>\n                    </Row>,\n                ];\n            }\n            let commentBox = null;\n            if(arachne.access(\"comment\")&&this.state.comments.length>0){\n                let commentList = [];\n                for(const comment of this.state.comments){\n                    commentList.push(<div key={comment.id} style={{marginBottom: \"10px\"}}><span className=\"minorTxt\"><b>{comment.user}</b> am {comment.c_date?comment.c_date.substring(0, 10):null}:</span><br />{comment.comment}{arachne.me.id===comment.user_id||arachne.access(\"comment_moderator\")?<i className=\"minorTxt\" style={{cursor: \"pointer\"}} onClick={async ()=>{\n                        if(window.confirm(\"Soll der Kommentar wirklich gelöscht werden? Dieser Schritt kann nicht rückgängig gemacht werden.\")){\n                            await arachne.comment.delete(comment.id);\n                            this.loadComments();\n                        }\n                        \n                    }}> (löschen)</i>:null}</div>);\n                }\n                commentBox = <div className=\"commentBox\">{commentList}</div>;\n            }\n            let newComment = null;\n            if(arachne.access(\"comment\")){\n                newComment = <div>\n                <textarea placeholder=\"neuer Kommentar\" style={{width: \"100%\", height: \"100px\"}} onChange={e=>{this.setState({new_comment_txt: e.target.value})}} value={this.state.new_comment_txt}></textarea>\n                <StatusButton style={{fontSize: \"15px\", float: \"right\", marginRight: \"60px\"}} value=\"Kommentar erstellen\" onClick={async ()=>{\n                    if(this.state.new_comment_txt!=\"\"){\n                        await arachne.comment.save({\n                            user_id: arachne.me.id,\n                            zettel_id: this.state.id,\n                            comment: this.state.new_comment_txt\n                        });\n                        this.setState({new_comment_txt: \"\"})\n                        this.loadComments();\n                        return {status: true};\n                    }else{\n                        return {status: false, error: \"Geben Sie einen Kommentar-Text ein.\"};\n                    }\n                }} />\n            </div>;\n            }\n            return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={this.props.onClose}>\n                <Offcanvas.Header closeButton><Offcanvas.Title>ID {this.state.id}</Offcanvas.Title></Offcanvas.Header>\n                <Offcanvas.Body>\n                    <Accordion defaultActiveKey={0}>\n                        <Accordion.Item eventKey={0}>\n                            <Accordion.Header>Übersicht</Accordion.Header>\n                            <Accordion.Body>\n                            <Row className=\"mb-2\">\n                                <Col xs={4}>Zetteltyp:</Col>\n                                <Col><SelectMenu style={{width: \"100%\"}} value={this.state.type?this.state.type:0} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Werk)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({type: parseInt(event.target.value)})}} classList=\"zettel_type\" /></Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col xs={4}>Wort:</Col>\n                                <Col><AutoComplete style={{width: \"100%\"}} onChange={(value, id)=>{this.setState({lemma_ac: value, lemma_id: id, newLemma_Lemma: value, newLemma_LemmaDisplay: value})}} value={this.state.lemma_ac?this.state.lemma_ac:\"\"} tbl=\"lemma\" searchCol=\"lemma\" returnCol=\"lemma_ac\" /></Col>\n                            </Row>\n                            {this.state.type!==4&&this.state.type<6&&<Row className=\"mb-2\">\n                                <Col xs={4}>Werk:</Col>\n                                <Col><AutoComplete style={{width: \"100%\"}}  value={this.state.ac_web?this.state.ac_web:\"\"} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={async (value, id)=>{\n                                    this.setState({ac_web: value, work_id: id});\n                                    const newDateType = await arachne.work.get({id: id}, {select: [\"date_type\"]});\n                                    if(newDateType.length>0){\n                                        this.setState({date_type: newDateType[0].date_type});\n                                    }\n                                }} /></Col>\n                            </Row>}\n                            {this.props.item.img_path===null&&<Row className=\"mb-2\">\n                                <Col xs={4}>Text:</Col>\n                                <Col><textarea style={{width: \"100%\"}} value={this.state.txt} onChange={e=>{this.setState({txt: e.target.value})}}></textarea></Col>\n                            </Row>}\n                            {this.state.type!==4&&this.state.type<6&&this.state.work_id>0&&<Row className=\"mb-2\">\n                                <Col xs={4}>Datierung:</Col>\n                                <Col><span style={{width: \"100%\"}} dangerouslySetInnerHTML={parseHTML(this.state.date_display)}></span></Col>\n                            </Row>}\n                            {dateOwn}\n                            <Row className=\"mb-3 mt-4\">\n                                <Col>\n                                    <Button style={{marginRight: \"10px\"}} onClick={()=>{this.saveDetail(true)}}>speichern&weiter</Button>\n                                    <StatusButton onClick={()=>{return this.saveDetail();}} value=\"speichern\" />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col><Form>\n                                    <Form.Check size=\"sm\" type=\"switch\" label=\"Details ein-/ausblenden\" checked={this.props.showDate} onChange={this.props.toggleShowDate} />\n                                </Form></Col>\n                            </Row>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                        {cRes.length>0&&<Accordion.Item eventKey={1}>\n                            <Accordion.Header>Ressourcen</Accordion.Header>\n                            <Accordion.Body>\n                                {cRes}\n                            </Accordion.Body>\n                        </Accordion.Item>}\n                        <Accordion.Item eventKey={2}>\n                            <Accordion.Header>Kommentare</Accordion.Header>\n                            <Accordion.Body>\n                                {commentBox}\n                                {newComment}\n                            </Accordion.Body>\n                        </Accordion.Item>\n                        {arachne.access(\"admin\")&&<Accordion.Item eventKey={3}>\n                            <Accordion.Header>Zettel löschen</Accordion.Header>\n                            <Accordion.Body>\n                            <Button variant=\"danger\" onClick={async ()=>{\n                                if(window.confirm(\"Soll der Zettel wirklich gelöscht werden? Dieser Schritt kann nicht mehr rückgängig gemacht werden.\")){\n                                    await arachne.zettel.delete(this.state.id);\n                                    this.props.onClose();\n                                    this.props.onReload();\n                                }\n                            }}>Zettel löschen</Button>\n                            </Accordion.Body>\n                        </Accordion.Item>}\n                    </Accordion>\n\n\n\n\n                </Offcanvas.Body>\n            </Offcanvas>\n        } else { // batch\n            let inputType = null;\n            switch(this.state.batchType){\n                case 1:\n                    inputType = <AutoComplete onChange={(value, id)=>{this.setState({batch_lemma_ac: value, batch_lemma_id: id})}} value={this.state.batch_lemma_ac} tbl=\"lemma\"  searchCol=\"lemma\" returnCol=\"lemma_ac\" />;\n                    break;\n                case 2:\n                    inputType = <AutoComplete  value={this.state.batch_ac_web} tbl=\"work\" searchCol=\"ac_web\" returnCol=\"ac_web\" onChange={(value, id)=>{this.setState({batch_ac_web: value, batch_work_id: id})}} />;\n                    break;\n                case 3:\n                    inputType = \n                    <SelectMenu style={{width: \"86%\"}} options={[[0, \"...\"],[1, \"verzettelt\"],[2,\"Exzerpt\"],[3,\"Index\"],[4,\"Literatur\"], [6, \"Index (unkl. Stelle)\"], [7, \"Notiz\"]]} onChange={event=>{this.setState({batch_type: event.target.value})}} />;\n                    break;\n                default:\n                    inputType = <div style={{color: \"red\"}}>Unbekannter Stapel-Typ!</div>         \n            }\n            let batch_options = [[1, \"Wort\"],[2, \"Werk\"],[3,\"Zettel-Typ\"]];\n            return <Offcanvas show={true} placement=\"end\" scroll={true} backdrop={false} onHide={this.props.onClose}>\n                <Offcanvas.Header closeButton><Offcanvas.Title>{this.props.selection.ids.length} Zettel</Offcanvas.Title></Offcanvas.Header>\n                <Offcanvas.Body>\n                    <Row className=\"mb-3\">\n                        <Col><SelectMenu style={{width: \"110px\"}} options={batch_options} onChange={event=>{\n                                this.setState({batchType: parseInt(event.target.value)})\n                                }} /></Col>\n                        <Col>{inputType}</Col>\n                    </Row>\n                    <Row>\n                        <Col><StatusButton value=\"für alle übernehmen\" onClick={()=>{return this.saveBatch()}} /></Col>\n                    </Row>\n                </Offcanvas.Body>\n            </Offcanvas>;\n        }\n    }\n    componentDidMount(){\n        // loading ressources\n        if(this.state.work_id>0){\n            arachne.edition.get({work_id: this.state.work_id})\n            .then(res => {\n                this.setState({ressources: res});\n            })\n            .catch(e => {throw e;});\n        }\n        // loading comments\n        this.loadComments();\n    }\n    componentDidUpdate(){\n        if(this.state.id!==this.props.item.id){\n            if(this.props.item.work_id>0){\n                arachne.edition.get({work_id: this.props.item.work_id})\n                .then(res => {\n                    this.setState({\n                        addLemma: false,\n                        id: this.props.item.id,\n                        type: this.props.item.type,\n                        date_display: this.props.item.date_display,\n                        date_type: this.props.item.date_type,\n                        lemma_id: this.props.item.lemma_id,\n                        lemma_ac: this.props.item.lemma_ac,\n                        work_id: this.props.item.work_id,\n                        ac_web: this.props.item.ac_web,\n                        date_own: this.props.item.date_own,\n                        date_own_display: this.props.item.date_own_display,\n                        ressources: res\n                    });\n                })\n                .catch(e => {throw e;});\n            } else {this.setState({addLemma: false,\n                id: this.props.item.id,\n                type: this.props.item.type,\n                date_display: this.props.item.date_display,\n                date_type: this.props.item.date_type,\n                lemma_id: this.props.item.lemma_id,\n                lemma_ac: this.props.item.lemma_ac,\n                work_id: this.props.item.work_id,\n                ac_web: this.props.item.ac_web,\n                date_own: this.props.item.date_own,\n                date_own_display: this.props.item.date_own_display,\n                ressources: []})\n            }\n            // loading comments\n            if(arachne.access(\"comment\")){\n                arachne.comment.get({zettel_id: this.state.id})\n                .then(comments=>{this.setState({comments: comments})})\n                .catch(e=>{throw e;});\n            }\n        }\n    }\n    async loadComments(){\n        if(arachne.access(\"comment\")){\n            const comments = await arachne.comment.get({zettel_id: this.state.id});\n            this.setState({comments: comments});\n        }\n    }\n    async saveBatch(){\n        let skipSave = false;\n        let newValue = \"\";\n        let newKey = \"\";\n        if(this.state.batchType===1&&this.state.batch_lemma_id!=null){newKey=\"lemma_id\";newValue=this.state.batch_lemma_id}\n        else if(this.state.batchType===1&&this.state.batch_lemma_id===null&&this.state.batch_lemma_ac!=\"\"){skipSave=true;this.setState({addLemma: true, newLemma_Lemma:this.state.batch_lemma_ac, newLemma_LemmaDisplay: this.state.batch_lemma_ac});return {status: true};}\n        else if(this.state.batchType===2&&this.state.batch_work_id!=null){newKey=\"work_id\";newValue=this.state.batch_work_id}\n        else if(this.state.batchType===3&&this.state.batch_type!=null){newKey=\"type\";newValue=this.state.batch_type}\n        else if(this.state.batchType===4&&this.state.batch_project!=null){newKey=\"project\";newValue=this.state.batch_project}\n        else{skipSave=true;return {status: false, error: \"Bitte tragen Sie einen gültigen Wert ein.\"};}\n        if(skipSave===false&&this.state.batchType<4){\n            let newValueLst = [];\n            for(const cId of this.props.selection.ids){\n                let newValueObj = {id: cId, user_id: arachne.me.id}\n                newValueObj[newKey] = newValue;\n                newValueLst.push(newValueObj);\n            }\n            await arachne.zettel.save(newValueLst);\n            this.props.onUpdate(this.props.selection.ids);\n            return {status: true};\n        }else if(skipSave===false&&this.state.batchType===4){\n            const defaultArticle = await arachne.article.get({\"project_id\": this.state.batch_project, sort_nr: 0, parent_id: 0});\n            if(defaultArticle.length!=1){alert(\"Ein Fehler ist aufgetreten: Die Zettel können dem Projekt nicht zugewiesen werden!\")}\n            else{\n                const newLinks = this.props.selection.ids.map(i=>{return {zettel_id: i, article_id: defaultArticle[0].id};});\n                await arachne.zettel_lnk.save(newLinks);\n                return {status: true};\n            }\n        }\n    }\n    async saveDetail(next=false){\n        if(!(this.state.date_own_display===null||this.state.date_own_display===\"\")&&(this.state.date_own===null||this.state.date_own===\"\")){\n            return {status: -1, error: \"Sie dürfen kein Anzeigedatum setzen, ohne ein Sortierdatum anzugeben!\"}\n        } else if(this.state.work_id>0&&this.state.date_type===9&&((this.state.date_own!=\"\"&&this.state.date_own!=null&&!Number.isInteger(this.state.date_own))||((this.state.date_own===\"\"||this.state.date_own===null)&&!window.confirm(\"Achtung: Dieser Zettel benötigt eine Datierung! Soll er trotzdem ohne Datierung gespeichert werden?\")))){\n            return {status: 0};\n        } else if (this.state.date_type===9&&!(this.state.date_own===null||this.state.date_own===\"\")&&(this.state.date_own_display===null||this.state.date_own_display===\"\")){\n            return {status: -1, error: \"Setzen Sie ein Anzeigedatum für den Zettel!\"};\n        } else {\n            let nVals = {\n                id: this.state.id,\n                type: this.state.type,\n                user_id: arachne.me.id,\n                txt: this.state.txt,\n            };\n            if(this.state.work_id>0){nVals.work_id = this.state.work_id}\n            else{nVals.work_id = null}\n\n            if(this.state.lemma_id===null&&this.state.newLemma_Lemma!==\"\"){this.setState({addLemma: true, addLemmaNext: next})}\n            else if(this.state.lemma_id>0){nVals.lemma_id = this.state.lemma_id}\n            else {nVals.lemma_id = null}\n            if(this.state.date_type===9&&this.state.date_own!=\"\"&&Number.isInteger(this.state.date_own)){\n                nVals.date_own = this.state.date_own;\n                nVals.date_own_display = this.state.date_own_display;\n            } else {\n                nVals.date_own = null;\n                nVals.date_own_display = null;\n            }\n            await arachne.zettel.save(nVals)\n            if(next){\n                document.querySelector(\"select.zettel_type\").focus();\n                this.props.openNextItem();\n            }else{\n                this.props.onUpdate([this.state.id]);\n            }\n            return {status: 1};\n        }\n    }\n}\n\nexport { Zettel };","import { Card, Form, Row, Col, Button, Navbar, Offcanvas, Container, Placeholder, Spinner, Accordion, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { arachne } from \"./../arachne.js\";\nimport { Navigator, parseHTML, SearchBox, SelectMenu, Selector, AutoComplete, ToolKit, SearchHint, StatusButton } from \"./../elements.js\";\n\nfunction Zettel(props){\n    const [verso, setVerso] = useState(\"\");\n    const [editions, setEditons] = useState([]);\n\n    useEffect(async ()=>{\n        if(props.z.work_id>0){\n            const newEditions = await arachne.edition.get({work_id: props.z.work_id}, {select: [\"id\", \"label\", \"url\"]});\n            let editionsLst = [];\n            for(const e of newEditions){\n                editionsLst.push(<ListGroup.Item key={e.id}><a href={e.url===\"\"?`/site/viewer/${e.id}`:e.url} target=\"_blank\">{e.label}</a></ListGroup.Item>);\n            }\n            setEditons(editionsLst)\n        }\n    }, []);\n    return <Card style={{width: \"30rem\"}} className=\"mb-3\">\n        <FontAwesomeIcon style={{position: \"absolute\", top: \"12px\", right: \"10px\"}} onClick={()=>{if(verso===\"\"){setVerso(\"v\")}else{setVerso(\"\")}}} icon={faSync} />\n        <Card.Header style={{height: \"41px\"}} dangerouslySetInnerHTML={parseHTML(props.z.opus)}></Card.Header>\n        <Card.Img variant=\"bottom\" src={`${props.z.img_path}${verso}.jpg`} />\n        {/*<Card.Img variant=\"bottom\" src={`http://localhost:8080${props.z.img_path}${verso}.jpg`} />*/}\n        <Card.Body>\n            <Card.Text><ListGroup horizontal>{editions}</ListGroup></Card.Text>\n        </Card.Body>\n    </Card>;\n}\nfunction Detail(props){\n    const [lemma, setLemma] = useState(null);\n    const [vZettels, setVZettels] = useState(null);\n    const [eZettels, setEZettels] = useState(null);\n    const [iZettels, setIZettels] = useState(null);\n    const [rZettels, setRZettels] = useState(null);\n\n    useEffect(async ()=>{\n        setLemma(null);\n        setVZettels(null);\n        setEZettels(null);\n        setIZettels(null);\n        setRZettels(null);\n        const newLemma = await arachne.lemma.get({id: props.lemma_id});\n        setLemma(newLemma[0]);\n        setVZettels(await arachne.zettel.get({lemma_id: props.lemma_id, type: 1}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n        setEZettels(await arachne.zettel.get({lemma_id: props.lemma_id, type: 2}, {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n        setIZettels(await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"3\"}, {c: \"type\", o: \"<=\", v: \"6\"}, {c: \"type\", o: \"!=\", v: \"4\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n        setRZettels(await arachne.zettel.search([{c: \"lemma_id\", o: \"=\", v: props.lemma_id}, {c: \"type\", o: \">=\", v: \"4\"}, {c: \"type\", o: \"!=\", v: \"6\"}], {order: [\"date_sort\",\"date_type\"], select: [\"id\", \"opus\", \"img_path\", \"work_id\"]}));\n    }, [props.lemma_id])\n    return (lemma?<>\n        <h1 dangerouslySetInnerHTML={parseHTML(lemma.lemma_display)}></h1>\n        <Container>\n            {lemma.dicts&&<Row>\n                <Col xs={2}>Wörterbücher:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.dicts)}></Col>\n            </Row>}\n            {lemma.comment&&<Row className=\"mb-4\">\n                <Col xs={2}>Kommentar:</Col>\n                <Col dangerouslySetInnerHTML={parseHTML(lemma.comment)}></Col>\n            </Row>}\n            <Row>\n                <Col>\n                    <Accordion defaultActiveKey=\"\">\n                    <Accordion.Item eventKey=\"v\">\n                        <Accordion.Header>verzetteles Material&nbsp;{vZettels?<span>({vZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{vZettels?vZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"e\">\n                        <Accordion.Header>Exzerpt-Zettel&nbsp;{eZettels?<span>({eZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{eZettels?eZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"i\">\n                        <Accordion.Header>Index-Zettel&nbsp;{iZettels?<span>({iZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{iZettels?iZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"r\">\n                        <Accordion.Header>restliche Zettel&nbsp;{rZettels?<span>({rZettels.length})</span>:<Spinner size=\"sm\" animation=\"border\" />}</Accordion.Header>\n                        <Accordion.Body>\n                            <Container className=\"d-flex flex-wrap justify-content-center\">{rZettels?rZettels.map(z=>{return <Zettel key={z.id} z={z} />;}):null}</Container></Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                </Col>\n            </Row>\n        </Container>\n    </>:null);\n}\nfunction IndexBox(props){\n    const [words, setWords] = useState(<Placeholder animation=\"glow\">\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n        <ListGroup.Item><Placeholder sm={8} /></ListGroup.Item>\n    </Placeholder>);\n    const [detailId, setDetailId] = useState(null);\n\n    useEffect(async ()=>{\n        const words_raw = await arachne.lemma.getAll({select: [\"id\", \"lemma_display\"], order: [\"lemma\"]});\n        let newWords = [];\n        for(const w of words_raw){\n            newWords.push(<ListGroup.Item action onClick={async ()=>{\n                setDetailId(w.id);\n            }} key={w.id} dangerouslySetInnerHTML={parseHTML(w.lemma_display)}></ListGroup.Item>);\n        }\n        setWords(newWords);\n    }, []);\n    return <Container className=\"mainBody\">\n        <Row>\n            <Col xs={3} style={{height: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                <ListGroup variant=\"flush\">\n                    {words}\n                </ListGroup>\n            </Col>\n            <Col style={{height: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                {detailId?<Detail lemma_id={detailId} />:null}\n            </Col>\n        </Row>\n    </Container>\n}\n\nexport { IndexBox };","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nimport { ChangeLog } from \"./changelog.js\";\nimport { Lemma } from \"./lemma.js\";\nimport { Opera } from \"./opera.js\";\nimport { Ressource, SekLit } from \"./ressources.js\";\nimport { Account } from \"./../settings.js\";\nimport { Import, Server, Statistics } from \"./server.js\"\nimport { Zettel } from \"./zettel.js\";\nimport { IndexBox } from \"./indexbox.js\";\n\nfunction arachneTbls(){\n    return [\"author\", \"edition\", \"lemma\", \"opera_maiora\", \"opera_minora\", \"scan\", \"scan_lnk\", \"work\", \"zettel\", \"user\", \"seklit\", \"project\", \"article\", \"zettel_lnk\", \"statistics\", \"scan_paths\", \"ocr_jobs\", \"comment\"];\n}\nfunction MainBody(props){\n    let main = null;\n    switch(props?props.res:null){\n        case null:\n            main = <ChangeLog />;\n            break;\n        case \"ressources\":\n            main = <Ressource />;\n            break;\n        case \"seklit\":\n            main = <SekLit />;\n            break;\n        case \"stats\":\n            main = <Statistics />;\n            break;\n        case \"server\":\n            main = <Server />;\n            break;\n        case \"lemma\":\n            main = <Lemma loadMain={(e,res)=>{props.loadMain(e, res)}} />;\n            break;\n        case \"maiora\":\n            main = <Opera listName=\"opera_maiora\" />;\n            break;\n        case \"minora\":\n            main = <Opera listName=\"opera_minora\" />;\n            break;\n        case \"import\":\n            main = <Import loadMain={(e,res)=>{props.loadMain(e, res)}} />;\n            break;\n        case \"zettel\":\n            main = <Zettel />;\n            break;\n        case \"indexbox\":\n            main = <IndexBox />;\n            break;\n        case \"account\":\n            main = <Account />;\n            break;\n        default:\n            main = <div>Unbekannter Menü-Punkt {props.res}</div>;\n    }\n    return main;\n}\n\nfunction MainNavBar(props){\n    return <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Container fluid>\n            <Navbar.Brand style={{cursor: \"pointer\"}} onClick={e=>{props.loadMain(e, null)}}>dMLW</Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Nav>\n                    <NavDropdown title=\"Zettel- und Wortmaterial\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"zettel\")}}>Zettel-Datenbank</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"lemma\")}}>Wortliste</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Verzeichnisse\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"maiora\")}}><i>opera maiora</i>-Liste</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"minora\")}}><i>opera minora</i>-Liste</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"ressources\")}}>Ressourcen</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"seklit\")}}>Sekundärliteratur</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Einstellungen\">\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"account\")}}>Konto</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"server\")}}>Server</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"import\")}}>Import</NavDropdown.Item>\n                        <NavDropdown.Item onClick={e => {props.loadMain(e, \"stats\")}}>Statistik</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link>\n                    <FontAwesomeIcon icon={faSignOutAlt} onClick={e => {props.loadMain(e, \"logout\")}} title=\"abmelden\" />\n                </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n</Navbar>;\n}\nexport { arachneTbls, MainBody, MainNavBar };","import { Row, Col, Form, Container } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport { arachne } from \"./arachne.js\";\nimport { StatusButton } from \"./elements.js\";\n\nfunction Account(){\n    const [firstName, setFirstName] = useState(arachne.me.first_name);\n    const [lastName, setLastName] = useState(arachne.me.last_name);\n    const [email, setEmail] = useState(arachne.me.email);\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [zWidth, setZWidth] = useState(arachne.options.z_width);\n    const [actionKey, setActionKey] = useState(arachne.options.action_key);\n\n    const displaySettings = [\n        <Row key={1} className=\"mb-2\">\n            <Col xs={2}>Breite der Zettel:</Col>\n            <Col><Form.Range min=\"400\" max=\"600\" size=\"sm\" value={zWidth} onChange={e=>{\n                arachne.setOptions(\"z_width\", e.target.value);\n                arachne.setOptions(\"z_height\", 350/500*parseInt(e.target.value));\n                setZWidth(e.target.value);\n            }}/></Col>\n        </Row>\n    ];\n    return <Container style={{padding: \"0 10% 0 10%\"}}>\n        <Row><Col><h3>Persönliche Daten</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Vorname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={firstName} onChange={e=>{setFirstName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>Nachname:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={lastName} onChange={e=>{setLastName(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>Email-Adresse:</Col>\n            <Col><Form.Control type=\"text\" size=\"sm\" value={email} onChange={e=>{setEmail(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        first_name: firstName,\n                        last_name: lastName,\n                        email: email,\n                    });\n                    const reUser = await arachne.getUser();\n                    arachne.me = reUser;\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Passwort</h3></Col></Row>\n        <Row className=\"mb-2\">\n            <Col xs={2}>altes Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={oldPassword} onChange={e=>{setOldPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}>neues Passwort:</Col>\n            <Col><Form.Control type=\"password\" size=\"sm\" value={newPassword} onChange={e=>{setNewPassword(e.target.value)}} /></Col>\n        </Row>\n        <Row className=\"mb-4\">\n            <Col xs={2}></Col>\n            <Col><StatusButton value=\"speichern\" onClick={async ()=>{\n                    await arachne.user.save({\n                        id: arachne.me.id,\n                        old_password: oldPassword,\n                        new_password: newPassword\n                    });\n                    return {status: 1};\n                }} /></Col>\n        </Row>\n\n\n        <Row><Col><h3>Darstellung und Benutzung</h3></Col></Row>\n        <Row className=\"mb-4\">\n            <Col xs={4}>Funktionstaste für Tastenkürzel</Col>\n            <Col>\n                <Form.Select size=\"sm\" value={actionKey} onChange={e=>{arachne.setOptions(\"action_key\", e.target.value);setActionKey(e.target.value)}}>\n                    <option value=\"alt\">Alt</option>\n                    <option value=\"ctrl\">Strg</option>\n                    <option value=\"cmd\">Befehlstaste</option>\n                </Form.Select>\n                <small>Eine Liste mit Tastenkürzeln finden Sie <a className=\"text-primary\" href=\"https://gitlab.lrz.de/haeberlin/dmlw/-/wikis/06-Argos#tastenkürzel\" target=\"_blank\">hier</a>.</small>\n            </Col>\n        </Row>\n        {displaySettings}\n    </Container>;\n}\n\nexport { Account };"],"names":["ChangeLog","Container","Alert","variant","icon","faEllipsisV","href","target","faSearch","Lemma","props","state","item","newItemCreated","Navbar","fixed","bg","fluid","className","boxName","searchQuery","q","order","setupItems","this","searchOptions","sortOptions","status","searchStatus","count","loadPage","newPage","currentPage","maxPage","arachne","menuItems","window","confirm","lemma_display","lemma","newId","setState","id","c","o","v","LemmaBox","loadMain","e","res","currentElements","gridArea","showDetail","LemmaAside","onUpdate","reloadEntry","onReload","onClose","newItem","indexOfNewItem","findIndex","i","newQuery","Spinner","animation","size","limit","query","queryOrder","Math","floor","selectionDetail","ids","offset","React","selection","currentId","cEls","cEl","push","onDoubleClick","find","parseInt","closest","title","dangerouslySetInnerHTML","parseHTML","onClick","localStorage","setItem","dicts","comment","style","padding","Table","striped","width","textAlign","lemma_nr","MLW","Stern","Fragezeichen","Offcanvas","show","placement","scroll","backdrop","onHide","closeButton","Row","Col","type","value","onChange","event","parseHTMLPreview","options","height","replace","rel","indexOf","error","newLemmaValue","marginLeft","lemma_id","allZettel","zettelRemoveList","zettel","length","OperaAside","author","work","authorLst","display","gridTemplateColumns","rowGap","margin","fontSize","full","nAuthor","abbr","abbr_sort","date_display","date_sort","date_type","in_use","select","works","workLst","nWork","author_display","author_id","citation","bibliography_cit","reference","is_maior","txt_info","bibliography","worksDict","loadOptions","authors","newAuthorLst","getAuthor","newAuthor","work_id","getWork","newWork","prevProps","OperaBox","oLst","cHitId","resultsOnPage","trLst","tblLst","j","scrollRef","cTrLst","cTr","hitStyle","hits","some","ref","stopPropagation","data","borderBottom","paddingBottom","placeholderTable","Placeholder","sm","listName","toolKitMenu","getLst","OperaSearchBox","setHitIndex","hitIndex","setHits","Form","marginRight","accessKey","placeholder","onKeyUp","keyCode","box","document","querySelector","scrollIntoView","behavior","move","maxHits","prevState","current","block","useState","setQuery","useEffect","gotoNextResult","step","search","nHits","border","Button","borderRadius","disabled","faBackward","borderTop","cursor","faForward","Opera","pageMax","getAll","oMax","createOperaLists","editionLst","editions_id","editionsId","JSON","parse","editionsURL","editions_url","editionsLabel","editions_label","iE","cURL","arrow","faExternalLinkAlt","cLabel","SekLit","titel","SekLitBox","SekLitAside","kennziffer","signatur","alte_signatur","name","vorname","reihe","ort","jahr","weitere_angaben","zusatz","xs","signature","Ressource","ressource","editor","year","Date","getFullYear","RessourceBox","RessourceAside","resTypes","url","label","opus","ac_web","volume","vol_cont","serie","location","library","path","aspect_ratio","bibliography_preview","tbl","searchCol","returnCol","updateBibliography","dir_name","backgroundColor","substring","Statistics","zettel_process","lemma_letters","ressource_work","zettelBox","zettelCharts","zettel_process_data","labels","datasets","borderColor","borderWidth","marginBottom","plugins","legend","position","zettel_types_data","zettel_types","zettel_created_data","zettel_changed","zettel_created","aspectRatio","zettel_current_year_labels","splice","getMonth","zettel_created_current_data","zettel_changed_current","zettel_created_current","lemmaBox","lemmaCharts","lemma_letters_data","lemma_mlw_data","lemma_mlw","flexWrap","ressourceBox","ressourceCharts","ressource_work_data","getNumbers","Tabs","defaultActiveKey","Tab","eventKey","float","color","last_updated","numbers","Server","ocrJobs","faszikelJobs","users","defaultActive","re","sleep","loadOcrJobs","map","row","finished","sqlDate","u_date","c_date","source","total","round","faszikel","log","dateArray","date","split","createdDate","join","verticalAlign","u","first_name","last_name","access","agent","session_last_active","faSun","faMoon","ServerAside","loadUsers","loadFaszikelJobs","allFaszikelJobs","newOcrJobs","newUsers","rightList","right","description","marked","includes","nAccess","Object","entries","stringify","Import","tab","pathLst","scanWork","scanWorkId","scanType","scanEditor","scanYear","scanVolume","scanVolumeContent","scanSerie","scanLibrary","scanLocation","scanSignature","scanFiles","ocrRessource","ocrRessourceId","ocrFiles","zettelLetter","zettelType","zettelFiles","zettelEditors","zettelEditorSelected","zettelSuccess","scanPath","multiple","accept","files","nPath","newEditionId","uploadForm","FormData","append","fLength","body","console","success","scanLst","missLst","saveLst","file","fName","cScan","filename","text","fileTxt","full_text","cItemCount","cUploadIndex","uploadGroup","Array","from","sort","a","b","firstId","lastId","uItem","r","dismissible","then","userLst","user","catch","Zettel","showPreset","showDate","export","exportPdf","open","txt","presetOptions","ZettelBox","presetSelection","itemDetail","ZettelAside","reloadZettel","openNextItem","toggleShowDate","lastIndex","ZettelCard","testProp","multiSelect","selectCallback","preset","element","img_path","classList","alt","objectFit","src","date_own_display","overflow","maxHeight","maxWidth","comments","addLemma","addLemmaNext","ressources","batchType","lemma_ac","date_own","newLemma_Lemma","newLemma_LemmaDisplay","batch_lemma_id","batch_lemma_ac","batch_work_id","batch_ac_web","batch_type","batch_project","new_comment_txt","newLemma_Homonym","newLemma_MLW","newLemma_Stern","newLemma_LemmaFrage","saveDetail","saveBatch","cRes","keyCount","dateOwn","isNaN","commentBox","commentList","user_id","loadComments","newComment","zettel_id","Accordion","newDateType","checked","inputType","skipSave","newValue","newKey","newValueLst","cId","newValueObj","sort_nr","parent_id","defaultArticle","alert","newLinks","article_id","next","Number","isInteger","nVals","focus","verso","setVerso","editions","setEditons","z","newEditions","editionsLst","ListGroup","Card","top","faSync","horizontal","Detail","setLemma","vZettels","setVZettels","eZettels","setEZettels","iZettels","setIZettels","rZettels","setRZettels","newLemma","IndexBox","words","setWords","detailId","setDetailId","words_raw","newWords","w","action","arachneTbls","MainBody","main","MainNavBar","Nav","NavDropdown","faSignOutAlt","Account","firstName","setFirstName","lastName","setLastName","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","zWidth","setZWidth","actionKey","setActionKey","displaySettings","min","max","reUser","old_password","new_password"],"sourceRoot":""}